{"version":3,"file":"static/js/75.1987aaed.chunk.js","mappings":"2IAGA,MAAMA,EAAoB,IAAIC,IAAI,CAC9B,UACA,WACA,SACA,a,0DCLJ,MAAMC,EAAoB,CACtBC,KAAM,SACNC,UAAW,IACXC,QAAS,GACTC,UAAW,IAQTC,EAAsB,CACxBJ,KAAM,YACNK,SAAU,IAMRC,EAAO,CACTN,KAAM,YACNM,KAAM,CAAC,IAAM,GAAK,IAAM,GACxBD,SAAU,IAERE,EAAuBA,CAACC,EAAQC,KAAoB,IAAlB,UAAEC,GAAWD,EACjD,OAAIC,EAAUC,OAAS,EACZP,EAEFQ,EAAAA,EAAeC,IAAIL,GACjBA,EAASM,WAAW,SAxBG,CAClCd,KAAM,SACNC,UAAW,IACXC,QAAoB,IAsBaQ,EAAU,GAtBnB,EAAIK,KAAKC,KAAK,KAAO,GAC7Cb,UAAW,IAsBDJ,EAEHO,CAAI,E,wBCpCf,MAAMW,GACO,ECDPC,EAAaC,GAAoB,OAAVA,EAC7B,SAASC,EAAiBV,EAASD,EAAmCY,GAAe,IAAhD,OAAEC,EAAM,WAAEC,EAAa,QAAQd,EAChE,MAAMe,EAAoBd,EAAUe,OAAOP,GACrCQ,EAAQJ,GAAyB,SAAfC,GAAyBD,EAAS,IAAM,EAC1D,EACAE,EAAkBb,OAAS,EACjC,OAAQe,QAA2BC,IAAlBN,EAEXA,EADAG,EAAkBE,EAE5B,C,wBCTA,SAASE,EAAKC,GACV,IAAIC,EACJ,MAAO,UACYH,IAAXG,IACAA,EAASD,KACNC,EAEf,C,sDCIA,MAAMC,EAAeA,CAACZ,EAAOa,IAEZ,WAATA,MAKiB,kBAAVb,IAAsBc,MAAMC,QAAQf,OAE1B,kBAAVA,IACNgB,EAAAA,EAAQC,KAAKjB,IAAoB,MAAVA,GACvBA,EAAML,WAAW,UCP1B,MAAMuB,EACFC,WAAAA,CAAW7B,GAAmH,IAAlH,SAAE8B,GAAW,EAAI,MAAEC,EAAQ,EAAC,KAAExC,EAAO,YAAW,OAAEsB,EAAS,EAAC,YAAEmB,EAAc,EAAC,WAAElB,EAAa,UAAWmB,GAASjC,EAExHkC,KAAKC,WAAY,EACjBD,KAAKE,qBAAsB,EAC3BF,KAAKG,UAAYC,EAAAA,EAAKC,MACtBL,KAAKD,QAAU,CACXH,WACAC,QACAxC,OACAsB,SACAmB,cACAlB,gBACGmB,GAEPC,KAAKM,uBACT,CAWAC,aAAAA,GACI,OAAKP,KAAKQ,YAEHR,KAAKQ,WAAaR,KAAKG,UA/BZ,GAgCZH,KAAKQ,WAFAR,KAAKG,SAIpB,CAMA,YAAIM,GAIA,OAHKT,KAAKU,WAAcV,KAAKE,sBACzBS,EAAAA,EAAAA,KAEGX,KAAKU,SAChB,CAMAE,mBAAAA,CAAoB7C,EAAWW,GAC3BsB,KAAKQ,WAAaJ,EAAAA,EAAKC,MACvBL,KAAKE,qBAAsB,EAC3B,MAAM,KAAEb,EAAI,KAAEhC,EAAI,SAAEwD,EAAQ,MAAEhB,EAAK,WAAEiB,EAAU,SAAEC,EAAQ,YAAEC,GAAiBhB,KAAKD,QAKjF,IAAKiB,IC7Db,SAAoBjD,EAAWsB,EAAMhC,EAAMwD,GAMvC,MAAMI,EAAiBlD,EAAU,GACjC,GAAuB,OAAnBkD,EACA,OAAO,EAMX,GAAa,YAAT5B,GAA+B,eAATA,EACtB,OAAO,EACX,MAAM6B,EAAiBnD,EAAUA,EAAUC,OAAS,GAC9CmD,EAAqB/B,EAAa6B,EAAgB5B,GAClD+B,EAAqBhC,EAAa8B,EAAgB7B,GAGxD,OAFAgC,EAAAA,EAAAA,GAAQF,IAAuBC,EAAoB,6BAA6B/B,WAAc4B,UAAuBC,OAAoBD,+DAA4EA,8BAA2CC,oCAE3PC,IAAuBC,KA9BhC,SAA6BrD,GACzB,MAAMuD,EAAUvD,EAAU,GAC1B,GAAyB,IAArBA,EAAUC,OACV,OAAO,EACX,IAAK,IAAIuD,EAAI,EAAGA,EAAIxD,EAAUC,OAAQuD,IAClC,GAAIxD,EAAUwD,KAAOD,EACjB,OAAO,CAEnB,CAyBWE,CAAoBzD,IAAwB,WAATV,GAAqBwD,EACnE,CDoC6BY,CAAW1D,EAAWsB,EAAMhC,EAAMwD,GAAW,CAE9D,GAAIvC,IAAkCuB,EAIlC,OAHa,OAAbkB,QAAkC,IAAbA,GAA+BA,EAAStC,EAAiBV,EAAWiC,KAAKD,QAASrB,IACxF,OAAfoC,QAAsC,IAAfA,GAAiCA,SACxDd,KAAK0B,yBAKL1B,KAAKD,QAAQrC,SAAW,CAEhC,CACA,MAAMiE,EAAoB3B,KAAK4B,aAAa7D,EAAWW,IAC7B,IAAtBiD,IAEJ3B,KAAKU,UAAY,CACb3C,YACAW,mBACGiD,GAEP3B,KAAK6B,iBACT,CACAA,cAAAA,GAAmB,CAMnBC,IAAAA,CAAKC,EAASC,GACV,OAAOhC,KAAKiC,uBAAuBH,KAAKC,EAASC,EACrD,CACA1B,qBAAAA,GACIN,KAAKiC,uBAAyB,IAAIC,SAASH,IACvC/B,KAAK0B,uBAAyBK,CAAO,GAE7C,E,cE3GJ,MAAMI,EAAyB,EAC/B,SAASC,EAAsBC,EAAcC,EAAGhB,GAC5C,MAAMiB,EAAQnE,KAAKoE,IAAIF,EAAIH,EAAwB,GACnD,OAAOM,EAAAA,EAAAA,GAAkBnB,EAAUe,EAAaE,GAAQD,EAAIC,EAChE,C,cCFA,MAAMG,EAAU,KACVC,EAAc,IACdC,EAAc,GACdC,EAAa,IACbC,EAAa,EACnB,SAASC,EAAUjF,GAA6D,IACxEkF,EACAC,GAFY,SAAEvF,EAAW,IAAG,OAAEwF,EAAS,IAAI,SAAErC,EAAW,EAAC,KAAEsC,EAAO,GAAIrF,GAG1EuD,EAAAA,EAAAA,GAAQ3D,IAAY0F,EAAAA,EAAAA,GAAsBR,GAAc,8CACxD,IAAIS,EAAe,EAAIH,EAIvBG,GAAeC,EAAAA,EAAAA,GAAMT,EAAYC,EAAYO,GAC7C3F,GAAW4F,EAAAA,EAAAA,GAAMX,EAAaC,GAAaW,EAAAA,EAAAA,GAAsB7F,IAC7D2F,EAAe,GAIfL,EAAYQ,IACR,MAAMC,EAAmBD,EAAeH,EAClCK,EAAQD,EAAmB/F,EAC3BiG,EAAIF,EAAmB5C,EACvB+C,EAAIC,EAAgBL,EAAcH,GAClCS,EAAI1F,KAAK2F,KAAKL,GACpB,OAAOhB,EAAWiB,EAAIC,EAAKE,CAAC,EAEhCb,EAAcO,IACV,MACME,EADmBF,EAAeH,EACP3F,EAC3BsG,EAAIN,EAAQ7C,EAAWA,EACvBoD,EAAI7F,KAAK8F,IAAIb,EAAc,GAAKjF,KAAK8F,IAAIV,EAAc,GAAK9F,EAC5DyG,EAAI/F,KAAK2F,KAAKL,GACdU,EAAIP,EAAgBzF,KAAK8F,IAAIV,EAAc,GAAIH,GAErD,QADgBL,EAASQ,GAAgBd,EAAU,GAAK,EAAI,KACzCsB,EAAIC,GAAKE,GAAMC,CAAC,IAOvCpB,EAAYQ,GACEpF,KAAK2F,KAAKP,EAAe9F,KACxB8F,EAAe3C,GAAYnD,EAAW,GACzCgF,EAEZO,EAAcO,GACApF,KAAK2F,KAAKP,EAAe9F,IACIA,EAAWA,GAAvCmD,EAAW2C,KAI9B,MACMA,EAmBV,SAAyBR,EAAUC,EAAYoB,GAC3C,IAAIlF,EAASkF,EACb,IAAK,IAAI9C,EAAI,EAAGA,EAAI+C,EAAgB/C,IAChCpC,GAAkB6D,EAAS7D,GAAU8D,EAAW9D,GAEpD,OAAOA,CACX,CAzByBoF,CAAgBvB,EAAUC,EAD1B,EAAIvF,GAGzB,GADAA,GAAW0F,EAAAA,EAAAA,GAAsB1F,GAC7B8G,MAAMhB,GACN,MAAO,CACHlG,UAAW,IACXC,QAAS,GACTG,YAGH,CACD,MAAMJ,EAAYc,KAAK8F,IAAIV,EAAc,GAAKL,EAC9C,MAAO,CACH7F,YACAC,QAAwB,EAAf8F,EAAmBjF,KAAKC,KAAK8E,EAAO7F,GAC7CI,WAER,CACJ,CACA,MAAM4G,EAAiB,GAQvB,SAAST,EAAgBL,EAAcH,GACnC,OAAOG,EAAepF,KAAKC,KAAK,EAAIgF,EAAeA,EACvD,CClFA,MAAMoB,EAAe,CAAC,WAAY,UAC5BC,EAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,EAAa5E,EAAS6E,GAC3B,OAAOA,EAAKC,MAAMC,QAAyB9F,IAAjBe,EAAQ+E,IACtC,CAuBA,SAASC,EAAMjH,GAAkD,IAAjD,UAAEC,EAAS,UAAEiH,EAAS,UAAExH,KAAcuC,GAASjC,EAC3D,MAAMmH,EAASlH,EAAU,GACnBmH,EAASnH,EAAUA,EAAUC,OAAS,GAKtCmH,EAAQ,CAAEC,MAAM,EAAO5G,MAAOyG,IAC9B,UAAE3H,EAAS,QAAEC,EAAO,KAAE4F,EAAI,SAAEzF,EAAQ,SAAEmD,EAAQ,uBAAEwE,GA9B1D,SAA0BtF,GACtB,IAAIuF,EAAgB,CAChBzE,SAAU,EACVvD,UAAW,IACXC,QAAS,GACT4F,KAAM,EACNkC,wBAAwB,KACrBtF,GAGP,IAAK4E,EAAa5E,EAAS2E,IACvBC,EAAa5E,EAAS0E,GAAe,CACrC,MAAMc,EAAUxC,EAAWhD,GAC3BuF,EAAgB,IACTA,KACAC,EACHpC,KAAM,GAEVmC,EAAcD,wBAAyB,CAC3C,CACA,OAAOC,CACX,CASsFE,CAAiB,IAC5FzF,EACHc,WAAW0C,EAAAA,EAAAA,GAAsBxD,EAAQc,UAAY,KAEnD4E,EAAkB5E,GAAY,EAC9BwC,EAAe9F,GAAW,EAAIa,KAAKC,KAAKf,EAAY6F,IACpDuC,EAAeR,EAASD,EACxBU,GAAsBpC,EAAAA,EAAAA,GAAsBnF,KAAKC,KAAKf,EAAY6F,IAQlEyC,EAAkBxH,KAAKyH,IAAIH,GAAgB,EAGjD,IAAII,EACJ,GAHAtI,IAAcA,EAAYoI,EAAkB,IAAO,GACnDZ,IAAcA,EAAYY,EAAkB,KAAQ,IAEhDvC,EAAe,EAAG,CAClB,MAAM0C,EAAclC,EAAgB8B,EAAqBtC,GAEzDyC,EAAiBxD,IACb,MAAMU,EAAW5E,KAAK2F,KAAKV,EAAesC,EAAsBrD,GAChE,OAAQ4C,EACJlC,IACOyC,EACCpC,EAAesC,EAAsBD,GACrCK,EACA3H,KAAK4H,IAAID,EAAczD,GACvBoD,EAAetH,KAAK6H,IAAIF,EAAczD,GAAG,CAE7D,MACK,GAAqB,IAAjBe,EAELyC,EAAiBxD,GAAM4C,EACnB9G,KAAK2F,KAAK4B,EAAsBrD,IAC3BoD,GACID,EAAkBE,EAAsBD,GAAgBpD,OAEpE,CAED,MAAM4D,EAAoBP,EAAsBvH,KAAKC,KAAKgF,EAAeA,EAAe,GACxFyC,EAAiBxD,IACb,MAAMU,EAAW5E,KAAK2F,KAAKV,EAAesC,EAAsBrD,GAE1D6D,EAAW/H,KAAKgI,IAAIF,EAAoB5D,EAAG,KACjD,OAAQ4C,EACHlC,IACKyC,EACEpC,EAAesC,EAAsBD,GACrCtH,KAAKiI,KAAKF,GACVD,EACIR,EACAtH,KAAKkI,KAAKH,IAClBD,CAAiB,CAEjC,CACA,MAAO,CACHK,mBAAoBlB,GAAyB3H,GAAmB,KAChE8I,KAAOlE,IACH,MAAMhB,EAAUwE,EAAcxD,GAC9B,GAAK+C,EAmBDF,EAAMC,KAAO9C,GAAK5E,MAnBO,CACzB,IAAI+I,EAAkB,EAMlBpD,EAAe,IACfoD,EACU,IAANnE,GACMc,EAAAA,EAAAA,GAAsBqC,GACtBrD,EAAsB0D,EAAexD,EAAGhB,IAEtD,MAAMoF,EAA2BtI,KAAKyH,IAAIY,IAAoBjJ,EACxDmJ,EAA+BvI,KAAKyH,IAAIX,EAAS5D,IAAY0D,EACnEG,EAAMC,KACFsB,GAA4BC,CACpC,CAKA,OADAxB,EAAM3G,MAAQ2G,EAAMC,KAAOF,EAAS5D,EAC7B6D,CAAK,EAGxB,CC3HA,SAASyB,EAAO9I,GAAiK,IAAhK,UAAEC,EAAS,SAAE8C,EAAW,EAAG,MAAEgG,EAAQ,GAAG,aAAEC,EAAe,IAAG,cAAEC,EAAgB,GAAE,gBAAEC,EAAkB,IAAG,aAAEC,EAAY,IAAEb,EAAG,IAAE5D,EAAG,UAAEwC,EAAY,GAAG,UAAExH,GAAYM,EAC3K,MAAMmH,EAASlH,EAAU,GACnBoH,EAAQ,CACVC,MAAM,EACN5G,MAAOyG,GAGLiC,EAAmBC,QACTnI,IAARoH,EACO5D,OACCxD,IAARwD,GAEGpE,KAAKyH,IAAIO,EAAMe,GAAK/I,KAAKyH,IAAIrD,EAAM2E,GAD/Bf,EAC0C5D,EAEzD,IAAI4E,EAAYP,EAAQhG,EACxB,MAAMwG,EAAQpC,EAASmC,EACjBlC,OAA0BlG,IAAjBiI,EAA6BI,EAAQJ,EAAaI,GAK7DnC,IAAWmC,IACXD,EAAYlC,EAASD,GACzB,MAAMqC,EAAahF,IAAO8E,EAAYhJ,KAAK2F,KAAKzB,EAAIwE,GAC9CS,EAAcjF,GAAM4C,EAASoC,EAAUhF,GACvCkF,EAAiBlF,IACnB,MAAMoB,EAAQ4D,EAAUhF,GAClBmF,EAASF,EAAWjF,GAC1B6C,EAAMC,KAAOhH,KAAKyH,IAAInC,IAAUsB,EAChCG,EAAM3G,MAAQ2G,EAAMC,KAAOF,EAASuC,CAAM,EAQ9C,IAAIC,EACAC,EACJ,MAAMC,EAAsBtF,IAjCL6E,SAkCAhC,EAAM3G,WAlCSQ,IAARoH,GAAqBe,EAAIf,QAAiBpH,IAARwD,GAAqB2E,EAAI3E,KAoCrFkF,EAAsBpF,EACtBqF,EAAW5C,EAAO,CACdhH,UAAW,CAACoH,EAAM3G,MAAO0I,EAAgB/B,EAAM3G,QAC/CqC,SAAUuB,EAAsBmF,EAAYjF,EAAG6C,EAAM3G,OACrDjB,QAASwJ,EACTzJ,UAAW0J,EACXhC,YACAxH,cACF,EAGN,OADAoK,EAAmB,GACZ,CACHrB,mBAAoB,KACpBC,KAAOlE,IAOH,IAAIuF,GAAkB,EAUtB,OATKF,QAAoC3I,IAAxB0I,IACbG,GAAkB,EAClBL,EAAclF,GACdsF,EAAmBtF,SAMKtD,IAAxB0I,GAAqCpF,GAAKoF,EACnCC,EAASnB,KAAKlE,EAAIoF,KAGxBG,GAAmBL,EAAclF,GAC3B6C,EACX,EAGZ,CChEA,MAAM2C,EAAaA,CAACxF,EAAGyF,EAAIC,OAAU,EAAM,EAAMA,EAAK,EAAMD,GAAMzF,GAAK,EAAM0F,EAAK,EAAMD,IAAOzF,EAAI,EAAMyF,GACrGzF,EACE2F,EAAuB,KACvBC,EAA2B,GAkBjC,SAASC,EAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAOC,EAAAA,EACX,MAAMC,EAAYC,GArBtB,SAAyBC,EAAGC,EAAYC,EAAYT,EAAKE,GACrD,IAAIQ,EACAC,EACAxH,EAAI,EACR,GACIwH,EAAWH,GAAcC,EAAaD,GAAc,EACpDE,EAAWhB,EAAWiB,EAAUX,EAAKE,GAAOK,EACxCG,EAAW,EACXD,EAAaE,EAGbH,EAAaG,QAEZ3K,KAAKyH,IAAIiD,GAAYb,KACxB1G,EAAI2G,GACV,OAAOa,CACX,CAK6BC,CAAgBN,EAAI,EAAG,EAAGN,EAAKE,GAExD,OAAQhG,GAAY,IAANA,GAAiB,IAANA,EAAUA,EAAIwF,EAAWW,EAASnG,GAAI+F,EAAKE,EACxE,CC9CA,MAAMU,EAASd,EAAY,IAAM,EAAG,EAAG,GACjCe,EAAUf,EAAY,EAAG,EAAG,IAAM,GAClCgB,EAAYhB,EAAY,IAAM,EAAG,IAAM,G,kCCA7C,MAAMiB,EAAUjB,EAAY,IAAM,KAAM,IAAM,KACxCkB,GAASC,EAAAA,EAAAA,GAAcF,GACvBG,GAAYC,EAAAA,EAAAA,GAAaH,GCEzBI,GAAe,CACjBC,OAAQlB,EAAAA,EACRS,OAAM,EACNE,UAAS,EACTD,QAAO,EACPS,OAAM,KACNC,UAAS,KACTC,QAAO,KACPR,OAAM,EACNE,UAAS,EACTH,QAAO,EACPU,WCjBgBC,IAAOA,GAAK,GAAK,EAAI,GAAMV,EAAOU,GAAK,IAAO,EAAI3L,KAAK8F,IAAI,GAAI,IAAM6F,EAAI,MDmBvFC,GAA8BC,IAChC,GAAI3K,MAAMC,QAAQ0K,GAAa,EAE3BC,EAAAA,EAAAA,GAAgC,IAAtBD,EAAWjM,OAAc,2DACnC,MAAOmM,EAAIC,EAAIC,EAAIC,GAAML,EACzB,OAAO9B,EAAYgC,EAAIC,EAAIC,EAAIC,EACnC,CACK,MAA0B,kBAAfL,IAEZC,EAAAA,EAAAA,QAAuClL,IAA7ByK,GAAaQ,GAA2B,wBAAwBA,MACnER,GAAaQ,IAEjBA,CAAU,E,oCEhCrB,SAASM,GAASR,EAAGS,EAAGlI,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDyH,EAAc,GAATS,EAAIT,GAASzH,EACzBA,EAAI,GACGkI,EACPlI,EAAI,EAAI,EACDyH,GAAKS,EAAIT,IAAM,EAAI,EAAIzH,GAAK,EAChCyH,CACX,C,qCCbA,SAASU,GAAa9G,EAAGC,GACrB,OAAQmG,GAAOA,EAAI,EAAInG,EAAID,CAC/B,CCSA,MAAM+G,GAAiBA,CAACC,EAAMC,EAAIzD,KAC9B,MAAM0D,EAAWF,EAAOA,EAClBG,EAAO3D,GAAKyD,EAAKA,EAAKC,GAAYA,EACxC,OAAOC,EAAO,EAAI,EAAI1M,KAAKC,KAAKyM,EAAK,EAEnCC,GAAa,CAACC,GAAAA,EAAKC,GAAAA,EAAMC,GAAAA,GAE/B,SAASC,GAAOC,GACZ,MAAM/N,GAFY8J,EAEQiE,EAFFL,GAAWM,MAAMhO,GAASA,EAAKoC,KAAK0H,MAA1CA,MAIlB,IADA9F,EAAAA,EAAAA,GAAQiK,QAAQjO,GAAO,IAAI+N,0EACtBE,QAAQjO,GACT,OAAO,EACX,IAAIkO,EAAQlO,EAAKmO,MAAMJ,GAKvB,OAJI/N,IAAS6N,GAAAA,IAETK,EFZR,SAAmBzN,GAAwC,IAAvC,IAAE2N,EAAG,WAAEC,EAAU,UAAEC,EAAS,MAAEC,GAAO9N,EACrD2N,GAAO,IACPC,GAAc,IACdC,GAAa,IACb,IAAIE,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GAAKL,EAGA,CACD,MAAMlB,EAAImB,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrC3B,EAAI,EAAI4B,EAAYnB,EAC1BqB,EAAMtB,GAASR,EAAGS,EAAGiB,EAAM,EAAI,GAC/BK,EAAQvB,GAASR,EAAGS,EAAGiB,GACvBM,EAAOxB,GAASR,EAAGS,EAAGiB,EAAM,EAAI,EACpC,MAVII,EAAMC,EAAQC,EAAOJ,EAWzB,MAAO,CACHE,IAAKzN,KAAK4N,MAAY,IAANH,GAChBC,MAAO1N,KAAK4N,MAAc,IAARF,GAClBC,KAAM3N,KAAK4N,MAAa,IAAPD,GACjBH,QAER,CEbgBK,CAAWV,IAEhBA,CACX,CACA,MAAMW,GAAWA,CAACvB,EAAMC,KACpB,MAAMuB,EAAWhB,GAAOR,GAClByB,EAASjB,GAAOP,GACtB,IAAKuB,IAAaC,EACd,OAAO3B,GAAaE,EAAMC,GAE9B,MAAMyB,EAAU,IAAKF,GACrB,OAAQhF,IACJkF,EAAQR,IAAMnB,GAAeyB,EAASN,IAAKO,EAAOP,IAAK1E,GACvDkF,EAAQP,MAAQpB,GAAeyB,EAASL,MAAOM,EAAON,MAAO3E,GAC7DkF,EAAQN,KAAOrB,GAAeyB,EAASJ,KAAMK,EAAOL,KAAM5E,GAC1DkF,EAAQT,OAAQU,EAAAA,GAAAA,GAAUH,EAASP,MAAOQ,EAAOR,MAAOzE,GACjD8D,GAAAA,EAAKsB,UAAUF,GACzB,E,0BC3CL,MAAMG,GAAkB,IAAIrP,IAAI,CAAC,OAAQ,WCUzC,SAASmP,GAAU3I,EAAGC,GAClB,OAAQmG,IAAM0C,EAAAA,GAAAA,GAAY9I,EAAGC,EAAGmG,EACpC,CACA,SAAS2C,GAAS/I,GACd,MAAiB,kBAANA,EACA2I,GAEW,kBAAN3I,GACLgJ,EAAAA,GAAAA,GAAmBhJ,GACpB8G,GACAW,GAAAA,EAAM3L,KAAKkE,GACPuI,GACAU,GAELtN,MAAMC,QAAQoE,GACZkJ,GAEW,kBAANlJ,EACLyH,GAAAA,EAAM3L,KAAKkE,GAAKuI,GAAWY,GAE/BrC,EACX,CACA,SAASoC,GAASlJ,EAAGC,GACjB,MAAMmJ,EAAS,IAAIpJ,GACbqJ,EAAYD,EAAO/O,OACnBiP,EAAatJ,EAAEuJ,KAAI,CAAC/F,EAAG5F,IAAMmL,GAASvF,EAATuF,CAAYvF,EAAGvD,EAAErC,MACpD,OAAQwI,IACJ,IAAK,IAAIxI,EAAI,EAAGA,EAAIyL,EAAWzL,IAC3BwL,EAAOxL,GAAK0L,EAAW1L,GAAGwI,GAE9B,OAAOgD,CAAM,CAErB,CACA,SAASD,GAAUnJ,EAAGC,GAClB,MAAMmJ,EAAS,IAAKpJ,KAAMC,GACpBqJ,EAAa,CAAC,EACpB,IAAK,MAAMnI,KAAOiI,OACC/N,IAAX2E,EAAEmB,SAAiC9F,IAAX4E,EAAEkB,KAC1BmI,EAAWnI,GAAO4H,GAAS/I,EAAEmB,GAAX4H,CAAiB/I,EAAEmB,GAAMlB,EAAEkB,KAGrD,OAAQqC,IACJ,IAAK,MAAMrC,KAAOmI,EACdF,EAAOjI,GAAOmI,EAAWnI,GAAKqC,GAElC,OAAO4F,CAAM,CAErB,CAcA,MAAMH,GAAaA,CAAC3H,EAAQC,KACxB,MAAMiI,EAAW3N,EAAAA,EAAQ4N,kBAAkBlI,GACrCmI,GAAcC,EAAAA,EAAAA,GAAoBrI,GAClCsI,GAAcD,EAAAA,EAAAA,GAAoBpI,GAIxC,OAHuBmI,EAAYG,QAAQC,IAAIzP,SAAWuP,EAAYC,QAAQC,IAAIzP,QAC9EqP,EAAYG,QAAQpC,MAAMpN,SAAWuP,EAAYC,QAAQpC,MAAMpN,QAC/DqP,EAAYG,QAAQE,OAAO1P,QAAUuP,EAAYC,QAAQE,OAAO1P,OAE3DwO,GAAgBtO,IAAI+G,KACpBsI,EAAYI,OAAO3P,QACnBwO,GAAgBtO,IAAIgH,KAChBmI,EAAYM,OAAO3P,OD5EpC,SAAuBiH,EAAQC,GAC3B,OAAIsH,GAAgBtO,IAAI+G,GACZ8E,GAAOA,GAAK,EAAI9E,EAASC,EAGzB6E,GAAOA,GAAK,EAAI7E,EAASD,CAEzC,CCsEmB2I,CAAc3I,EAAQC,IAE1B2I,EAAAA,GAAAA,GAAKhB,GA3BpB,SAAoB5H,EAAQC,GACxB,IAAI4I,EACJ,MAAMC,EAAgB,GAChBC,EAAW,CAAE5C,MAAO,EAAGqC,IAAK,EAAGC,OAAQ,GAC7C,IAAK,IAAInM,EAAI,EAAGA,EAAI2D,EAAOyI,OAAO3P,OAAQuD,IAAK,CAC3C,MAAMlE,EAAO6H,EAAO+I,MAAM1M,GACpB2M,EAAcjJ,EAAOuI,QAAQnQ,GAAM2Q,EAAS3Q,IAC5C8Q,EAAoD,QAArCL,EAAK7I,EAAO0I,OAAOO,UAAiC,IAAPJ,EAAgBA,EAAK,EACvFC,EAAcxM,GAAK4M,EACnBH,EAAS3Q,IACb,CACA,OAAO0Q,CACX,CAe6BK,CAAWf,EAAaE,GAAcA,EAAYI,QAASR,KAGhF9L,EAAAA,EAAAA,IAAQ,EAAM,mBAAmB4D,WAAgBC,6KAC1CuF,GAAaxF,EAAQC,GAChC,ECvFJ,SAASmJ,GAAI1D,EAAMC,EAAIb,GACnB,GAAoB,kBAATY,GACO,kBAAPC,GACM,kBAANb,EACP,OAAOuC,EAAAA,GAAAA,GAAU3B,EAAMC,EAAIb,GAG/B,OADc2C,GAAS/B,EAChB2D,CAAM3D,EAAMC,EACvB,CC6BA,SAAS2D,GAAYC,EAAOzB,GAAqD,IAA3CzJ,MAAOmL,GAAU,EAAI,KAAE9Q,EAAI,MAAE2Q,GAAOI,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1E,MAAMC,EAAcH,EAAMxQ,OAM1B,IALAkM,EAAAA,EAAAA,GAAUyE,IAAgB5B,EAAO/O,OAAQ,wDAKrB,IAAhB2Q,EACA,MAAO,IAAM5B,EAAO,GACxB,GAAoB,IAAhB4B,GAAqBH,EAAM,KAAOA,EAAM,GACxC,MAAO,IAAMzB,EAAO,GAEpByB,EAAM,GAAKA,EAAMG,EAAc,KAC/BH,EAAQ,IAAIA,GAAOI,UACnB7B,EAAS,IAAIA,GAAQ6B,WAEzB,MAAMC,EAjDV,SAAsB9B,EAAQpP,EAAMmR,GAChC,MAAMD,EAAS,GACTE,EAAeD,GAAeT,GAC9BW,EAAYjC,EAAO/O,OAAS,EAClC,IAAK,IAAIuD,EAAI,EAAGA,EAAIyN,EAAWzN,IAAK,CAChC,IAAI+M,EAAQS,EAAahC,EAAOxL,GAAIwL,EAAOxL,EAAI,IAC/C,GAAI5D,EAAM,CACN,MAAMsR,EAAiB3P,MAAMC,QAAQ5B,GAAQA,EAAK4D,IAAMiH,EAAAA,EAAO7K,EAC/D2Q,GAAQT,EAAAA,GAAAA,GAAKoB,EAAgBX,EACjC,CACAO,EAAOK,KAAKZ,EAChB,CACA,OAAOO,CACX,CAoCmBM,CAAapC,EAAQpP,EAAM2Q,GACpCU,EAAYH,EAAO7Q,OACnBoR,EAAgBjI,IAClB,IAAI5F,EAAI,EACR,GAAIyN,EAAY,EACZ,KAAOzN,EAAIiN,EAAMxQ,OAAS,KAClBmJ,EAAIqH,EAAMjN,EAAI,IADOA,KAKjC,MAAM8N,GAAkBC,EAAAA,GAAAA,GAASd,EAAMjN,GAAIiN,EAAMjN,EAAI,GAAI4F,GACzD,OAAO0H,EAAOtN,GAAG8N,EAAgB,EAErC,OAAOZ,EACAtH,GAAMiI,GAAa9L,EAAAA,EAAAA,GAAMkL,EAAM,GAAIA,EAAMG,EAAc,GAAIxH,IAC5DiI,CACV,CCtEA,SAASG,GAAcC,GACnB,MAAMC,EAAS,CAAC,GAEhB,OCFJ,SAAoBA,EAAQC,GACxB,MAAMtJ,EAAMqJ,EAAOA,EAAOzR,OAAS,GACnC,IAAK,IAAIuD,EAAI,EAAGA,GAAKmO,EAAWnO,IAAK,CACjC,MAAMoO,GAAiBL,EAAAA,GAAAA,GAAS,EAAGI,EAAWnO,GAC9CkO,EAAOP,MAAK5C,EAAAA,GAAAA,GAAUlG,EAAK,EAAGuJ,GAClC,CACJ,CDLIC,CAAWH,EAAQD,EAAIxR,OAAS,GACzByR,CACX,CEIA,SAAS1R,GAASD,GAA4E,IAA3E,SAAEJ,EAAW,IAAKK,UAAW8R,EAAc,MAAEC,EAAK,KAAEnS,EAAO,aAAcG,EAKxF,MAAMiS,ECfapS,IACZ2B,MAAMC,QAAQ5B,IAA4B,kBAAZA,EAAK,GDclBqS,CAAcrS,GAChCA,EAAKuP,IAAIlD,IACTA,GAA2BrM,GAK3BwH,EAAQ,CACVC,MAAM,EACN5G,MAAOqR,EAAe,IAKpBI,EE7BV,SAA8BR,EAAQ/R,GAClC,OAAO+R,EAAOvC,KAAKgD,GAAMA,EAAIxS,GACjC,CF2B0ByS,CAGtBL,GAASA,EAAM9R,SAAW6R,EAAe7R,OACnC8R,EACAP,GAAcM,GAAiBnS,GAC/B0S,EAAoB7B,GAAY0B,EAAeJ,EAAgB,CACjElS,KAAM2B,MAAMC,QAAQwQ,GACdA,GA9BSpC,EA+BKkC,EA/BGQ,EA+BaN,EA9BjCpC,EAAOT,KAAI,IAAMmD,GAAUlH,IAAWmH,OAAO,EAAG3C,EAAO3P,OAAS,MAD3E,IAAuB2P,EAAQ0C,EAiC3B,MAAO,CACH9J,mBAAoB7I,EACpB8I,KAAOlE,IACH6C,EAAM3G,MAAQ4R,EAAkB9N,GAChC6C,EAAMC,KAAO9C,GAAK5E,EACXyH,GAGnB,CG7CA,MAAMoL,GAAmBC,IACrB,MAAMC,EAAgB3S,IAAA,IAAC,UAAE4S,GAAW5S,EAAA,OAAK0S,EAAOE,EAAU,EAC1D,MAAO,CACHC,MAAOA,IAAMC,EAAAA,GAAMJ,OAAOC,GAAe,GACzCI,KAAMA,KAAMC,EAAAA,EAAAA,IAAYL,GAKxBpQ,IAAKA,IAAO0Q,EAAAA,GAAUC,aAAeD,EAAAA,GAAUL,UAAYtQ,EAAAA,EAAKC,MACnE,ECCC4Q,GAAa,CACfC,MAAOtK,EACPA,QAAO,EACPuK,MAAOpT,GACPA,UAAWA,GACXgH,OAAMA,GAEJqM,GAAqBC,GAAYA,EAAU,IAMjD,MAAMC,WAA4B5R,EAC9BC,WAAAA,CAAYI,GACRwR,MAAMxR,GAINC,KAAKwR,SAAW,KAIhBxR,KAAKyR,WAAa,KAIlBzR,KAAK0R,YAAc,EAInB1R,KAAK2R,cAAgB,EAMrB3R,KAAK4R,iBAAmB,UAIxB5R,KAAK6R,UAAY,KACjB7R,KAAKmF,MAAQ,OAKbnF,KAAK6Q,KAAO,KAGR,GAFA7Q,KAAK8R,SAASC,SACd/R,KAAKC,WAAY,EACE,SAAfD,KAAKmF,MACL,OACJnF,KAAKgS,WACL,MAAM,OAAEC,GAAWjS,KAAKD,QACxBkS,GAAUA,GAAQ,EAEtB,MAAM,KAAE5S,EAAI,YAAE6S,EAAW,QAAEC,EAAO,UAAEpU,GAAciC,KAAKD,QACjDqS,GAAkC,OAAZD,QAAgC,IAAZA,OAAqB,EAASA,EAAQE,mBAAqBA,EAAAA,EAE3GrS,KAAK8R,SAAW,IAAIM,EAAmBrU,GADpBuU,CAACzT,EAAmBH,IAAkBsB,KAAKY,oBAAoB/B,EAAmBH,IACvCW,EAAM6S,EAAaC,GACjFnS,KAAK8R,SAASS,iBAClB,CACA3Q,YAAAA,CAAa4Q,GACT,MAAM,KAAEnV,EAAO,YAAW,OAAEsB,EAAS,EAAC,YAAEmB,EAAc,EAAC,WAAElB,EAAU,SAAEiC,EAAW,GAAOb,KAAKD,QACtF0S,EAAmBxB,GAAW5T,IAASU,GAO7C,IAAI2U,EACAC,EACAF,IAAqB1U,IACK,kBAAnByU,EAAY,KAInBE,GAAwB7E,EAAAA,GAAAA,GAAKuD,GAAmB/C,GAAImE,EAAY,GAAIA,EAAY,KAChFA,EAAc,CAAC,EAAG,MAEtB,MAAMI,EAAYH,EAAiB,IAAKzS,KAAKD,QAAShC,UAAWyU,IAK9C,WAAf5T,IACA+T,EAAoBF,EAAiB,IAC9BzS,KAAKD,QACRhC,UAAW,IAAIyU,GAAa5D,UAC5B/N,UAAWA,KAWkB,OAAjC+R,EAAUrM,qBACVqM,EAAUrM,mBC/GtB,SAA+BqM,GAC3B,IAAIlV,EAAW,EAEXyH,EAAQyN,EAAUpM,KAAK9I,GAC3B,MAAQyH,EAAMC,MAAQ1H,EALG,KAMrBA,GAHa,GAIbyH,EAAQyN,EAAUpM,KAAK9I,GAE3B,OAAOA,GATkB,IASiBmV,IAAWnV,CACzD,CDsG2CoV,CAAsBF,IAEzD,MAAM,mBAAErM,GAAuBqM,EACzBG,EAAmBxM,EAAqBzG,EAE9C,MAAO,CACH8S,YACAD,oBACAD,wBACAnM,qBACAwM,mBACAC,cAPkBD,GAAoBpU,EAAS,GAAKmB,EAS5D,CACA+B,cAAAA,GACI,MAAM,SAAEjC,GAAW,GAASI,KAAKD,QACjCC,KAAKiT,OACyB,WAA1BjT,KAAK4R,kBAAkChS,EAIvCI,KAAKmF,MAAQnF,KAAK4R,iBAHlB5R,KAAKkT,OAKb,CACAC,IAAAA,CAAKzC,GAA2B,IAAhB0C,EAAM1E,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,IAAAA,UAAA,GAClB,MAAM,SAAEjO,GAAaT,KAErB,IAAKS,EAAU,CACX,MAAM,UAAE1C,GAAciC,KAAKD,QAC3B,MAAO,CAAEqF,MAAM,EAAM5G,MAAOT,EAAUA,EAAUC,OAAS,GAC7D,CACA,MAAM,cAAEU,EAAa,UAAEkU,EAAS,kBAAED,EAAiB,sBAAED,EAAqB,UAAE3U,EAAS,mBAAEwI,EAAkB,cAAEyM,EAAa,iBAAED,GAAsBtS,EAChJ,GAAuB,OAAnBT,KAAK6R,UACL,OAAOe,EAAUpM,KAAK,GAC1B,MAAM,MAAE3G,EAAK,OAAElB,EAAM,WAAEC,EAAU,YAAEkB,EAAW,SAAEiB,GAAaf,KAAKD,QAO9DC,KAAKqT,MAAQ,EACbrT,KAAK6R,UAAYzT,KAAKgI,IAAIpG,KAAK6R,UAAWnB,GAErC1Q,KAAKqT,MAAQ,IAClBrT,KAAK6R,UAAYzT,KAAKgI,IAAIsK,EAAYsC,EAAgBhT,KAAKqT,MAAOrT,KAAK6R,YAGvEuB,EACApT,KAAK0R,YAAchB,EAEI,OAAlB1Q,KAAKwR,SACVxR,KAAK0R,YAAc1R,KAAKwR,SAMxBxR,KAAK0R,YACDtT,KAAK4N,MAAM0E,EAAY1Q,KAAK6R,WAAa7R,KAAKqT,MAGtD,MAAMC,EAAmBtT,KAAK0R,YAAc7R,GAASG,KAAKqT,OAAS,EAAI,GAAK,GACtEE,EAAiBvT,KAAKqT,OAAS,EAC/BC,EAAmB,EACnBA,EAAmBN,EACzBhT,KAAK0R,YAActT,KAAKoE,IAAI8Q,EAAkB,GAE3B,aAAftT,KAAKmF,OAA0C,OAAlBnF,KAAKwR,WAClCxR,KAAK0R,YAAcsB,GAEvB,IAAIQ,EAAUxT,KAAK0R,YACf+B,EAAiBb,EACrB,GAAIjU,EAAQ,CAMR,MAAM2Q,EAAWlR,KAAKgI,IAAIpG,KAAK0R,YAAasB,GAAiBD,EAK7D,IAAIW,EAAmBtV,KAAKuV,MAAMrE,GAK9BsE,EAAoBtE,EAAW,GAK9BsE,GAAqBtE,GAAY,IAClCsE,EAAoB,GAEF,IAAtBA,GAA2BF,IAC3BA,EAAmBtV,KAAKgI,IAAIsN,EAAkB/U,EAAS,GAIhC2M,QAAQoI,EAAmB,KAE3B,YAAf9U,GACAgV,EAAoB,EAAIA,EACpB9T,IACA8T,GAAqB9T,EAAciT,IAGnB,WAAfnU,IACL6U,EAAiBd,IAGzBa,GAAUlQ,EAAAA,EAAAA,GAAM,EAAG,EAAGsQ,GAAqBb,CAC/C,CAMA,MAAM5N,EAAQoO,EACR,CAAEnO,MAAM,EAAO5G,MAAOT,EAAU,IAChC0V,EAAejN,KAAKgN,GACtBd,IACAvN,EAAM3G,MAAQkU,EAAsBvN,EAAM3G,QAE9C,IAAI,KAAE4G,GAASD,EACVoO,GAAyC,OAAvBhN,IACnBnB,EACIpF,KAAKqT,OAAS,EACRrT,KAAK0R,aAAesB,EACpBhT,KAAK0R,aAAe,GAElC,MAAMmC,EAAwC,OAAlB7T,KAAKwR,WACb,aAAfxR,KAAKmF,OAAwC,YAAfnF,KAAKmF,OAAuBC,GAU/D,OATIyO,QAAyC7U,IAAlBN,IACvByG,EAAM3G,MAAQC,EAAiBV,EAAWiC,KAAKD,QAASrB,IAExDqC,GACAA,EAASoE,EAAM3G,OAEfqV,GACA7T,KAAK8T,SAEF3O,CACX,CACA,YAAIzH,GACA,MAAM,SAAE+C,GAAaT,KACrB,OAAOS,GAAW8C,EAAAA,EAAAA,GAAsB9C,EAAS8F,oBAAsB,CAC3E,CACA,QAAInG,GACA,OAAOmD,EAAAA,EAAAA,GAAsBvD,KAAK0R,YACtC,CACA,QAAItR,CAAK2T,GACLA,GAAU3Q,EAAAA,EAAAA,GAAsB2Q,GAChC/T,KAAK0R,YAAcqC,EACG,OAAlB/T,KAAKwR,UAAoC,IAAfxR,KAAKqT,MAC/BrT,KAAKwR,SAAWuC,EAEX/T,KAAKgU,SACVhU,KAAK6R,UAAY7R,KAAKgU,OAAO3T,MAAQ0T,EAAU/T,KAAKqT,MAE5D,CACA,SAAIA,GACA,OAAOrT,KAAK2R,aAChB,CACA,SAAI0B,CAAMY,GACN,MAAMC,EAAalU,KAAK2R,gBAAkBsC,EAC1CjU,KAAK2R,cAAgBsC,EACjBC,IACAlU,KAAKI,MAAOmD,EAAAA,EAAAA,GAAsBvD,KAAK0R,aAE/C,CACAuB,IAAAA,GAII,GAHKjT,KAAK8R,SAASqC,aACfnU,KAAK8R,SAASsC,UAEbpU,KAAKU,UAEN,YADAV,KAAK4R,iBAAmB,WAG5B,GAAI5R,KAAKC,UACL,OACJ,MAAM,OAAE+T,EAASzD,GAAe,OAAE8D,EAAM,UAAExC,GAAc7R,KAAKD,QACxDC,KAAKgU,SACNhU,KAAKgU,OAASA,GAAQtD,GAAc1Q,KAAKmT,KAAKzC,MAElD2D,GAAUA,IACV,MAAMhU,EAAML,KAAKgU,OAAO3T,MACF,OAAlBL,KAAKwR,SACLxR,KAAK6R,UAAYxR,EAAML,KAAKwR,SAEtBxR,KAAK6R,UAGS,aAAf7R,KAAKmF,QACVnF,KAAK6R,UAAYxR,GAHjBL,KAAK6R,UAA0B,OAAdA,QAAoC,IAAdA,EAAuBA,EAAY7R,KAAKO,gBAKhE,aAAfP,KAAKmF,OACLnF,KAAKM,wBAETN,KAAKyR,WAAazR,KAAK6R,UACvB7R,KAAKwR,SAAW,KAKhBxR,KAAKmF,MAAQ,UACbnF,KAAKgU,OAAOrD,OAChB,CACAuC,KAAAA,GACI,IAAIpF,EACC9N,KAAKU,WAIVV,KAAKmF,MAAQ,SACbnF,KAAKwR,SAAuC,QAA3B1D,EAAK9N,KAAK0R,mBAAgC,IAAP5D,EAAgBA,EAAK,GAJrE9N,KAAK4R,iBAAmB,QAKhC,CACA0C,QAAAA,GACuB,YAAftU,KAAKmF,OACLnF,KAAKiT,OAETjT,KAAK4R,iBAAmB5R,KAAKmF,MAAQ,WACrCnF,KAAKwR,SAAW,IACpB,CACAsC,MAAAA,GACI9T,KAAKgS,WACLhS,KAAKmF,MAAQ,WACb,MAAM,WAAErE,GAAed,KAAKD,QAC5Be,GAAcA,GAClB,CACAiR,MAAAA,GAC4B,OAApB/R,KAAKyR,YACLzR,KAAKmT,KAAKnT,KAAKyR,YAEnBzR,KAAKgS,WACLhS,KAAKM,uBACT,CACA0R,QAAAA,GACIhS,KAAKmF,MAAQ,OACbnF,KAAKuU,aACLvU,KAAK0B,yBACL1B,KAAKM,wBACLN,KAAK6R,UAAY7R,KAAKyR,WAAa,KACnCzR,KAAK8R,SAASC,QAClB,CACAwC,UAAAA,GACSvU,KAAKgU,SAEVhU,KAAKgU,OAAOnD,OACZ7Q,KAAKgU,YAAShV,EAClB,CACAoU,MAAAA,CAAOhT,GAEH,OADAJ,KAAK6R,UAAY,EACV7R,KAAKmT,KAAK/S,GAAM,EAC3B,E,eErXJ,MAAMoU,GAAsBnE,GAAW/Q,MAAMC,QAAQ8Q,IAAgC,kBAAdA,EAAO,GCE9E,SAASoE,GAAuBpE,GAC5B,OAAO/E,SAAS+E,GACO,kBAAXA,GAAuBA,KAAUqE,IACzCF,GAAmBnE,IAClB/Q,MAAMC,QAAQ8Q,IAAWA,EAAOsE,MAAMF,IAC/C,CACA,MAAMG,GAAsB9W,IAAA,IAAE6F,EAAGC,EAAGE,EAAGE,GAAElG,EAAA,MAAK,gBAAgB6F,MAAMC,MAAME,MAAME,IAAI,EAC9E0Q,GAAuB,CACzBhL,OAAQ,SACR/L,KAAM,OACNsL,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXQ,OAAQiL,GAAoB,CAAC,EAAG,IAAM,IAAM,IAC5C/K,QAAS+K,GAAoB,CAAC,IAAM,EAAG,EAAG,MAC1CvL,OAAQuL,GAAoB,CAAC,IAAM,IAAM,KAAO,MAChDxL,QAASwL,GAAoB,CAAC,IAAM,KAAM,IAAM,OAEpD,SAASC,GAAmCxE,GACxC,OAAQyE,GAAwBzE,IAC5BqE,GAAqBxL,OAC7B,CACA,SAAS4L,GAAwBzE,GAC7B,OAAKA,EAGImE,GAAmBnE,GACjBuE,GAAoBvE,GAEtB/Q,MAAMC,QAAQ8Q,GACZA,EAAOnD,IAAI2H,IAGXH,GAAqBrE,QAT5B,CAWR,CC1BA,MAAM0E,GAAgB9V,GAAK,IAAM+V,OAAOC,eAAeC,KAAKC,QAAQC,UAAW,aAoD/E,MAAMC,WAA6B3V,EAC/BC,WAAAA,CAAYI,GACRwR,MAAMxR,GACN,MAAM,KAAEV,EAAI,YAAE6S,EAAW,QAAEC,EAAO,UAAEpU,GAAciC,KAAKD,QACvDC,KAAK8R,SAAW,IAAIwD,EAAAA,EAAqBvX,GAAW,CAACc,EAAmBH,IAAkBsB,KAAKY,oBAAoB/B,EAAmBH,IAAgBW,EAAM6S,EAAaC,GACzKnS,KAAK8R,SAASS,iBAClB,CACA3Q,YAAAA,CAAa7D,EAAWW,GACpB,IAAIoP,EACJ,IAAI,SAAEpQ,EAAW,IAAG,MAAEoS,EAAK,KAAEnS,EAAI,KAAEN,EAAI,YAAE6U,EAAW,KAAE7S,EAAI,UAAEwS,GAAe7R,KAAKD,QAKhF,KAAmC,QAA5B+N,EAAKoE,EAAYqD,aAA0B,IAAPzH,OAAgB,EAASA,EAAGxM,SACnE,OAAO,EAKX,GAtDoB,YADWvB,EAuDGC,KAAKD,SAtD5B1C,OAAsBoX,GAAuB1U,EAAQpC,MAsDf,CAC7C,MAAM,WAAEmD,EAAU,SAAEC,EAAQ,YAAEmR,EAAW,QAAEC,KAAYpS,GAAYC,KAAKD,QAClEyV,EAtDlB,SAA8BzX,EAAWgC,GAMrC,MAAM0V,EAAkB,IAAInE,GAAoB,IACzCvR,EACHhC,YACAY,OAAQ,EACRkB,MAAO,EACPmB,aAAa,IAEjB,IAAImE,EAAQ,CAAEC,MAAM,EAAO5G,MAAOT,EAAU,IAC5C,MAAM2X,EAAwB,GAK9B,IAAIpT,EAAI,EACR,MAAQ6C,EAAMC,MAAQ9C,EA7BN,KA8BZ6C,EAAQsQ,EAAgBrC,OAAO9Q,GAC/BoT,EAAsBxG,KAAK/J,EAAM3G,OACjC8D,GArCY,GAuChB,MAAO,CACHwN,WAAO9Q,EACPjB,UAAW2X,EACXhY,SAAU4E,EA1CE,GA2CZ3E,KAAM,SAEd,CAuB0CgY,CAAqB5X,EAAWgC,GAKrC,KAJzBhC,EAAYyX,EAAsBzX,WAIpBC,SACVD,EAAU,GAAKA,EAAU,IAE7BL,EAAW8X,EAAsB9X,SACjCoS,EAAQ0F,EAAsB1F,MAC9BnS,EAAO6X,EAAsB7X,KAC7BN,EAAO,WACX,CArER,IAAuC0C,EAsE/B,MAAM6V,EChGd,SAAsBzD,EAAS0D,EAAW9X,GAA8F,IAAnF,MAAE8B,EAAQ,EAAC,SAAEnC,EAAW,IAAG,OAAEiB,EAAS,EAAC,WAAEC,EAAa,OAAM,KAAEjB,EAAI,MAAEmS,GAAQpB,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,CAAC,EACjI,MAAMoH,EAAkB,CAAE,CAACD,GAAY9X,GACnC+R,IACAgG,EAAgBrG,OAASK,GAC7B,MAAMO,EAASyE,GAAwBnX,GAMvC,OAFI2B,MAAMC,QAAQ8Q,KACdyF,EAAgBzF,OAASA,GACtB8B,EAAQ4D,QAAQD,EAAiB,CACpCjW,QACAnC,WACA2S,OAAS/Q,MAAMC,QAAQ8Q,GAAmB,SAATA,EACjC2F,KAAM,OACNC,WAAYtX,EAAS,EACrBuX,UAA0B,YAAftX,EAA2B,YAAc,UAE5D,CD8E0BuX,CAAajE,EAAYqD,MAAMjU,QAASjC,EAAMtB,EAAW,IAAKiC,KAAKD,QAASrC,WAAUoS,QAAOnS,SAyB/G,OAtBAiY,EAAU/D,UAA0B,OAAdA,QAAoC,IAAdA,EAAuBA,EAAY7R,KAAKO,gBAChFP,KAAKoW,iBACLR,EAAUS,SAAWrW,KAAKoW,gBAC1BpW,KAAKoW,qBAAkBpX,GAWvB4W,EAAUU,SAAW,KACjB,MAAM,WAAExV,GAAed,KAAKD,QAC5BmS,EAAYqE,IAAI9X,EAAiBV,EAAWiC,KAAKD,QAASrB,IAC1DoC,GAAcA,IACdd,KAAK+R,SACL/R,KAAK0B,wBAAwB,EAG9B,CACHkU,YACAlY,WACAoS,QACAzS,OACAM,OACAI,UAAWA,EAEnB,CACA,YAAIL,GACA,MAAM,SAAE+C,GAAaT,KACrB,IAAKS,EACD,OAAO,EACX,MAAM,SAAE/C,GAAa+C,EACrB,OAAO8C,EAAAA,EAAAA,GAAsB7F,EACjC,CACA,QAAI0C,GACA,MAAM,SAAEK,GAAaT,KACrB,IAAKS,EACD,OAAO,EACX,MAAM,UAAEmV,GAAcnV,EACtB,OAAO8C,EAAAA,EAAAA,GAAsBqS,EAAUlE,aAAe,EAC1D,CACA,QAAItR,CAAK2T,GACL,MAAM,SAAEtT,GAAaT,KACrB,IAAKS,EACD,OACJ,MAAM,UAAEmV,GAAcnV,EACtBmV,EAAUlE,aAActO,EAAAA,EAAAA,GAAsB2Q,EAClD,CACA,SAAIV,GACA,MAAM,SAAE5S,GAAaT,KACrB,IAAKS,EACD,OAAO,EACX,MAAM,UAAEmV,GAAcnV,EACtB,OAAOmV,EAAUY,YACrB,CACA,SAAInD,CAAMY,GACN,MAAM,SAAExT,GAAaT,KACrB,IAAKS,EACD,OACJ,MAAM,UAAEmV,GAAcnV,EACtBmV,EAAUY,aAAevC,CAC7B,CACA,SAAI9O,GACA,MAAM,SAAE1E,GAAaT,KACrB,IAAKS,EACD,MAAO,OACX,MAAM,UAAEmV,GAAcnV,EACtB,OAAOmV,EAAUa,SACrB,CACA,aAAI5E,GACA,MAAM,SAAEpR,GAAaT,KACrB,IAAKS,EACD,OAAO,KACX,MAAM,UAAEmV,GAAcnV,EAGtB,OAAOmV,EAAU/D,SACrB,CAKA6E,cAAAA,CAAeL,GACX,GAAKrW,KAAKU,UAGL,CACD,MAAM,SAAED,GAAaT,KACrB,IAAKS,EACD,OAAO+H,EAAAA,EACX,MAAM,UAAEoN,GAAcnV,EACtBmV,EAAUS,SAAWA,EACrBT,EAAUU,SAAW,IACzB,MATItW,KAAKoW,gBAAkBC,EAU3B,OAAO7N,EAAAA,CACX,CACAyK,IAAAA,GACI,GAAIjT,KAAKC,UACL,OACJ,MAAM,SAAEQ,GAAaT,KACrB,IAAKS,EACD,OACJ,MAAM,UAAEmV,GAAcnV,EACM,aAAxBmV,EAAUa,WACVzW,KAAKM,wBAETsV,EAAU3C,MACd,CACAC,KAAAA,GACI,MAAM,SAAEzS,GAAaT,KACrB,IAAKS,EACD,OACJ,MAAM,UAAEmV,GAAcnV,EACtBmV,EAAU1C,OACd,CACArC,IAAAA,GAGI,GAFA7Q,KAAK8R,SAASC,SACd/R,KAAKC,WAAY,EACE,SAAfD,KAAKmF,MACL,OACJnF,KAAK0B,yBACL1B,KAAKM,wBACL,MAAM,SAAEG,GAAaT,KACrB,IAAKS,EACD,OACJ,MAAM,UAAEmV,EAAS,UAAE7X,EAAS,SAAEL,EAAQ,KAAEL,EAAI,KAAEM,EAAI,MAAEmS,GAAUrP,EAC9D,GAA4B,SAAxBmV,EAAUa,WACc,aAAxBb,EAAUa,UACV,OAUJ,GAAIzW,KAAKI,KAAM,CACX,MAAM,YAAE8R,EAAW,SAAEnR,EAAQ,WAAED,EAAU,QAAEqR,KAAYpS,GAAYC,KAAKD,QAClE0V,EAAkB,IAAInE,GAAoB,IACzCvR,EACHhC,YACAL,WACAL,OACAM,OACAmS,QACA9O,aAAa,IAEX2V,GAAavT,EAAAA,EAAAA,GAAsBpD,KAAKI,MAC9C8R,EAAY0E,gBAAgBnB,EAAgBrC,OAAOuD,EA9O3C,IA8OqEnY,MAAOiX,EAAgBrC,OAAOuD,GAAYnY,MA9O/G,GA+OZ,CACA,MAAM,OAAEyT,GAAWjS,KAAKD,QACxBkS,GAAUA,IACVjS,KAAK+R,QACT,CACAuC,QAAAA,GACI,MAAM,SAAE7T,GAAaT,KAChBS,GAELA,EAASmV,UAAU9B,QACvB,CACA/B,MAAAA,GACI,MAAM,SAAEtR,GAAaT,KAChBS,GAELA,EAASmV,UAAU7D,QACvB,CACA,eAAO8E,CAAS9W,GACZ,MAAM,YAAEmS,EAAW,KAAE7S,EAAI,YAAES,EAAW,WAAElB,EAAU,QAAErB,EAAO,KAAEF,GAAS0C,EACtE,OAAQgV,MACJ1V,GACAnC,GAAAA,EAAkBgB,IAAImB,IACtB6S,GACAA,EAAYqD,OACZrD,EAAYqD,MAAMjU,mBAAmBwV,cAKpC5E,EAAYqD,MAAMwB,WAAWhW,WAC7BjB,GACc,WAAflB,GACY,IAAZrB,GACS,YAATF,CACR,EEhSJ,MAAM2Z,GAAyB/X,GAAK,SAAgCD,IAA1BiY,OAAOC,iBCCjD,MAAMC,GACFxX,WAAAA,CAAYyX,GAERpX,KAAK6Q,KAAO,IAAM7Q,KAAKqX,OAAO,QAC9BrX,KAAKoX,WAAaA,EAAWtY,OAAOwM,QACxC,CACAxJ,IAAAA,CAAKwV,EAAWC,GACZ,OAAOrV,QAAQsV,IAAIxX,KAAKoX,YAAYtV,KAAKwV,GAAWG,MAAMF,EAC9D,CAIAG,MAAAA,CAAOC,GACH,OAAO3X,KAAKoX,WAAW,GAAGO,EAC9B,CACAC,MAAAA,CAAOD,EAAUE,GACb,IAAK,IAAItW,EAAI,EAAGA,EAAIvB,KAAKoX,WAAWpZ,OAAQuD,IACxCvB,KAAKoX,WAAW7V,GAAGoW,GAAYE,CAEvC,CACAnB,cAAAA,CAAeL,GACX,MAAMyB,EAAY9X,KAAKoX,WAAWlK,KAAK0I,IACnC,IAAIoB,OAA4BpB,EAAUc,eAKtC,OADAd,EAAU1C,QC3B1B,SAAyB1C,EAAQ6F,GAC7B,IAAI0B,EACJ,MAAMC,EAAUA,KACZ,MAAM,YAAEtG,GAAgB2E,EAElB/G,GAD6B,OAAhBoC,EAAuB,EAAIA,EAAYlT,OAC5B,IAC1BuZ,IAAiBzI,GACjBkB,EAAOlB,GAEXyI,EAAezI,CAAQ,EAG3B,OADAsB,EAAAA,GAAMJ,OAAOwH,GAAS,GACf,KAAMlH,EAAAA,EAAAA,IAAYkH,EAC7B,CDeuBC,EAAiB3I,IACpBsG,EAAUxV,KAAOwV,EAAUlY,SAAW4R,CAAQ,GAC/C+G,GANHT,EAAUc,eAAeL,EAO7B,IAEJ,MAAO,KACHyB,EAAUI,SAAQ,CAACC,EAAgB5W,KAC3B4W,GACAA,IACJnY,KAAKoX,WAAW7V,GAAGsP,MAAM,GAC3B,CAEV,CACA,QAAIzQ,GACA,OAAOJ,KAAK0X,OAAO,OACvB,CACA,QAAItX,CAAKA,GACLJ,KAAK4X,OAAO,OAAQxX,EACxB,CACA,SAAIiT,GACA,OAAOrT,KAAK0X,OAAO,QACvB,CACA,SAAIrE,CAAMA,GACNrT,KAAK4X,OAAO,QAASvE,EACzB,CACA,aAAIxB,GACA,OAAO7R,KAAK0X,OAAO,YACvB,CACA,YAAIha,GACA,IAAI8E,EAAM,EACV,IAAK,IAAIjB,EAAI,EAAGA,EAAIvB,KAAKoX,WAAWpZ,OAAQuD,IACxCiB,EAAMpE,KAAKoE,IAAIA,EAAKxC,KAAKoX,WAAW7V,GAAG7D,UAE3C,OAAO8E,CACX,CACA6U,MAAAA,CAAOe,GACHpY,KAAKoX,WAAWc,SAASG,GAAaA,EAASD,MACnD,CACAnF,IAAAA,GACIjT,KAAKqX,OAAO,OAChB,CACAnE,KAAAA,GACIlT,KAAKqX,OAAO,QAChB,CACAtF,MAAAA,GACI/R,KAAKqX,OAAO,SAChB,CACA/C,QAAAA,GACItU,KAAKqX,OAAO,WAChB,EEpEJ,MAAMiB,GAAqB,SAACjZ,EAAMb,EAAO0G,GAAM,IAAEqT,EAAU7J,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGyD,EAAOzD,UAAA1Q,OAAA,EAAA0Q,UAAA,QAAA1P,EAAEwZ,EAAS9J,UAAA1Q,OAAA,EAAA0Q,UAAA,QAAA1P,EAOpFyZ,EAAK/J,UAAA1Q,OAAA,EAAA0Q,UAAA,QAAA1P,EAAA,OAAM8B,IACP,MAAM4X,GAAkBC,EAAAA,EAAAA,GAAmBJ,EAAYlZ,IAAS,CAAC,EAM3DQ,EAAQ6Y,EAAgB7Y,OAAS0Y,EAAW1Y,OAAS,EAK3D,IAAI,QAAE2T,EAAU,GAAM+E,EACtB/E,IAAoBpQ,EAAAA,EAAAA,GAAsBvD,GAC1C,IAAIE,EAAU,CACVhC,UAAWuB,MAAMC,QAAQ2F,GAAUA,EAAS,CAAC,KAAMA,GACnDvH,KAAM,UACNkD,SAAUrC,EAAMoa,iBACbF,EACH7Y,OAAQ2T,EACRzS,SAAWoG,IACP3I,EAAM+X,IAAIpP,GACVuR,EAAgB3X,UAAY2X,EAAgB3X,SAASoG,EAAE,EAE3DrG,WAAYA,KACRA,IACA4X,EAAgB5X,YAAc4X,EAAgB5X,aAC9C2X,GAASA,GAAO,EAEpBxG,OAAQwG,EACRpZ,OACA6S,YAAa1T,EACb2T,QAASqG,OAAYxZ,EAAYmT,IAMhC0G,EAAAA,EAAAA,GAAoBH,KACrB3Y,EAAU,IACHA,KACAnC,EAAqByB,EAAMU,KAQlCA,EAAQrC,WACRqC,EAAQrC,UAAW0F,EAAAA,EAAAA,GAAsBrD,EAAQrC,WAEjDqC,EAAQD,cACRC,EAAQD,aAAcsD,EAAAA,EAAAA,GAAsBrD,EAAQD,mBAEnCd,IAAjBe,EAAQ4K,OACR5K,EAAQhC,UAAU,GAAKgC,EAAQ4K,MAEnC,IAAImO,GAAa,EAmBjB,KAlBqB,IAAjB/Y,EAAQ1C,MACc,IAArB0C,EAAQrC,WAAmBqC,EAAQD,eACpCC,EAAQrC,SAAW,EACG,IAAlBqC,EAAQF,QACRiZ,GAAa,KAGjBxa,GACAya,EAAAA,EAAmBC,kBACnBF,GAAa,EACb/Y,EAAQrC,SAAW,EACnBqC,EAAQF,MAAQ,GAOhBiZ,IAAeN,QAA6BxZ,IAAhBR,EAAMya,MAAqB,CACvD,MAAMva,EAAgBD,EAAiBsB,EAAQhC,UAAW2a,GAC1D,QAAsB1Z,IAAlBN,EAOA,OANAkS,EAAAA,GAAMJ,QAAO,KACTzQ,EAAQgB,SAASrC,GACjBqB,EAAQe,YAAY,IAIjB,IAAIqW,GAAsB,GAEzC,CAMA,OAAKqB,GAAanD,GAAqBwB,SAAS9W,GACrC,IAAIsV,GAAqBtV,GAGzB,IAAIuR,GAAoBvR,EACnC,CACH,C,oHCxGD,SAASmZ,EAAoBpb,EAAoCgH,GAAK,IAAxC,cAAEqU,EAAa,eAAEC,GAAgBtb,EAC3D,MAAMub,EAAcF,EAAclE,eAAenQ,KAAgC,IAAxBsU,EAAetU,GAExE,OADAsU,EAAetU,IAAO,EACfuU,CACX,CACA,SAASC,EAAcC,EAAeC,GAAmE,IAA9C,MAAE3Z,EAAQ,EAAC,mBAAE4Z,EAAkB,KAAEpc,GAAMqR,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,CAAC,EAClG,IAAIZ,EACJ,IAAI,WAAEyK,EAAagB,EAAc3b,uBAAsB,cAAE8b,KAAkBxU,GAAWsU,EAClFC,IACAlB,EAAakB,GACjB,MAAMrC,EAAa,GACbuC,EAAqBtc,GACvBkc,EAAcK,gBACdL,EAAcK,eAAeC,WAAWxc,GAC5C,IAAK,MAAMyH,KAAOI,EAAQ,CACtB,MAAM1G,EAAQ+a,EAAcO,SAAShV,EAAgD,QAA1CgJ,EAAKyL,EAAcQ,aAAajV,UAAyB,IAAPgJ,EAAgBA,EAAK,MAC5GkM,EAAc9U,EAAOJ,GAC3B,QAAoB9F,IAAhBgb,GACCL,GACGT,EAAqBS,EAAoB7U,GAC7C,SAEJ,MAAM4T,EAAkB,CACpB7Y,YACG8Y,EAAAA,EAAAA,GAAmBJ,GAAc,CAAC,EAAGzT,IAM5C,IAAI0T,GAAY,EAChB,GAAIvB,OAAOgD,uBAAwB,CAC/B,MAAMC,GAAWC,EAAAA,EAAAA,GAAqBZ,GACtC,GAAIW,EAAU,CACV,MAAMrI,EAAYoF,OAAOgD,uBAAuBC,EAAUpV,EAAK8L,EAAAA,IAC7C,OAAdiB,IACA6G,EAAgB7G,UAAYA,EAC5B2G,GAAY,EAEpB,CACJ,CACAha,EAAMmS,OAAM2H,EAAAA,EAAAA,GAAmBxT,EAAKtG,EAAOwb,EAAaT,EAAca,oBAAsBnc,EAAAA,EAAeC,IAAI4G,GACzG,CAAEzH,MAAM,GACRqb,EAAiBa,EAAef,GAAW6B,EAAAA,EAAAA,GAAqBd,EAAezU,KACrF,MAAM8Q,EAAYpX,EAAMoX,UACpBA,GACAwB,EAAWlI,KAAK0G,EAExB,CAQA,OAPI8D,GACAxX,QAAQsV,IAAIJ,GAAYtV,MAAK,KACzB8O,EAAAA,GAAMJ,QAAO,KACTkJ,IAAiBY,EAAAA,EAAAA,GAAUf,EAAeG,EAAc,GAC1D,IAGHtC,CACX,CCpEA,SAASmD,EAAehB,EAAeiB,GAAuB,IAAdza,EAAO2O,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvD,IAAIZ,EACJ,MAAMrN,GAAWga,EAAAA,EAAAA,GAAelB,EAAeiB,EAA0B,SAAjBza,EAAQ1C,KACjB,QAAxCyQ,EAAKyL,EAAcmB,uBAAoC,IAAP5M,OAAgB,EAASA,EAAG6M,YAC7E3b,GACN,IAAI,WAAEuZ,EAAagB,EAAc3b,wBAA0B,CAAC,GAAM6C,GAAY,CAAC,EAC3EV,EAAQ0Z,qBACRlB,EAAaxY,EAAQ0Z,oBAMzB,MAAMmB,EAAena,EACf,IAAMyB,QAAQsV,IAAI8B,EAAcC,EAAe9Y,EAAUV,IACzD,IAAMmC,QAAQH,UAKd8Y,EAAqBtB,EAAcuB,iBAAmBvB,EAAcuB,gBAAgBC,KACpF,WAAsB,IAArBC,EAAYtM,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,EACd,MAAM,cAAEuM,EAAgB,EAAC,gBAAEC,EAAe,iBAAEC,GAAsB5C,EAClE,OAkBZ,SAAyBgB,EAAeiB,GAAgF,IAAvES,EAAavM,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,EAAGwM,EAAexM,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,EAAGyM,EAAgBzM,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,EAAG3O,EAAO2O,UAAA1Q,OAAA,EAAA0Q,UAAA,QAAA1P,EAClH,MAAMoY,EAAa,GACbgE,GAAsB7B,EAAcuB,gBAAgBC,KAAO,GAAKG,EAChEG,EAA+C,IAArBF,EAC1B,WAAM,OAAJzM,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,GAAUwM,CAAe,EAC9B,WAAM,OAAKE,GAAT1M,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,GAA+BwM,CAAe,EAUzD,OATA5b,MAAMqL,KAAK4O,EAAcuB,iBACpBQ,KAAKC,GACLrD,SAAQ,CAACsD,EAAOja,KACjBia,EAAMC,OAAO,iBAAkBjB,GAC/BpD,EAAWlI,KAAKqL,EAAeiB,EAAOhB,EAAS,IACxCza,EACHF,MAAOob,EAAgBI,EAAwB9Z,KAChDO,MAAK,IAAM0Z,EAAMC,OAAO,oBAAqBjB,KAAU,IAEvDtY,QAAQsV,IAAIJ,EACvB,CAlCmBsE,CAAgBnC,EAAeiB,EAASS,EAAgBD,EAAcE,EAAiBC,EAAkBpb,EACpH,EACE,IAAMmC,QAAQH,WAKd,KAAE4Z,GAASpD,EACjB,GAAIoD,EAAM,CACN,MAAOC,EAAOC,GAAiB,mBAATF,EAChB,CAACf,EAAcC,GACf,CAACA,EAAoBD,GAC3B,OAAOgB,IAAQ9Z,MAAK,IAAM+Z,KAC9B,CAEI,OAAO3Z,QAAQsV,IAAI,CAACoD,IAAgBC,EAAmB9a,EAAQF,QAEvE,CAkBA,SAAS0b,EAAgB5X,EAAGC,GACxB,OAAOD,EAAEmY,iBAAiBlY,EAC9B,CC3DA,SAASmY,EAAqBxC,EAAetP,GAA0B,IAE/D2L,EAFiD7V,EAAO2O,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,CAAC,EAGhE,GAFA6K,EAAckC,OAAO,iBAAkBxR,GAEnC3K,MAAMC,QAAQ0K,GAAa,CAC3B,MAAMmN,EAAanN,EAAWiD,KAAKsN,GAAYD,EAAehB,EAAeiB,EAASza,KACtF6V,EAAY1T,QAAQsV,IAAIJ,EAC5B,MACK,GAA0B,kBAAfnN,EACZ2L,EAAY2E,EAAehB,EAAetP,EAAYlK,OAErD,CACD,MAAMic,EAA2C,oBAAf/R,GAC5BwQ,EAAAA,EAAAA,GAAelB,EAAetP,EAAYlK,EAAQ4a,QAClD1Q,EACN2L,EAAY1T,QAAQsV,IAAI8B,EAAcC,EAAeyC,EAAoBjc,GAC7E,CACA,OAAO6V,EAAU9T,MAAK,KAClByX,EAAckC,OAAO,oBAAqBxR,EAAW,GAE7D,C,iCCrBA,MACMgS,EAA+B,SAAUC,E,QAAAA,GADjB,iB,+CCA9B,SAAS/B,EAAqBZ,GAC1B,OAAOA,EAAcxC,WAAWkF,EAAAA,EACpC,C,kCCJA,MAAME,EAAqBhV,GAChB7H,MAAMC,QAAQ4H,E,iBCIzB,SAAS0R,EAAmB/a,GAA2I,IAA1I,KAAE6d,EAAM9b,MAAOuc,EAAM,cAAEnB,EAAa,gBAAEC,EAAe,iBAAEC,EAAgB,OAAExc,EAAM,WAAEC,EAAU,YAAEkB,EAAW,KAAE6K,EAAI,QAAE6I,KAAY+E,GAAYza,EACjK,QAASkX,OAAOpQ,KAAK2T,GAAYva,MACrC,CACA,SAAS2a,EAAmBJ,EAAYzT,GACpC,OAAQyT,EAAWzT,IACfyT,EAAoB,SACpBA,CACR,C,qGCTA,MAAM5O,EAAUI,GAAM,EAAI3L,KAAK4H,IAAI5H,KAAKie,KAAKtS,IACvCF,GAAUP,EAAAA,EAAAA,GAAcK,GACxBC,GAAYJ,EAAAA,EAAAA,GAAaG,E,kCCH/B,MAAMH,EAAgB6G,GAAYtG,GAAMA,GAAK,GAAMsG,EAAO,EAAItG,GAAK,GAAK,EAAIsG,EAAO,GAAK,EAAItG,KAAO,C,kCCAnG,MAAMT,EAAiB+G,GAAYtG,GAAM,EAAIsG,EAAO,EAAItG,E,gDCCxD,MAAMuS,EAAa,CACf,OACA,mBACA,SACA,YACA,SACA,cAEEC,EAAa,GACnB,SAASC,EAAoBC,EAAmBC,GAC5C,IAAIC,GAAe,EACfC,GAAoB,EACxB,MAAMzX,EAAQ,CACVzB,MAAO,EACPgN,UAAW,EACXM,cAAc,GAEZ6L,EAAmBA,IAAOF,GAAe,EACzCG,EAAQR,EAAWS,QAAO,CAACC,EAAKlY,KAClCkY,EAAIlY,GCtBZ,SAA0B6X,GAKtB,IAAIM,EAAY,IAAI9f,IAChB+f,EAAY,IAAI/f,IAKhB6T,GAAe,EACfmM,GAAiB,EAIrB,MAAMC,EAAc,IAAIC,QACxB,IAAIC,EAAkB,CAClB5Z,MAAO,EACPgN,UAAW,EACXM,cAAc,GAElB,SAASuM,EAAgBre,GACjBke,EAAYlf,IAAIgB,KAChBse,EAAKC,SAASve,GACdyd,KAEJzd,EAASoe,EACb,CACA,MAAME,EAAO,CAITC,SAAU,SAACve,GACP,MACMwe,EAFuChP,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,IAAAA,UAAA,IACNsC,EACLiM,EAAYC,EAK9C,OAP0BxO,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,IAAAA,UAAA,IAItB0O,EAAYO,IAAIze,GACfwe,EAAMxf,IAAIgB,IACXwe,EAAMC,IAAIze,GACPA,CACX,EAIA6S,OAAS7S,IACLge,EAAUU,OAAO1e,GACjBke,EAAYQ,OAAO1e,EAAS,EAKhC2e,QAAU9M,IACNuM,EAAkBvM,EAMdC,EACAmM,GAAiB,GAGrBnM,GAAe,GACdiM,EAAWC,GAAa,CAACA,EAAWD,GAErCC,EAAUY,QAEVb,EAAU/E,QAAQqF,GAClBvM,GAAe,EACXmM,IACAA,GAAiB,EACjBK,EAAKK,QAAQ9M,IACjB,GAGR,OAAOyM,CACX,CDvDmBO,CAAiBlB,GACrBG,IACR,CAAC,IACE,KAAEgB,EAAI,iBAAEC,EAAgB,OAAEzN,EAAM,UAAE0N,EAAS,OAAEC,EAAM,WAAEC,GAAetB,EACpEuB,EAAeA,KACjB,MAAM3N,EAAYqI,EAAAA,EAAmBuF,gBAC/BnZ,EAAMuL,UACN6N,YAAYle,MAClBsc,GAAe,EACfxX,EAAMzB,MAAQkZ,EACR,IAAO,GACPxe,KAAKoE,IAAIpE,KAAKgI,IAAIsK,EAAYvL,EAAMuL,UAAW6L,GAAa,GAClEpX,EAAMuL,UAAYA,EAClBvL,EAAM6L,cAAe,EAErBgN,EAAKH,QAAQ1Y,GACb8Y,EAAiBJ,QAAQ1Y,GACzBqL,EAAOqN,QAAQ1Y,GACf+Y,EAAUL,QAAQ1Y,GAClBgZ,EAAON,QAAQ1Y,GACfiZ,EAAWP,QAAQ1Y,GACnBA,EAAM6L,cAAe,EACjB2L,GAAgBD,IAChBE,GAAoB,EACpBH,EAAkB4B,GACtB,EASEZ,EAAWnB,EAAWS,QAAO,CAACC,EAAKlY,KACrC,MAAM0Y,EAAOV,EAAMhY,GAMnB,OALAkY,EAAIlY,GAAO,SAAC+Y,GAAkD,IAAzCW,EAAS9P,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,IAAAA,UAAA,GAAU+P,EAAS/P,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,IAAAA,UAAA,GAG7C,OAFKiO,IATTA,GAAe,EACfC,GAAoB,EACfzX,EAAM6L,cACPyL,EAAkB4B,IAQXb,EAAKC,SAASI,EAASW,EAAWC,EAC7C,EACOzB,CAAG,GACX,CAAC,GAMJ,MAAO,CAAES,WAAU1L,OALH8L,IACZ,IAAK,IAAItc,EAAI,EAAGA,EAAI+a,EAAWte,OAAQuD,IACnCub,EAAMR,EAAW/a,IAAIwQ,OAAO8L,EAChC,EAEuB1Y,QAAO2X,QACtC,C,sFEpEA,MAAQW,SAAU7M,EAAOmB,OAAQjB,EAAa3L,MAAO4L,EAAS,MAAE+L,IAAWN,EAAAA,EAAAA,GAAqD,qBAA1BkC,sBAAwCA,sBAAwBlW,EAAAA,GAAM,E,0DCA5K,IAAInI,EACJ,SAASse,IACLte,OAAMrB,CACV,CASA,MAAMoB,EAAO,CACTC,IAAKA,UACWrB,IAARqB,GACAD,EAAKmW,IAAIxF,EAAAA,GAAUC,cAAgB+H,EAAAA,EAAmBuF,gBAChDvN,EAAAA,GAAUL,UACV6N,YAAYle,OAEfA,GAEXkW,IAAMxC,IACF1T,EAAM0T,EACN6K,eAAeD,EAAU,E,kFCbjC,MAAME,EAEN,2DASA,SAASC,EAAiBxd,EAAS6Q,GAAoB,IAAX4M,EAAKrQ,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,GAChDxE,EAAAA,EAAAA,GAAU6U,GAFG,EAEgB,yDAAyDzd,yDACtF,MAAO0d,EAAOC,GAVlB,SAA0B3d,GACtB,MAAM4d,EAAQL,EAAsBM,KAAK7d,GACzC,IAAK4d,EACD,MAAO,CAAC,GACZ,MAAO,CAAEE,EAAQC,EAAQJ,GAAYC,EACrC,MAAO,CAAC,KAAgB,OAAXE,QAA8B,IAAXA,EAAoBA,EAASC,IAAUJ,EAC3E,CAI8BK,CAAiBhe,GAE3C,IAAK0d,EACD,OAEJ,MAAMve,EAAWwW,OAAOsI,iBAAiBpN,GAASqN,iBAAiBR,GACnE,GAAIve,EAAU,CACV,MAAMgf,EAAUhf,EAASif,OACzB,OAAOC,EAAAA,EAAAA,GAAkBF,GAAWG,WAAWH,GAAWA,CAC9D,CACA,OAAO9S,EAAAA,EAAAA,GAAmBsS,GACpBH,EAAiBG,EAAU9M,EAAS4M,EAAQ,GAC5CE,CACV,C,sDC9BA,MAAMY,EAAmB,IAAI1iB,IAAI,CAAC,OAAQ,OAAQ,MCDlD,MAAMmY,UAA6BjD,EAAAA,EAC/B1S,WAAAA,CAAYmgB,EAAqBhf,EAAYzB,EAAM6S,EAAaC,GAC5DZ,MAAMuO,EAAqBhf,EAAYzB,EAAM6S,EAAaC,GAAS,EACvE,CACA4N,aAAAA,GACI,MAAM,oBAAED,EAAmB,QAAE3N,EAAO,KAAE9S,GAASW,KAC/C,IAAKmS,IAAYA,EAAQ7Q,QACrB,OACJiQ,MAAMwO,gBAIN,IAAK,IAAIxe,EAAI,EAAGA,EAAIue,EAAoB9hB,OAAQuD,IAAK,CACjD,IAAIye,EAAWF,EAAoBve,GACnC,GAAwB,kBAAbye,IACPA,EAAWA,EAASN,QAChB/S,EAAAA,EAAAA,GAAmBqT,IAAW,CAC9B,MAAMvf,EAAWqe,EAAiBkB,EAAU7N,EAAQ7Q,cACnCtC,IAAbyB,IACAqf,EAAoBve,GAAKd,GAEzBc,IAAMue,EAAoB9hB,OAAS,IACnCgC,KAAKtB,cAAgBshB,EAE7B,CAER,CAaA,GAPAhgB,KAAKigB,wBAOAC,EAAAA,GAAehiB,IAAImB,IAAwC,IAA/BygB,EAAoB9hB,OACjD,OAEJ,MAAOiH,EAAQC,GAAU4a,EACnBK,GAAaC,EAAAA,EAAAA,GAAuBnb,GACpCob,GAAaD,EAAAA,EAAAA,GAAuBlb,GAI1C,GAAIib,IAAeE,EAMnB,IAAIC,EAAAA,EAAAA,IAAcH,KAAeG,EAAAA,EAAAA,IAAcD,GAC3C,IAAK,IAAI9e,EAAI,EAAGA,EAAIue,EAAoB9hB,OAAQuD,IAAK,CACjD,MAAM/C,EAAQshB,EAAoBve,GACb,kBAAV/C,IACPshB,EAAoBve,GAAKqe,WAAWphB,GAE5C,MAMAwB,KAAKugB,kBAAmB,CAEhC,CACAN,oBAAAA,GACI,MAAM,oBAAEH,EAAmB,KAAEzgB,GAASW,KAChCwgB,EAAsB,GAC5B,IAAK,IAAIjf,EAAI,EAAGA,EAAIue,EAAoB9hB,OAAQuD,KC7E/B,kBADT/C,ED+EOshB,EAAoBve,IC7ElB,IAAV/C,EAEQ,OAAVA,GACY,SAAVA,GAA8B,MAAVA,IAAiBiiB,EAAAA,EAAAA,GAAkBjiB,KD2EtDgiB,EAAoBtR,KAAK3N,GChFzC,IAAgB/C,EDmFJgiB,EAAoBxiB,QD3EhC,SAAqC8hB,EAAqBU,EAAqBnhB,GAC3E,IACIqhB,EADAnf,EAAI,EAER,KAAOA,EAAIue,EAAoB9hB,SAAW0iB,GAAoB,CAC1D,MAAMV,EAAWF,EAAoBve,GACb,kBAAbye,IACNH,EAAiB3hB,IAAI8hB,KACtB1S,EAAAA,EAAAA,GAAoB0S,GAAUrS,OAAO3P,SACrC0iB,EAAqBZ,EAAoBve,IAE7CA,GACJ,CACA,GAAImf,GAAsBrhB,EACtB,IAAK,MAAMshB,KAAaH,EACpBV,EAAoBa,IAAaC,EAAAA,EAAAA,GAAkBvhB,EAAMqhB,EAGrE,CC2DYG,CAA4Bf,EAAqBU,EAAqBnhB,EAE9E,CACAyhB,mBAAAA,GACI,MAAM,QAAE3O,EAAO,oBAAE2N,EAAmB,KAAEzgB,GAASW,KAC/C,IAAKmS,IAAYA,EAAQ7Q,QACrB,OACS,WAATjC,IACAW,KAAK+gB,iBAAmB9J,OAAO+J,aAEnChhB,KAAKihB,eAAiBC,EAAAA,GAAiB7hB,GAAM8S,EAAQgP,qBAAsBlK,OAAOsI,iBAAiBpN,EAAQ7Q,UAC3Gwe,EAAoB,GAAK9f,KAAKihB,eAE9B,MAAMG,EAAkBtB,EAAoBA,EAAoB9hB,OAAS,QACjDgB,IAApBoiB,GACAjP,EAAQ2H,SAASza,EAAM+hB,GAAiBC,KAAKD,GAAiB,EAEtE,CACAE,eAAAA,GACI,IAAIxT,EACJ,MAAM,QAAEqE,EAAO,KAAE9S,EAAI,oBAAEygB,GAAwB9f,KAC/C,IAAKmS,IAAYA,EAAQ7Q,QACrB,OACJ,MAAM9C,EAAQ2T,EAAQ2H,SAASza,GAC/Bb,GAASA,EAAM6iB,KAAKrhB,KAAKihB,gBAAgB,GACzC,MAAMM,EAAqBzB,EAAoB9hB,OAAS,EAClDU,EAAgBohB,EAAoByB,GAC1CzB,EAAoByB,GAAsBL,EAAAA,GAAiB7hB,GAAM8S,EAAQgP,qBAAsBlK,OAAOsI,iBAAiBpN,EAAQ7Q,UACzG,OAAlB5C,QAAiDM,IAAvBgB,KAAKtB,gBAC/BsB,KAAKtB,cAAgBA,IAGa,QAAjCoP,EAAK9N,KAAKwhB,yBAAsC,IAAP1T,OAAgB,EAASA,EAAG9P,SACtEgC,KAAKwhB,kBAAkBtJ,SAAQpa,IAA+C,IAA7C2jB,EAAoBC,GAAoB5jB,EACrEqU,EACK2H,SAAS2H,GACTlL,IAAImL,EAAoB,IAGrC1hB,KAAKigB,sBACT,E,0DEzHJ,MAAM0B,GAAsBC,EAAAA,EAAAA,eAAc,CACtCC,mBAAqB9X,GAAMA,EAC3B+X,UAAU,EACVC,cAAe,UCNbC,GAAgBJ,EAAAA,EAAAA,eAAc,CAAC,GCG/BK,GAAkBL,EAAAA,EAAAA,eAAc,M,aCHtC,MAAMM,GAAcN,EAAAA,EAAAA,eAAc,CAAEO,QAAQ,I,uBCA5C,MAAQ1E,SAAU2E,EAAWrQ,OAAQsQ,IAAoB7F,EAAAA,EAAAA,GAAoBoC,gBAAgB,GCF7F,SAAS0D,EAAYC,GACjB,OAAQA,GACW,kBAARA,GACPvN,OAAOI,UAAUH,eAAeC,KAAKqN,EAAK,UAClD,CCCA,MAAMC,GAA2BZ,EAAAA,EAAAA,eAAc,CAAC,GCMhD,IAAIa,GAA0B,EAC9B,SAASC,EAAiBC,EAAWC,EAAaC,EAAOC,EAAqBC,GAC1E,IAAIjV,EACJ,MAAQyL,cAAeyJ,IAAWC,EAAAA,EAAAA,YAAWjB,GACvCkB,GAAcD,EAAAA,EAAAA,YAAWf,GACzBxH,GAAkBuI,EAAAA,EAAAA,YAAWhB,GAC7BkB,GAAsBF,EAAAA,EAAAA,YAAWtB,GAAqBI,cACtDqB,GAAmBC,EAAAA,EAAAA,UAIzBP,EAAsBA,GAAuBI,EAAYI,UACpDF,EAAiB9hB,SAAWwhB,IAC7BM,EAAiB9hB,QAAUwhB,EAAoBH,EAAW,CACtDC,cACAI,SACAH,QACAnI,kBACA6I,wBAAuB7I,IACW,IAA5BA,EAAgB8I,QAEtBL,yBAGR,MAAM5J,EAAgB6J,EAAiB9hB,QAKjCmiB,GAA2BR,EAAAA,EAAAA,YAAWT,IACxCjJ,GACCA,EAAcmK,aACfX,GACwB,SAAvBxJ,EAAclc,MAA0C,QAAvBkc,EAAclc,MAmDxD,SAA8Bkc,EAAesJ,EAAOE,EAA2BY,GAC3E,MAAM,SAAEC,EAAQ,OAAEC,EAAM,KAAEC,EAAI,gBAAEC,EAAe,aAAEC,EAAY,WAAEC,GAAgBpB,EAC/EtJ,EAAcmK,WAAa,IAAIX,EAA0BxJ,EAAcQ,aAAc8I,EAAM,8BACrF7jB,EACAklB,EAAyB3K,EAAcyJ,SAC7CzJ,EAAcmK,WAAWS,WAAW,CAChCP,WACAC,SACAO,oBAAqB9Y,QAAQwY,IAAUC,GAAmBzB,EAAYyB,GACtExK,gBAQA8K,cAAiC,kBAAXR,EAAsBA,EAAS,OACrDF,yBACAK,eACAC,cAER,CAxEQK,CAAqBlB,EAAiB9hB,QAASuhB,EAAOE,EAA2BU,IAErFc,EAAAA,EAAAA,qBAAmB,KACfhL,GAAiBA,EAAc/I,OAAOqS,EAAOnI,EAAgB,IAMjE,MAAM8J,EAAoB3B,EAAM5G,EAAAA,GAC1BwI,GAAepB,EAAAA,EAAAA,QAAO/X,QAAQkZ,KAC/BvN,OAAOyN,0BACuC,QAA7C5W,EAAKmJ,OAAO0N,mCAAgD,IAAP7W,OAAgB,EAASA,EAAGoH,KAAK+B,OAAQuN,KAiCpG,OAhCAI,EAAAA,EAAAA,IAA0B,KACjBrL,IAELA,EAAcsL,iBACdzC,EAAUjE,OAAO5E,EAAc4E,QAW3BsG,EAAanjB,SAAWiY,EAAcK,gBACtCL,EAAcK,eAAekL,iBACjC,KAEJC,EAAAA,EAAAA,YAAU,KACDxL,KAEAkL,EAAanjB,SAAWiY,EAAcK,gBACvCL,EAAcK,eAAekL,iBAEjCL,EAAanjB,SAAU,EAElBmhB,IACDA,GAA0B,EAC1B7D,eAAeoG,IACnB,IAEGzL,CACX,CACA,SAASyL,IACL/N,OAAOyN,yBAA0B,CACrC,CAwBA,SAASR,EAAyB3K,GAC9B,GAAKA,EAEL,OAAiD,IAA1CA,EAAcxZ,QAAQklB,gBACvB1L,EAAcmK,WACdQ,EAAyB3K,EAAcyJ,OACjD,CCrHA,SAASkC,EAAatC,EAAarJ,EAAe4L,GAC9C,OAAOC,EAAAA,EAAAA,cAAaC,IAChBA,GAAYzC,EAAY0C,OAAS1C,EAAY0C,MAAMD,GAC/C9L,IACI8L,EACA9L,EAAc+L,MAAMD,GAGpB9L,EAAcgM,WAGlBJ,IAC2B,oBAAhBA,EACPA,EAAYE,GAEP/C,EAAY6C,KACjBA,EAAY7jB,QAAU+jB,GAE9B,GAOJ,CAAC9L,GACL,CC9BA,SAASiM,EAAere,GACpB,MAAoB,kBAANA,GAAkB7H,MAAMC,QAAQ4H,EAClD,CCLA,SAASse,EAAoBte,GACzB,OAAc,OAANA,GACS,kBAANA,GACY,oBAAZA,EAAEwJ,KACjB,CCJA,MAAM+U,EAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,EAAe,CAAC,aAAcD,GCLpC,SAASE,EAAsB/C,GAC3B,OAAQ4C,EAAoB5C,EAAM9M,UAC9B4P,EAAa9gB,MAAMxF,GAASmmB,EAAe3C,EAAMxjB,KACzD,CACA,SAASwmB,EAAchD,GACnB,OAAOvX,QAAQsa,EAAsB/C,IAAUA,EAAMiD,SACzD,CCNA,SAASC,EAAuBlD,GAC5B,MAAM,QAAEW,EAAO,QAAEzN,GCFrB,SAAgC8M,EAAOmD,GACnC,GAAIJ,EAAsB/C,GAAQ,CAC9B,MAAM,QAAEW,EAAO,QAAEzN,GAAY8M,EAC7B,MAAO,CACHW,SAAqB,IAAZA,GAAqBgC,EAAehC,GACvCA,OACAxkB,EACN+W,QAASyP,EAAezP,GAAWA,OAAU/W,EAErD,CACA,OAAyB,IAAlB6jB,EAAMoD,QAAoBD,EAAU,CAAC,CAChD,CDTiCE,CAAuBrD,GAAOI,EAAAA,EAAAA,YAAWjB,IACtE,OAAOmE,EAAAA,EAAAA,UAAQ,KAAM,CAAG3C,UAASzN,aAAY,CAACqQ,EAA0B5C,GAAU4C,EAA0BrQ,IAChH,CACA,SAASqQ,EAA0BC,GAC/B,OAAO/mB,MAAMC,QAAQ8mB,GAAQA,EAAKC,KAAK,KAAOD,CAClD,CEVA,MAAME,EAAe,CACjB3Q,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJ4Q,KAAM,CAAC,QACP1C,KAAM,CAAC,OAAQ,gBACf2C,MAAO,CAAC,cACRC,MAAO,CAAC,aAAc,eAAgB,cACtCC,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCC,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3ChD,OAAQ,CAAC,SAAU,aAEjBiD,EAAqB,CAAC,EAC5B,IAAK,MAAMhiB,MAAOyhB,EACdO,EAAmBhiB,IAAO,CACtBiiB,UAAYlE,GAAU0D,EAAazhB,IAAKD,MAAMxF,KAAWwjB,EAAMxjB,M,cCrBvE,MAAM2nB,GAAqBpF,EAAAA,EAAAA,eAAc,CAAC,GCFpCqF,EAAwBC,OAAOC,IAAI,yBCwBzC,SAASC,EAAqBtpB,GAAoF,IAAnF,kBAAEupB,EAAiB,oBAAEvE,EAAmB,UAAEwE,EAAS,eAAEC,EAAc,UAAE5E,GAAY7kB,EAC5GupB,GCvBJ,SAAsBG,GAClB,IAAK,MAAM1iB,KAAO0iB,EACdV,EAAmBhiB,GAAO,IACnBgiB,EAAmBhiB,MACnB0iB,EAAS1iB,GAGxB,CDgByB2iB,CAAaJ,GAiClC,MAAMK,GAAsBC,EAAAA,EAAAA,aAhC5B,SAAyB9E,EAAOsC,GAK5B,IAAIyC,EACJ,MAAMC,EAAiB,KAChB5E,EAAAA,EAAAA,YAAWtB,MACXkB,EACHe,SAAUkE,EAAYjF,KAEpB,SAAEf,GAAa+F,EACf7B,EAAUD,EAAuBlD,GACjCD,EAAc2E,EAAe1E,EAAOf,GAC1C,IAAKA,GAAYiG,EAAAA,EAAW,EA4BpC,YACqB9E,EAAAA,EAAAA,YAAWf,GAAaC,OAKrCtE,CAQR,CAzCYmK,GACA,MAAMC,EAyClB,SAAoCpF,GAChC,MAAM,KAAEiB,EAAI,OAAED,GAAWiD,EACzB,IAAKhD,IAASD,EACV,MAAO,CAAC,EACZ,MAAMqE,EAAW,IAAKpE,KAASD,GAC/B,MAAO,CACH+D,eAAyB,OAAT9D,QAA0B,IAATA,OAAkB,EAASA,EAAKiD,UAAUlE,MAAuB,OAAXgB,QAA8B,IAAXA,OAAoB,EAASA,EAAOkD,UAAUlE,IAClJqF,EAASN,mBACT5oB,EACNmpB,eAAgBD,EAASC,eAEjC,CApDqCC,CAA2BP,GACpDD,EAAgBK,EAAiBL,cAOjC5B,EAAQzM,cAAgBmJ,EAAiBC,EAAWC,EAAaiF,EAAgB/E,EAAqBmF,EAAiBE,eAC3H,CAKA,OAAQE,EAAAA,EAAAA,MAAKrG,EAAcsG,SAAU,CAAE9pB,MAAOwnB,EAASuC,SAAU,CAACX,GAAiB5B,EAAQzM,eAAiBiP,EAAAA,EAAAA,KAAIZ,EAAe,CAAErO,cAAeyM,EAAQzM,iBAAkBsO,IAAqB,KAAMP,EAAU3E,EAAWE,EAAOqC,EAAatC,EAAaoD,EAAQzM,cAAe4L,GAAcvC,EAAad,EAAUkE,EAAQzM,iBACnU,IAGA,OADAmO,EAAoBT,GAAyBtE,EACtC+E,CACX,CACA,SAASI,EAAWW,GAAe,IAAd,SAAE7E,GAAU6E,EAC7B,MAAMC,GAAgBzF,EAAAA,EAAAA,YAAW+D,GAAoB2B,GACrD,OAAOD,QAA8B1pB,IAAb4kB,EAClB8E,EAAgB,IAAM9E,EACtBA,CACV,CEnDA,SAASgF,EAAkBC,GACvB,SAASlO,EAAOgI,GACZ,OAAOyE,EAAsByB,EAAalG,EADQjU,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,CAAC,GAE1D,CACA,GAAqB,qBAAVoa,MACP,OAAOnO,EAMX,MAAMoO,EAAiB,IAAIC,IAC3B,OAAO,IAAIF,MAAMnO,EAAQ,CAMrB1B,IAAKA,CAACgQ,EAASnkB,KAINikB,EAAe7qB,IAAI4G,IACpBikB,EAAexS,IAAIzR,EAAK6V,EAAO7V,IAE5BikB,EAAe9P,IAAInU,KAGtC,CCxCA,MAAMokB,EAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,EAAexG,GACpB,MAKqB,kBAAdA,IAIHA,EAAUyG,SAAS,SAOvBF,EAAqBG,QAAQ1G,IAAc,GAIvC,SAASljB,KAAKkjB,GAItB,CC3BA,MAAM2G,EAAkB,CAAC,E,cCGzB,SAASC,EAAoBzkB,EAAGhH,GAAwB,IAAtB,OAAE+lB,EAAM,SAAED,GAAU9lB,EAClD,OAAQG,EAAAA,EAAeC,IAAI4G,IACvBA,EAAI3G,WAAW,YACb0lB,QAAuB7kB,IAAb4kB,OACL0F,EAAgBxkB,IAAgB,YAARA,EACvC,C,cCLA,MAAM0kB,EAAiBA,CAAChrB,EAAOnB,IACpBA,GAAyB,kBAAVmB,EAChBnB,EAAKkP,UAAU/N,GACfA,E,aCFV,MAAMirB,EAAiB,CACnB9gB,EAAG,aACH+gB,EAAG,aACHC,EAAG,aACHC,qBAAsB,eAEpBC,EAAgBC,EAAAA,EAAmB9rB,O,cCJzC,SAAS+rB,EAAgB5kB,EAAO4U,EAAciQ,GAC1C,MAAM,MAAEC,EAAK,KAAEC,EAAI,gBAAEC,GAAoBhlB,EAEzC,IAAIilB,GAAe,EACfC,GAAqB,EAOzB,IAAK,MAAMvlB,KAAOiV,EAAc,CAC5B,MAAMvb,EAAQub,EAAajV,GAC3B,GAAI7G,EAAAA,EAAeC,IAAI4G,GAEnBslB,GAAe,OAGd,IAAIE,EAAAA,EAAAA,GAAkBxlB,GACvBolB,EAAKplB,GAAOtG,MAGX,CAED,MAAM+rB,EAAcf,EAAehrB,EAAOgsB,EAAAA,EAAiB1lB,IACvDA,EAAI3G,WAAW,WAEfksB,GAAqB,EACrBF,EAAgBrlB,GACZylB,GAGJN,EAAMnlB,GAAOylB,CAErB,CACJ,CAiBA,GAhBKxQ,EAAaxN,YACV6d,GAAgBJ,EAChBC,EAAM1d,UD3BlB,SAAwBwN,EAAcxN,EAAWyd,GAE7C,IAAIS,EAAkB,GAClBC,GAAqB,EAKzB,IAAK,IAAInpB,EAAI,EAAGA,EAAIsoB,EAAetoB,IAAK,CACpC,MAAMuD,EAAMglB,EAAAA,EAAmBvoB,GACzB/C,EAAQub,EAAajV,GAC3B,QAAc9F,IAAVR,EACA,SACJ,IAAImsB,GAAiB,EAOrB,GALIA,EADiB,kBAAVnsB,EACUA,KAAWsG,EAAI3G,WAAW,SAAW,EAAI,GAGnB,IAAtByhB,WAAWphB,IAE3BmsB,GAAkBX,EAAmB,CACtC,MAAMO,EAAcf,EAAehrB,EAAOgsB,EAAAA,EAAiB1lB,IACtD6lB,IACDD,GAAqB,EAErBD,GAAmB,GADGhB,EAAe3kB,IAAQA,KACNylB,OAEvCP,IACAzd,EAAUzH,GAAOylB,EAEzB,CACJ,CAUA,OATAE,EAAkBA,EAAgB/K,OAG9BsK,EACAS,EAAkBT,EAAkBzd,EAAWme,EAAqB,GAAKD,GAEpEC,IACLD,EAAkB,QAEfA,CACX,CCf8BG,CAAe7Q,EAAc5U,EAAMoH,UAAWyd,GAE3DC,EAAM1d,YAKX0d,EAAM1d,UAAY,SAOtB8d,EAAoB,CACpB,MAAM,QAAEQ,EAAU,MAAK,QAAEC,EAAU,MAAK,QAAEC,EAAU,GAAOZ,EAC3DF,EAAME,gBAAkB,GAAGU,KAAWC,KAAWC,GACrD,CACJ,CC9DA,MAAMC,EAAwBA,KAAA,CAC1Bf,MAAO,CAAC,EACR1d,UAAW,CAAC,EACZ4d,gBAAiB,CAAC,EAClBD,KAAM,CAAC,ICEX,SAASe,EAAkB/lB,EAAQgmB,EAAQrI,GACvC,IAAK,MAAM/d,KAAOomB,GACTC,EAAAA,EAAAA,GAAcD,EAAOpmB,KAAUykB,EAAoBzkB,EAAK+d,KACzD3d,EAAOJ,GAAOomB,EAAOpmB,GAGjC,CAQA,SAASsmB,EAASvI,EAAOD,GACrB,MACMqH,EAAQ,CAAC,EAMf,OAFAgB,EAAkBhB,EALApH,EAAMoH,OAAS,CAAC,EAKEpH,GACpC7N,OAAOqW,OAAOpB,EAdlB,SAA+BnsB,EAAwB8kB,GAAa,IAApC,kBAAEoH,GAAmBlsB,EACjD,OAAOqoB,EAAAA,EAAAA,UAAQ,KACX,MAAMhhB,EAAQ6lB,IAEd,OADAjB,EAAgB5kB,EAAOyd,EAAaoH,GAC7BhV,OAAOqW,OAAO,CAAC,EAAGlmB,EAAM+kB,KAAM/kB,EAAM8kB,MAAM,GAClD,CAACrH,GACR,CAQyB0I,CAAuBzI,EAAOD,IAC5CqH,CACX,CACA,SAASsB,EAAa1I,EAAOD,GAEzB,MAAM4I,EAAY,CAAC,EACbvB,EAAQmB,EAASvI,EAAOD,GAoB9B,OAnBIC,EAAMiB,OAA+B,IAAvBjB,EAAM4I,eAEpBD,EAAUE,WAAY,EAEtBzB,EAAM0B,WACF1B,EAAM2B,iBACF3B,EAAM4B,mBACF,OAEZ5B,EAAM6B,aACa,IAAfjJ,EAAMiB,KACA,OACA,QAAsB,MAAfjB,EAAMiB,KAAe,IAAM,WAEzB9kB,IAAnB6jB,EAAMkJ,WACLlJ,EAAMmJ,OAASnJ,EAAMoJ,YAAcpJ,EAAMqJ,YAC1CV,EAAUO,SAAW,GAEzBP,EAAUvB,MAAQA,EACXuB,CACX,CChDA,MAAMW,EAAmB,IAAIhvB,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,SACA,UACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,kBACA,eACA,aAUJ,SAASivB,GAAkBtnB,GACvB,OAAQA,EAAI3G,WAAW,UAClB2G,EAAI3G,WAAW,SAAmB,cAAR2G,GAC3BA,EAAI3G,WAAW,WACf2G,EAAI3G,WAAW,UACf2G,EAAI3G,WAAW,UACf2G,EAAI3G,WAAW,aACfguB,EAAiBjuB,IAAI4G,EAC7B,CCpDA,IAAIunB,GAAiBvnB,IAASsnB,GAAkBtnB,GAoBhD,KAnBiCwnB,GAyBLC,QAAQ,0BAA0BC,WArB1DH,GAAiBvnB,GAAQA,EAAI3G,WAAW,OAASiuB,GAAkBtnB,GAAOwnB,GAAYxnB,GAsB1F,CACA,MAAOgJ,IACH,CA5BJ,IAAiCwe,G,eCDjC,SAASG,GAAWxnB,EAAQwK,EAAQsL,GAChC,MAAyB,kBAAX9V,EACRA,EACAynB,GAAAA,GAAGngB,UAAUkD,EAASsL,EAAO9V,EACvC,CCJA,MAAM0nB,GAAW,CACbld,OAAQ,oBACRmd,MAAO,oBAELC,GAAY,CACdpd,OAAQ,mBACRmd,MAAO,mBCDX,SAASE,GAAc3nB,EAAKrH,EAEfivB,EAAU/C,GAAmB,IAFZ,MAAEgD,EAAK,MAAEC,EAAK,UAAEC,EAAS,QAAErC,EAAO,QAAEC,EAAO,WAAEqC,EAAU,YAAEC,EAAc,EAAC,WAAEC,EAAa,KAElH5lB,GAAQ3J,EAMP,GALAisB,EAAgB5kB,EAAOsC,EAAQuiB,GAK3B+C,EAIA,YAHI5nB,EAAM8kB,MAAMqD,UACZnoB,EAAMooB,MAAMD,QAAUnoB,EAAM8kB,MAAMqD,UAI1CnoB,EAAMooB,MAAQpoB,EAAM8kB,MACpB9kB,EAAM8kB,MAAQ,CAAC,EACf,MAAM,MAAEsD,EAAK,MAAEtD,EAAK,WAAEuD,GAAeroB,EAKjCooB,EAAMhhB,YACFihB,IACAvD,EAAM1d,UAAYghB,EAAMhhB,kBACrBghB,EAAMhhB,WAGbihB,SACaxuB,IAAZ6rB,QAAqC7rB,IAAZ8rB,GAAyBb,EAAM1d,aACzD0d,EAAME,gBFzBd,SAAgCqD,EAAY3C,EAASC,GAGjD,MAAO,GAFW2B,GAAW5B,EAAS2C,EAAW7kB,EAAG6kB,EAAWC,UAC7ChB,GAAW3B,EAAS0C,EAAW9D,EAAG8D,EAAWE,SAEnE,CEqBgCC,CAAuBH,OAAwBxuB,IAAZ6rB,EAAwBA,EAAU,QAAiB7rB,IAAZ8rB,EAAwBA,EAAU,UAG1H9rB,IAAVguB,IACAO,EAAM5kB,EAAIqkB,QACAhuB,IAAViuB,IACAM,EAAM7D,EAAIuD,QACIjuB,IAAdkuB,IACAK,EAAMK,MAAQV,QAECluB,IAAfmuB,GD7BR,SAAsBI,EAAOvvB,GAAqD,IAA7C6vB,EAAOnf,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,EAAGe,EAAMf,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,EAAGof,IAAWpf,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,KAAAA,UAAA,GAErE6e,EAAMJ,WAAa,EAGnB,MAAMvoB,EAAOkpB,EAAcnB,GAAWE,GAEtCU,EAAM3oB,EAAK6K,QAAUid,GAAAA,GAAGngB,WAAWkD,GAEnC,MAAM0d,EAAaT,GAAAA,GAAGngB,UAAUvO,GAC1BovB,EAAcV,GAAAA,GAAGngB,UAAUshB,GACjCN,EAAM3oB,EAAKgoB,OAAS,GAAGO,KAAcC,GACzC,CCkBQW,CAAaR,EAAOJ,EAAYC,EAAaC,GAAY,EAEjE,CC/CA,MAAMW,GAAuBA,KAAA,IACtBhD,IACHuC,MAAO,CAAC,ICJNR,GAAYkB,GAAuB,kBAARA,GAA0C,QAAtBA,EAAIC,cCMzD,SAASC,GAAYtL,EAAOD,EAAawL,EAAWzL,GAChD,MAAM0L,GAAclI,EAAAA,EAAAA,UAAQ,KACxB,MAAMhhB,EAAQ6oB,KAEd,OADAlB,GAAc3nB,EAAOyd,EAAamK,GAASpK,GAAYE,EAAMmH,mBACtD,IACA7kB,EAAMooB,MACTtD,MAAO,IAAK9kB,EAAM8kB,OACrB,GACF,CAACrH,IACJ,GAAIC,EAAMoH,MAAO,CACb,MAAMqE,EAAY,CAAC,EACnBrD,EAAkBqD,EAAWzL,EAAMoH,MAAOpH,GAC1CwL,EAAYpE,MAAQ,IAAKqE,KAAcD,EAAYpE,MACvD,CACA,OAAOoE,CACX,CCdA,SAASE,KAA4C,IAA5BC,EAAkB9f,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,IAAAA,UAAA,GAsBvC,MArBkB4Y,CAAC3E,EAAWE,EAAON,EAAGzkB,EAAoBgkB,KAAa,IAA/B,aAAE/H,GAAcjc,EACtD,MAGMuwB,GAHiBlF,EAAexG,GAChCwL,GACA5C,GAC6B1I,EAAO9I,EAAc+H,EAAUa,GAC5D8L,EPoBd,SAAqB5L,EAAO6L,EAAOF,GAC/B,MAAMC,EAAgB,CAAC,EACvB,IAAK,MAAM3pB,KAAO+d,EAQF,WAAR/d,GAA4C,kBAAjB+d,EAAMlV,SAEjC0e,GAAcvnB,KACU,IAAvB0pB,GAA+BpC,GAAkBtnB,KAChD4pB,IAAUtC,GAAkBtnB,IAE7B+d,EAAiB,WACd/d,EAAI3G,WAAW,aACnBswB,EAAc3pB,GACV+d,EAAM/d,IAGlB,OAAO2pB,CACX,CO3C8BE,CAAY9L,EAA4B,kBAAdF,EAAwB6L,GAClEI,EAAejM,IAAckM,EAAAA,SAC7B,IAAKJ,KAAkBJ,EAAa9L,OACpC,CAAC,GAMD,SAAEgG,GAAa1F,EACfiM,GAAmB3I,EAAAA,EAAAA,UAAQ,KAAOgF,EAAAA,EAAAA,GAAc5C,GAAYA,EAAStP,MAAQsP,GAAW,CAACA,IAC/F,OAAOwG,EAAAA,EAAAA,eAAcpM,EAAW,IACzBiM,EACHrG,SAAUuG,GACZ,CAGV,C,eC9BA,SAASE,GAAW7c,EAAOrU,EAAmBmxB,EAAWvL,GAAY,IAAxC,MAAEuG,EAAK,KAAEC,GAAMpsB,EACxCkX,OAAOqW,OAAOlZ,EAAQ8X,MAAOA,EAAOvG,GAAcA,EAAWwL,oBAAoBD,IAEjF,IAAK,MAAMnqB,KAAOolB,EACd/X,EAAQ8X,MAAMkF,YAAYrqB,EAAKolB,EAAKplB,GAE5C,CCHA,MAAMsqB,GAAsB,IAAIjyB,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAASkyB,GAAUld,EAASmd,EAAaC,EAAY7L,GACjDsL,GAAW7c,EAASmd,OAAatwB,EAAW0kB,GAC5C,IAAK,MAAM5e,KAAOwqB,EAAY/B,MAC1Bpb,EAAQqd,aAAcJ,GAAoBlxB,IAAI4G,GAA0BA,GAAnBoX,EAAAA,GAAAA,GAAYpX,GAAYwqB,EAAY/B,MAAMzoB,GAEvG,CCNA,SAAS2qB,GAA4B5M,EAAO6M,EAAWnW,GACnD,IAAIzL,EACJ,MAAM,MAAEmc,GAAUpH,EACZ8M,EAAY,CAAC,EACnB,IAAK,MAAM7qB,KAAOmlB,IACVkB,EAAAA,EAAAA,GAAclB,EAAMnlB,KACnB4qB,EAAUzF,QACPkB,EAAAA,EAAAA,GAAcuE,EAAUzF,MAAMnlB,KAClCykB,EAAoBzkB,EAAK+d,SACgI7jB,KAAnD,QAApG8O,EAAuB,OAAlByL,QAA4C,IAAlBA,OAA2B,EAASA,EAAcO,SAAShV,UAAyB,IAAPgJ,OAAgB,EAASA,EAAG8hB,cAC1ID,EAAU7qB,GAAOmlB,EAAMnlB,IAU/B,OAHIyU,GAAiB0Q,GAAqC,kBAArBA,EAAM4F,aACvCtW,EAAcuW,iBAAkB,GAE7BH,CACX,CCpBA,SAASF,GAA4B5M,EAAO6M,EAAWnW,GACnD,MAAMoW,EAAYI,GAA8BlN,EAAO6M,EAAWnW,GAClE,IAAK,MAAMzU,KAAO+d,EACd,IAAIsI,EAAAA,EAAAA,GAActI,EAAM/d,MACpBqmB,EAAAA,EAAAA,GAAcuE,EAAU5qB,IAAO,CAI/B6qB,GAHuD,IAArC7F,EAAAA,EAAmBT,QAAQvkB,GACvC,OAASA,EAAIkrB,OAAO,GAAGC,cAAgBnrB,EAAIorB,UAAU,GACrDprB,GACiB+d,EAAM/d,EACjC,CAEJ,OAAO6qB,CACX,C,qCCRA,SAASQ,GAAmB3xB,GACxB,MAAM4xB,GAAiBjF,EAAAA,EAAAA,GAAc3sB,GAASA,EAAMya,MAAQza,EAC5D,OAAO6xB,EAAAA,GAAAA,GAAcD,GACfA,EAAeE,UACfF,CACV,C,0BCQA,MAAMG,GAAsBC,GAAW,CAAC3N,EAAOf,KAC3C,MAAMkE,GAAU/C,EAAAA,EAAAA,YAAWjB,GACrBtH,GAAkBuI,EAAAA,EAAAA,YAAWhB,GAC7BwO,EAAOA,IAbjB,SAAkB3yB,EAAwF+kB,EAAOmD,EAAStL,EAAiBoH,GAAU,IAAlI,gBAAEgO,GAAkB,EAAK,4BAAEL,EAA2B,kBAAEiB,EAAiB,QAAEC,GAAU7yB,EACpG,MAAMqH,EAAQ,CACV4U,aAAc6W,GAAiB/N,EAAOmD,EAAStL,GAAiBoH,GAAmBgO,EAAiBL,GACpGH,YAAaoB,KAKjB,OAHIC,IACAxrB,EAAMmgB,MAASD,GAAasL,EAAQ9N,EAAOwC,EAAUlgB,IAElDA,CACX,CAIuB0rB,CAAUL,EAAQ3N,EAAOmD,EAAStL,EAAiBoH,GACtE,OAAOA,EAAW2O,KAASK,EAAAA,GAAAA,GAAYL,EAAK,EAEhD,SAASM,GAAclB,EAAYxwB,GAC/B,MAAM2xB,GAAaC,EAAAA,GAAAA,GAAkB5xB,GACjC2xB,IACAE,EAAAA,GAAAA,IAAcrB,EAAYmB,EAElC,CACA,SAASG,GAAkBtO,EAAO5Y,EAAY/K,GAC1C,MAAMkyB,EAAO9xB,MAAMC,QAAQ0K,GAAcA,EAAa,CAACA,GACvD,IAAK,IAAI1I,EAAI,EAAGA,EAAI6vB,EAAKpzB,OAAQuD,IAAK,CAClC,MAAMd,GAAW4wB,EAAAA,GAAAA,GAAwBxO,EAAOuO,EAAK7vB,IACrD,GAAId,EAAU,CACV,MAAM,cAAEiZ,EAAa,WAAEnB,KAAerT,GAAWzE,EACjDvB,EAASgG,EAAQwU,EACrB,CACJ,CACJ,CACA,SAASkX,GAAiB/N,EAAOmD,EAAStL,EAAiB4W,EAAuBC,GAC9E,IAAIzjB,EACJ,MAAMH,EAAS,CAAC,EACVkiB,EAAa,GACbC,EAAkBwB,QAAqGtyB,KAApD,QAAtB8O,EAAK+U,EAAMoH,aAA0B,IAAPnc,OAAgB,EAASA,EAAG+hB,YACvG2B,EAAeD,EAAmB1O,EAAO,CAAC,GAChD,IAAK,MAAM/d,KAAO0sB,EACd7jB,EAAO7I,GAAOqrB,GAAmBqB,EAAa1sB,IAElD,IAAI,QAAE0e,EAAO,QAAEzN,GAAY8M,EAC3B,MAAM4O,EAA0B7L,EAAsB/C,GAChD6O,EAAkB7L,EAAchD,GAClCmD,GACA0L,IACCD,IACiB,IAAlB5O,EAAMoD,eACUjnB,IAAZwkB,IACAA,EAAUwC,EAAQxC,cACNxkB,IAAZ+W,IACAA,EAAUiQ,EAAQjQ,UAE1B,IAAI4b,IAA4BjX,IACE,IAA5BA,EAAgB8I,QAEtBmO,EAA4BA,IAAyC,IAAZnO,EACzD,MAAMoO,EAAeD,EAA4B5b,EAAUyN,EAuC3D,OAtCIoO,GACwB,mBAAjBA,IACNnM,EAAoBmM,IACrBT,GAAkBtO,EAAO+O,GAAc,CAAC1sB,EAAQwU,KAC5C,IAAK,MAAM5U,KAAOI,EAAQ,CACtB,IAAI8U,EAAc9U,EAAOJ,GACzB,GAAIxF,MAAMC,QAAQya,GAAc,CAQ5BA,EAAcA,EAHA2X,EACR3X,EAAYhc,OAAS,EACrB,EAEV,CACoB,OAAhBgc,IACArM,EAAO7I,GAAOkV,EAEtB,CACA,IAAK,MAAMlV,KAAO4U,EACd/L,EAAO7I,GAAO4U,EAAc5U,EAChC,IAIJgrB,IACI/Z,IAAuB,IAAZyN,IAAsBiC,EAAoB1P,IACrDob,GAAkBtO,EAAO9M,GAAU7Q,IAC/B,IAAK,MAAMJ,KAAOI,EACd6rB,GAAclB,EAAY/qB,EAC9B,IAGJ+qB,EAAW7xB,SACX2P,EAAOkiB,WAAaA,EAAWvJ,KAAK,OAGrC3Y,CACX,C,eCpGA,MAAMkkB,GAAkB,CACpBtK,eAAgBgJ,GAAmB,CAC/Bd,4BAA6BA,GAC7BiB,kBAAmB1C,GACnB2C,QAASA,CAAC9N,EAAOwC,EAAQvnB,KAAoC,IAAlC,YAAEwxB,EAAW,aAAEvV,GAAcjc,EACpD8S,GAAAA,GAAMoN,MAAK,KACP,IACIsR,EAAY9B,WAEJ,oBADGnI,EAASyM,QAEVzM,EAASyM,UACTzM,EAAS0M,uBACvB,CACA,MAAO9tB,GAEHqrB,EAAY9B,WAAa,CACrB7kB,EAAG,EACH+gB,EAAG,EACH+D,MAAO,EACPC,OAAQ,EAEhB,KAEJ9c,GAAAA,GAAMuN,QAAO,KACT2O,GAAcwC,EAAavV,EAAcgT,GAAS1H,EAAS2M,SAAUnP,EAAMmH,mBAC3EqF,GAAUhK,EAAUiK,EAAY,GAClC,KC9BR2C,GAAmB,CACrB1K,eAAgBgJ,GAAmB,CAC/BT,iBAAiB,EACjBL,4BAA2B,GAC3BiB,kBAAmB1F,KCR3B,SAASkH,GAAYhtB,EAAQitB,EAAWC,GAAsC,IAA7BryB,EAAO2O,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,CAAE2jB,SAAS,GAElE,OADAntB,EAAOotB,iBAAiBH,EAAWC,EAASryB,GACrC,IAAMmF,EAAOqtB,oBAAoBJ,EAAWC,EACvD,CCHA,MAAMI,GAAoBC,GACI,UAAtBA,EAAMC,YACyB,kBAAjBD,EAAME,QAAuBF,EAAME,QAAU,GAWhC,IAApBF,EAAMG,UCXrB,SAASC,GAAiBJ,GAA2B,IAApBK,EAASpkB,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,OACzC,MAAO,CACHqkB,MAAO,CACHpqB,EAAG8pB,EAAM,GAAGK,MACZpJ,EAAG+I,EAAM,GAAGK,OAGxB,CACA,MAAME,GAAkBZ,GACZK,GAAUD,GAAiBC,IAAUL,EAAQK,EAAOI,GAAiBJ,ICRjF,SAASQ,GAAgB/tB,EAAQitB,EAAWC,EAASryB,GACjD,OAAOmyB,GAAYhtB,EAAQitB,EAAWa,GAAeZ,GAAUryB,EACnE,C,cCLA,SAASmzB,GAAW7zB,GAChB,IAAI8zB,EAAO,KACX,MAAO,KACH,MAAMC,EAAWA,KACbD,EAAO,IAAI,EAEf,OAAa,OAATA,IACAA,EAAO9zB,EACA+zB,EAEC,CAEpB,CACA,MAAMC,GAAuBH,GAAW,kBAClCI,GAAqBJ,GAAW,gBACtC,SAASK,GAAczP,GACnB,IAAIqP,GAAO,EACX,GAAa,MAATrP,EACAqP,EAAOG,UAEN,GAAa,MAATxP,EACLqP,EAAOE,SAEN,CACD,MAAMG,EAAiBH,KACjBI,EAAeH,KACjBE,GAAkBC,EAClBN,EAAOA,KACHK,IACAC,GAAc,GAKdD,GACAA,IACAC,GACAA,IAEZ,CACA,OAAON,CACX,CACA,SAASO,KAGL,MAAMC,EAAkBJ,IAAc,GACtC,OAAKI,IAELA,KACO,EACX,CClDA,MAAMC,GACFj0B,WAAAA,CAAYk0B,GACR7zB,KAAK8zB,WAAY,EACjB9zB,KAAK6zB,KAAOA,CAChB,CACArjB,MAAAA,GAAW,ECCf,SAASujB,GAAcF,EAAMG,GACzB,MAAM7B,EAAY6B,EAAW,eAAiB,eACxCC,EAAeD,EAAW,eAAiB,aAajD,OAAOf,GAAgBY,EAAKvyB,QAAS6wB,GAZjB+B,CAACzB,EAAO0B,KACxB,GAA0B,UAAtB1B,EAAMC,aAA2BgB,KACjC,OACJ,MAAM7Q,EAAQgR,EAAK9c,WACf8c,EAAKja,gBAAkBiJ,EAAMuR,YAC7BP,EAAKja,eAAeya,UAAU,aAAcL,GAEhD,MAAM90B,EAAW2jB,EAAMoR,GACnB/0B,GACA0R,GAAAA,GAAMwN,YAAW,IAAMlf,EAASuzB,EAAO0B,IAC3C,GAEyD,CACzD9B,SAAUwB,EAAK9c,WAAWkd,IAElC,CCjBA,MAAMK,GAAgBA,CAACtR,EAAQxH,MACtBA,IAGIwH,IAAWxH,GAIT8Y,GAActR,EAAQxH,EAAM+Y,gB,eCL3C,SAASC,GAA0Bn1B,EAAM+yB,GACrC,IAAKA,EACD,OACJ,MAAMqC,EAAwB,IAAIC,aAAa,UAAYr1B,GAC3D+yB,EAAQqC,EAAuB5B,GAAiB4B,GACpD,CCVA,MAAME,GAAoB,IAAIC,QAMxBC,GAAY,IAAID,QAChBE,GAAwBC,IAC1B,MAAM71B,EAAWy1B,GAAkB1b,IAAI8b,EAAM7vB,QAC7ChG,GAAYA,EAAS61B,EAAM,EAEzBC,GAA4BC,IAC9BA,EAAQ/c,QAAQ4c,GAAqB,EAqBzC,SAASI,GAAoB/iB,EAASpS,EAASb,GAC3C,MAAMi2B,EApBV,SAAiCr3B,GAAuB,IAAtB,KAAEs3B,KAASr1B,GAASjC,EAClD,MAAMu3B,EAAaD,GAAQE,SAItBT,GAAU32B,IAAIm3B,IACfR,GAAUte,IAAI8e,EAAY,CAAC,GAE/B,MAAME,EAAgBV,GAAU5b,IAAIoc,GAC9BvwB,EAAM0wB,KAAKC,UAAU11B,GAQ3B,OAHKw1B,EAAczwB,KACfywB,EAAczwB,GAAO,IAAI4wB,qBAAqBV,GAA0B,CAAEI,UAASr1B,KAEhFw1B,EAAczwB,EACzB,CAEsC6wB,CAAyB51B,GAG3D,OAFA40B,GAAkBpe,IAAIpE,EAASjT,GAC/Bi2B,EAA0BS,QAAQzjB,GAC3B,KACHwiB,GAAkB/W,OAAOzL,GACzBgjB,EAA0BU,UAAU1jB,EAAQ,CAEpD,CC3CA,MAAM2jB,GAAiB,CACnBjxB,KAAM,EACN2S,IAAK,GCAT,MAAMue,GAAoB,CACtBlP,OAAQ,CACJ+M,QDAR,cAA4BA,GACxBj0B,WAAAA,GACI4R,SAAS7C,WACT1O,KAAKg2B,gBAAiB,EACtBh2B,KAAKi2B,UAAW,CACpB,CACAC,aAAAA,GACIl2B,KAAKulB,UACL,MAAM,SAAE4Q,EAAW,CAAC,GAAMn2B,KAAK6zB,KAAK9c,YAC9B,KAAEqe,EAAMgB,OAAQC,EAAU,OAAEC,EAAS,OAAM,KAAEC,GAASJ,EACtDp2B,EAAU,CACZq1B,KAAMA,EAAOA,EAAK9zB,aAAUtC,EAC5Bq3B,aACAG,UAA6B,kBAAXF,EAAsBA,EAASR,GAAeQ,IA+BpE,OAAOpB,GAAoBl1B,KAAK6zB,KAAKvyB,QAASvB,GA7BhBg1B,IAC1B,MAAM,eAAE0B,GAAmB1B,EAI3B,GAAI/0B,KAAKi2B,WAAaQ,EAClB,OAMJ,GALAz2B,KAAKi2B,SAAWQ,EAKZF,IAASE,GAAkBz2B,KAAKg2B,eAChC,OAEKS,IACLz2B,KAAKg2B,gBAAiB,GAEtBh2B,KAAK6zB,KAAKja,gBACV5Z,KAAK6zB,KAAKja,eAAeya,UAAU,cAAeoC,GAMtD,MAAM,gBAAEC,EAAe,gBAAEC,GAAoB32B,KAAK6zB,KAAK9c,WACjD7X,EAAWu3B,EAAiBC,EAAkBC,EACpDz3B,GAAYA,EAAS61B,EAAM,GAGnC,CACAzP,KAAAA,GACItlB,KAAKk2B,eACT,CACA1lB,MAAAA,GACI,GAAoC,qBAAzBklB,qBACP,OACJ,MAAM,MAAE7S,EAAK,UAAE6M,GAAc1vB,KAAK6zB,KAC5B+C,EAAoB,CAAC,SAAU,SAAU,QAAQ/xB,KAO/D,SAAiC/G,GAA0D,IAAzD,SAAEq4B,EAAW,CAAC,GAAGr4B,GAAIq4B,SAAUU,EAAe,CAAC,GAAGnoB,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpF,OAAQrP,GAAS82B,EAAS92B,KAAUw3B,EAAax3B,EACrD,CAToEy3B,CAAyBjU,EAAO6M,IACxFkH,GACA52B,KAAKk2B,eAEb,CACA3Q,OAAAA,GAAY,ICxDZoB,IAAK,CACDiN,QHMR,cAA2BA,GACvBj0B,WAAAA,GACI4R,SAAS7C,WACT1O,KAAK+2B,qBAAuBvuB,GAAAA,EAC5BxI,KAAKg3B,mBAAqBxuB,GAAAA,EAC1BxI,KAAKi3B,0BAA4BzuB,GAAAA,EACjCxI,KAAKk3B,kBAAoB,CAACC,EAAYC,KAClC,GAAIp3B,KAAKq3B,WACL,OACJr3B,KAAKg3B,qBACL,MAAMnU,EAAQ7iB,KAAK6zB,KAAK9c,WAiBlBugB,EAA0BrE,GAAgBhc,OAAQ,aAhBhCsgB,CAACC,EAAUC,KAC/B,IAAKz3B,KAAK03B,gBACN,OACJ,MAAM,MAAE1L,EAAK,YAAE2L,EAAW,gBAAEC,GAAoB53B,KAAK6zB,KAAK9c,WAKpDqb,EAAWwF,GACZtD,GAAct0B,KAAK6zB,KAAKvyB,QAASk2B,EAAStyB,QAEzC8mB,EADA2L,EAEFvF,GACAxhB,GAAAA,GAAMJ,QAAO,IAAM4hB,EAAQoF,EAAUC,IACzC,GAEkF,CAClFpF,UAAWxP,EAAMmJ,OAASnJ,EAAmB,eAE3CgV,EAA8B5E,GAAgBhc,OAAQ,iBAAiB,CAAC6gB,EAAaC,IAAe/3B,KAAKg4B,YAAYF,EAAaC,IAAa,CACjJ1F,UAAWxP,EAAM8U,aACb9U,EAAuB,mBAE/B7iB,KAAKg3B,oBAAqBnpB,EAAAA,GAAAA,GAAKypB,EAAyBO,GACxD73B,KAAKi4B,WAAWd,EAAYC,EAAU,EAE1Cp3B,KAAKk4B,qBAAuB,KACxB,MAmBMC,EAAwBjG,GAAYlyB,KAAK6zB,KAAKvyB,QAAS,WAnBtC82B,IACnB,GAAyB,UAArBA,EAAatzB,KAAmB9E,KAAKq3B,WACrC,OAWJr3B,KAAKg3B,qBACLh3B,KAAKg3B,mBAAqB9E,GAAYlyB,KAAK6zB,KAAKvyB,QAAS,SAXpC+2B,IACM,UAAnBA,EAAWvzB,KAAoB9E,KAAK03B,iBAExClD,GAA0B,MAAM,CAAC/B,EAAO0B,KACpC,MAAM,MAAEnI,GAAUhsB,KAAK6zB,KAAK9c,WACxBiV,GACApb,GAAAA,GAAMwN,YAAW,IAAM4N,EAAMyG,EAAO0B,IACxC,GACF,IAINK,GAA0B,QAAQ,CAAC/B,EAAO0B,KACtCn0B,KAAKi4B,WAAWxF,EAAO0B,EAAK,GAC9B,IAQAmE,EAAqBpG,GAAYlyB,KAAK6zB,KAAKvyB,QAAS,QALvCi3B,KACVv4B,KAAKq3B,YAEV7C,GAA0B,UAAU,CAACsD,EAAaC,IAAe/3B,KAAKg4B,YAAYF,EAAaC,IAAY,IAG/G/3B,KAAKi3B,2BAA4BppB,EAAAA,GAAAA,GAAKsqB,EAAuBG,EAAmB,CAExF,CACAL,UAAAA,CAAWxF,EAAO0B,GACdn0B,KAAKq3B,YAAa,EAClB,MAAM,WAAEpL,EAAU,SAAEC,GAAalsB,KAAK6zB,KAAK9c,WAIvCmV,GAAYlsB,KAAK6zB,KAAKja,gBACtB5Z,KAAK6zB,KAAKja,eAAeya,UAAU,YAAY,GAE/CpI,GACArb,GAAAA,GAAMwN,YAAW,IAAM6N,EAAWwG,EAAO0B,IAEjD,CACAuD,aAAAA,GACI13B,KAAKg3B,qBACLh3B,KAAKq3B,YAAa,EAKlB,OAJcr3B,KAAK6zB,KAAK9c,WACdmV,UAAYlsB,KAAK6zB,KAAKja,gBAC5B5Z,KAAK6zB,KAAKja,eAAeya,UAAU,YAAY,IAE3CX,IACZ,CACAsE,WAAAA,CAAYvF,EAAO0B,GACf,IAAKn0B,KAAK03B,gBACN,OACJ,MAAM,YAAEC,GAAgB33B,KAAK6zB,KAAK9c,WAC9B4gB,GACA/mB,GAAAA,GAAMwN,YAAW,IAAMuZ,EAAYlF,EAAO0B,IAElD,CACA7O,KAAAA,GACI,MAAMzC,EAAQ7iB,KAAK6zB,KAAK9c,WAClByhB,EAAwBvF,GAAgBpQ,EAAM+U,gBAAkB3gB,OAASjX,KAAK6zB,KAAKvyB,QAAS,cAAetB,KAAKk3B,kBAAmB,CACrI7E,UAAWxP,EAAMoJ,YACbpJ,EAAsB,kBAExB4V,EAAsBvG,GAAYlyB,KAAK6zB,KAAKvyB,QAAS,QAAStB,KAAKk4B,sBACzEl4B,KAAK+2B,sBAAuBlpB,EAAAA,GAAAA,GAAK2qB,EAAuBC,EAC5D,CACAlT,OAAAA,GACIvlB,KAAK+2B,uBACL/2B,KAAKg3B,qBACLh3B,KAAKi3B,2BACT,IGlHAxQ,MAAO,CACHmN,QCTR,cAA2BA,GACvBj0B,WAAAA,GACI4R,SAAS7C,WACT1O,KAAKg0B,UAAW,CACpB,CACA0E,OAAAA,GACI,IAAIC,GAAiB,EAOrB,IACIA,EAAiB34B,KAAK6zB,KAAKvyB,QAAQs3B,QAAQ,iBAC/C,CACA,MAAO30B,GACH00B,GAAiB,CACrB,CACKA,GAAmB34B,KAAK6zB,KAAKja,iBAElC5Z,KAAK6zB,KAAKja,eAAeya,UAAU,cAAc,GACjDr0B,KAAKg0B,UAAW,EACpB,CACA6E,MAAAA,GACS74B,KAAKg0B,UAAah0B,KAAK6zB,KAAKja,iBAEjC5Z,KAAK6zB,KAAKja,eAAeya,UAAU,cAAc,GACjDr0B,KAAKg0B,UAAW,EACpB,CACA1O,KAAAA,GACItlB,KAAKulB,SAAU1X,EAAAA,GAAAA,GAAKqkB,GAAYlyB,KAAK6zB,KAAKvyB,QAAS,SAAS,IAAMtB,KAAK04B,YAAYxG,GAAYlyB,KAAK6zB,KAAKvyB,QAAS,QAAQ,IAAMtB,KAAK64B,WACzI,CACAtT,OAAAA,GAAY,IDtBZmB,MAAO,CACHkN,QLSR,cAA2BA,GACvBtO,KAAAA,GACItlB,KAAKulB,SAAU1X,EAAAA,GAAAA,GAAKkmB,GAAc/zB,KAAK6zB,MAAM,GAAOE,GAAc/zB,KAAK6zB,MAAM,GACjF,CACAtO,OAAAA,GAAY,K,eO7BhB,SAASuT,GAAetyB,EAAMuyB,GAC1B,IAAKz5B,MAAMC,QAAQw5B,GACf,OAAO,EACX,MAAMC,EAAaD,EAAK/6B,OACxB,GAAIg7B,IAAexyB,EAAKxI,OACpB,OAAO,EACX,IAAK,IAAIuD,EAAI,EAAGA,EAAIy3B,EAAYz3B,IAC5B,GAAIw3B,EAAKx3B,KAAOiF,EAAKjF,GACjB,OAAO,EAEf,OAAO,CACX,C,yBCHA,MAAM03B,GAAuB,IAAIvT,GAAsB9W,UACjDsqB,GAAoBxT,EAAqB1nB,OAI/C,SAASm7B,GAAqB5f,GAC1B,IAAIxD,EAJR,SAAqBwD,GACjB,OAAQnC,GAAelV,QAAQsV,IAAIJ,EAAWlK,KAAIpP,IAAA,IAAC,UAAE8X,EAAS,QAAE7V,GAASjC,EAAA,OAAKie,EAAAA,GAAAA,GAAqBxC,EAAe3D,EAAW7V,EAAQ,IACzI,CAEkBq5B,CAAY7f,GACtBpU,EAAQk0B,KACRC,GAAkB,EAKtB,MAAMC,EAA2Bl8B,GAAS,CAAC2f,EAAK/S,KAC5C,IAAI6D,EACJ,MAAMrN,GAAWga,EAAAA,GAAAA,GAAelB,EAAetP,EAAqB,SAAT5M,EACZ,QAAxCyQ,EAAKyL,EAAcmB,uBAAoC,IAAP5M,OAAgB,EAASA,EAAG6M,YAC7E3b,GACN,GAAIyB,EAAU,CACV,MAAM,WAAE8X,EAAU,cAAEmB,KAAkBxU,GAAWzE,EACjDuc,EAAM,IAAKA,KAAQ9X,KAAWwU,EAClC,CACA,OAAOsD,CAAG,EAmBd,SAAS8H,EAAe0U,GACpB,MAAM3W,EAAQtJ,EAAcxC,WACtBiP,EAAUzM,EAAckgB,mBAAkB,IAAS,CAAC,EAKpDriB,EAAa,GAKbsiB,EAAc,IAAIv8B,IAMxB,IAAIw8B,EAAkB,CAAC,EAKnBC,EAAsB/mB,IAO1B,IAAK,IAAItR,EAAI,EAAGA,EAAI23B,GAAmB33B,IAAK,CACxC,MAAMlE,EAAO47B,GAAqB13B,GAC5Bs4B,EAAY10B,EAAM9H,GAClBgpB,OAAuBrnB,IAAhB6jB,EAAMxlB,GACbwlB,EAAMxlB,GACN2oB,EAAQ3oB,GACRy8B,EAAgBtU,EAAea,GAK/B0T,EAAc18B,IAASm8B,EAAoBK,EAAU7F,SAAW,MAClD,IAAhB+F,IACAH,EAAsBr4B,GAO1B,IAAIy4B,EAAc3T,IAASL,EAAQ3oB,IAC/BgpB,IAASxD,EAAMxlB,IACfy8B,EAeJ,GAXIE,GACAV,GACA/f,EAAc0gB,yBACdD,GAAc,GAMlBH,EAAU1gB,cAAgB,IAAKwgB,IAI7BE,EAAU7F,UAA4B,OAAhB+F,IAElB1T,IAASwT,EAAUK,UAErBzU,EAAoBY,IACJ,mBAATA,EACP,SAQJ,IAAI8T,EADqBC,GAAuBP,EAAUK,SAAU7T,IAG/DhpB,IAASm8B,GACNK,EAAU7F,WACTgG,GACDF,GAEHv4B,EAAIq4B,GAAuBE,EAC5BO,GAAuB,EAK3B,MAAMC,EAAiBh7B,MAAMC,QAAQ8mB,GAAQA,EAAO,CAACA,GAKrD,IAAIkU,EAAiBD,EAAevd,OAAOwc,EAAwBl8B,GAAO,CAAC,IACvD,IAAhB08B,IACAQ,EAAiB,CAAC,GAUtB,MAAM,mBAAEC,EAAqB,CAAC,GAAMX,EAC9BY,EAAU,IACTD,KACAD,GAEDG,EAAiB51B,IACnBq1B,GAAoB,EAChBT,EAAYx7B,IAAI4G,KAChBu1B,GAAuB,EACvBX,EAAY9b,OAAO9Y,IAEvB+0B,EAAUzgB,eAAetU,IAAO,EAChC,MAAMoN,EAAcqH,EAAcO,SAAShV,GACvCoN,IACAA,EAAY0d,WAAY,EAAK,EAErC,IAAK,MAAM9qB,KAAO21B,EAAS,CACvB,MAAMj0B,EAAO+zB,EAAez1B,GACtBi0B,EAAOyB,EAAmB11B,GAEhC,GAAI60B,EAAgB1kB,eAAenQ,GAC/B,SAIJ,IAAI61B,GAAkB,EAElBA,GADAxe,EAAAA,GAAAA,GAAkB3V,KAAS2V,EAAAA,GAAAA,GAAkB4c,IAC1BD,GAAetyB,EAAMuyB,GAGtBvyB,IAASuyB,EAE3B4B,OACa37B,IAATwH,GAA+B,OAATA,EAEtBk0B,EAAc51B,GAId40B,EAAY/b,IAAI7Y,QAGN9F,IAATwH,GAAsBkzB,EAAYx7B,IAAI4G,GAK3C41B,EAAc51B,GAOd+0B,EAAU1gB,cAAcrU,IAAO,CAEvC,CAKA+0B,EAAUK,SAAW7T,EACrBwT,EAAUW,mBAAqBD,EAI3BV,EAAU7F,WACV2F,EAAkB,IAAKA,KAAoBY,IAE3CjB,GAAmB/f,EAAcgK,wBACjC4W,GAAoB,IAKpBA,GAAuBH,IAAeK,GACtCjjB,EAAWlI,QAAQorB,EAAeptB,KAAK0I,IAAS,CAC5CA,UAAWA,EACX7V,QAAS,CAAE1C,YAGvB,CAMA,GAAIq8B,EAAY3e,KAAM,CAClB,MAAM6f,EAAoB,CAAC,EAC3BlB,EAAYxhB,SAASpT,IACjB,MAAM+1B,EAAiBthB,EAAcuhB,cAAch2B,GAC7CoN,EAAcqH,EAAcO,SAAShV,GACvCoN,IACAA,EAAY0d,WAAY,GAE5BgL,EAAkB91B,GAA0B,OAAnB+1B,QAA8C,IAAnBA,EAA4BA,EAAiB,IAAI,IAEzGzjB,EAAWlI,KAAK,CAAE0G,UAAWglB,GACjC,CACA,IAAIG,EAAgBzvB,QAAQ8L,EAAWpZ,QAOvC,OANIs7B,IACmB,IAAlBzW,EAAMW,SAAqBX,EAAMW,UAAYX,EAAM9M,SACnDwD,EAAc0gB,yBACfc,GAAgB,GAEpBzB,GAAkB,EACXyB,EAAgBhlB,EAAQqB,GAAclV,QAAQH,SACzD,CAkBA,MAAO,CACH+iB,iBACAuP,UAhBJ,SAAmBh3B,EAAM22B,GACrB,IAAIlmB,EAEJ,GAAI3I,EAAM9H,GAAM22B,WAAaA,EACzB,OAAO9xB,QAAQH,UAEsB,QAAxC+L,EAAKyL,EAAcuB,uBAAoC,IAAPhN,GAAyBA,EAAGoK,SAASsD,IAAY,IAAI1N,EAAI,OAAuC,QAA/BA,EAAK0N,EAAM5B,sBAAmC,IAAP9L,OAAgB,EAASA,EAAGumB,UAAUh3B,EAAM22B,EAAS,IAC9M7uB,EAAM9H,GAAM22B,SAAWA,EACvB,MAAM5c,EAAa0N,EAAeznB,GAClC,IAAK,MAAMyH,KAAOK,EACdA,EAAML,GAAKqU,cAAgB,CAAC,EAEhC,OAAO/B,CACX,EAII4jB,mBA9PJ,SAA4BC,GACxBllB,EAAUklB,EAAa1hB,EAC3B,EA6PIM,SAAUA,IAAM1U,EAChB+1B,MAAOA,KACH/1B,EAAQk0B,KACRC,GAAkB,CAAI,EAGlC,CACA,SAASc,GAAuBrB,EAAMvyB,GAClC,MAAoB,kBAATA,EACAA,IAASuyB,IAEXz5B,MAAMC,QAAQiH,KACXsyB,GAAetyB,EAAMuyB,EAGrC,CACA,SAASoC,KACL,MAAO,CACHnH,SAFyBtlB,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,IAAAA,UAAA,GAGzByK,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjBohB,mBAAoB,CAAC,EAE7B,CACA,SAASnB,KACL,MAAO,CACHtjB,QAASolB,IAAgB,GACzBC,YAAaD,KACb/G,WAAY+G,KACZjP,SAAUiP,KACVE,UAAWF,KACXG,WAAYH,KACZ3U,KAAM2U,KAEd,CCnUA,IAAIxS,GAAK,ECCT,MAAMvR,GAAa,CACfxB,UAAW,CACPge,QCDR,cAA+BA,GAM3Bj0B,WAAAA,CAAYk0B,GACRtiB,MAAMsiB,GACNA,EAAKja,iBAAmBia,EAAKja,eAAiBuf,GAAqBtF,GACvE,CACA0H,mCAAAA,GACI,MAAM,QAAExlB,GAAY/V,KAAK6zB,KAAK9c,WAC1B0O,EAAoB1P,KACpB/V,KAAKw7B,gBAAkBzlB,EAAQ0lB,UAAUz7B,KAAK6zB,MAEtD,CAIAvO,KAAAA,GACItlB,KAAKu7B,qCACT,CACA/qB,MAAAA,GACI,MAAM,QAAEuF,GAAY/V,KAAK6zB,KAAK9c,YACtBhB,QAAS2lB,GAAgB17B,KAAK6zB,KAAKnE,WAAa,CAAC,EACrD3Z,IAAY2lB,GACZ17B,KAAKu7B,qCAEb,CACAhW,OAAAA,GACI,IAAIzX,EACJ9N,KAAK6zB,KAAKja,eAAeshB,QACO,QAA/BptB,EAAK9N,KAAKw7B,uBAAoC,IAAP1tB,GAAyBA,EAAGoH,KAAKlV,KAC7E,ID9BAwmB,KAAM,CACFoN,QDLR,cAAmCA,GAC/Bj0B,WAAAA,GACI4R,SAAS7C,WACT1O,KAAK2oB,GAAKA,IACd,CACAnY,MAAAA,GACI,IAAKxQ,KAAK6zB,KAAKnZ,gBACX,OACJ,MAAM,UAAEihB,EAAS,eAAEC,GAAmB57B,KAAK6zB,KAAKnZ,iBACxCihB,UAAWE,GAAkB77B,KAAK6zB,KAAKiI,qBAAuB,CAAC,EACvE,IAAK97B,KAAK6zB,KAAKja,gBAAkB+hB,IAAcE,EAC3C,OAEJ,MAAME,EAAgB/7B,KAAK6zB,KAAKja,eAAeya,UAAU,QAASsH,GAC9DC,IAAmBD,GACnBI,EAAcj6B,MAAK,IAAM85B,EAAe57B,KAAK2oB,KAErD,CACArD,KAAAA,GACI,MAAM,SAAE0W,GAAah8B,KAAK6zB,KAAKnZ,iBAAmB,CAAC,EAC/CshB,IACAh8B,KAAKulB,QAAUyW,EAASh8B,KAAK2oB,IAErC,CACApD,OAAAA,GAAY,K,0BG3BhB,MAAM0W,GAAWA,CAACt4B,EAAGC,IAAMxF,KAAKyH,IAAIlC,EAAIC,GCWxC,MAAMs4B,GACFv8B,WAAAA,CAAY8yB,EAAO0J,GAAgF,IAAtE,mBAAEta,EAAkB,cAAEua,EAAa,iBAAEC,GAAmB,GAAO3tB,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,CAAC,EAgE5F,GA5DA1O,KAAKm3B,WAAa,KAIlBn3B,KAAKs8B,cAAgB,KAIrBt8B,KAAKu8B,kBAAoB,KAIzBv8B,KAAKm8B,SAAW,CAAC,EAIjBn8B,KAAKo8B,cAAgBnlB,OACrBjX,KAAKw8B,YAAc,KACf,IAAMx8B,KAAKs8B,gBAAiBt8B,KAAKu8B,kBAC7B,OACJ,MAAMpI,EAAOsI,GAAWz8B,KAAKu8B,kBAAmBv8B,KAAK08B,SAC/CC,EAAmC,OAApB38B,KAAKm3B,WAIpByF,EDxClB,SAAoBj5B,EAAGC,GAEnB,MAAMi5B,EAASZ,GAASt4B,EAAEgF,EAAG/E,EAAE+E,GACzBm0B,EAASb,GAASt4B,EAAE+lB,EAAG9lB,EAAE8lB,GAC/B,OAAOtrB,KAAKC,KAAKw+B,GAAU,EAAIC,GAAU,EAC7C,CCmC4CC,CAAW5I,EAAK1kB,OAAQ,CAAE9G,EAAG,EAAG+gB,EAAG,KAAQ,EAC3E,IAAKiT,IAAiBC,EAClB,OACJ,MAAM,MAAE7J,GAAUoB,GACZ,UAAEzjB,GAAcK,GAAAA,GACtB/Q,KAAK08B,QAAQxtB,KAAK,IAAK6jB,EAAOriB,cAC9B,MAAM,QAAEssB,EAAO,OAAEC,GAAWj9B,KAAKm8B,SAC5BQ,IACDK,GAAWA,EAAQh9B,KAAKs8B,cAAenI,GACvCn0B,KAAKm3B,WAAan3B,KAAKs8B,eAE3BW,GAAUA,EAAOj9B,KAAKs8B,cAAenI,EAAK,EAE9Cn0B,KAAKk9B,kBAAoB,CAACzK,EAAO0B,KAC7Bn0B,KAAKs8B,cAAgB7J,EACrBzyB,KAAKu8B,kBAAoBY,GAAehJ,EAAMn0B,KAAK6hB,oBAEnDjR,GAAAA,GAAMJ,OAAOxQ,KAAKw8B,aAAa,EAAK,EAExCx8B,KAAKo9B,gBAAkB,CAAC3K,EAAO0B,KAC3Bn0B,KAAKq9B,MACL,MAAM,MAAE5kB,EAAK,aAAE6kB,EAAY,gBAAEC,GAAoBv9B,KAAKm8B,SAGtD,GAFIn8B,KAAKq8B,kBACLkB,GAAmBA,KACjBv9B,KAAKs8B,gBAAiBt8B,KAAKu8B,kBAC7B,OACJ,MAAMiB,EAAUf,GAA0B,kBAAfhK,EAAMp1B,KAC3B2C,KAAKu8B,kBACLY,GAAehJ,EAAMn0B,KAAK6hB,oBAAqB7hB,KAAK08B,SACtD18B,KAAKm3B,YAAc1e,GACnBA,EAAMga,EAAO+K,GAEjBF,GAAgBA,EAAa7K,EAAO+K,EAAQ,GAG3ChL,GAAiBC,GAClB,OACJzyB,KAAKq8B,iBAAmBA,EACxBr8B,KAAKm8B,SAAWA,EAChBn8B,KAAK6hB,mBAAqBA,EAC1B7hB,KAAKo8B,cAAgBA,GAAiBnlB,OACtC,MACMwmB,EAAcN,GADPtK,GAAiBJ,GACWzyB,KAAK6hB,qBACxC,MAAEkR,GAAU0K,GACZ,UAAE/sB,GAAcK,GAAAA,GACtB/Q,KAAK08B,QAAU,CAAC,IAAK3J,EAAOriB,cAC5B,MAAM,eAAEgtB,GAAmBvB,EAC3BuB,GACIA,EAAejL,EAAOgK,GAAWgB,EAAaz9B,KAAK08B,UACvD18B,KAAK29B,iBAAkB9vB,EAAAA,GAAAA,GAAKolB,GAAgBjzB,KAAKo8B,cAAe,cAAep8B,KAAKk9B,mBAAoBjK,GAAgBjzB,KAAKo8B,cAAe,YAAap8B,KAAKo9B,iBAAkBnK,GAAgBjzB,KAAKo8B,cAAe,gBAAiBp8B,KAAKo9B,iBAC9O,CACAQ,cAAAA,CAAezB,GACXn8B,KAAKm8B,SAAWA,CACpB,CACAkB,GAAAA,GACIr9B,KAAK29B,iBAAmB39B,KAAK29B,mBAC7B7sB,EAAAA,GAAAA,IAAY9Q,KAAKw8B,YACrB,EAEJ,SAASW,GAAehJ,EAAMtS,GAC1B,OAAOA,EAAqB,CAAEkR,MAAOlR,EAAmBsS,EAAKpB,QAAWoB,CAC5E,CACA,SAAS0J,GAAcl6B,EAAGC,GACtB,MAAO,CAAE+E,EAAGhF,EAAEgF,EAAI/E,EAAE+E,EAAG+gB,EAAG/lB,EAAE+lB,EAAI9lB,EAAE8lB,EACtC,CACA,SAAS+S,GAAU3+B,EAAY4+B,GAAS,IAApB,MAAE3J,GAAOj1B,EACzB,MAAO,CACHi1B,QACArvB,MAAOm6B,GAAc9K,EAAO+K,GAAgBpB,IAC5CjtB,OAAQouB,GAAc9K,EAAOgL,GAAiBrB,IAC9C77B,SAAU+X,GAAY8jB,EAAS,IAEvC,CACA,SAASqB,GAAiBrB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASoB,GAAgBpB,GACrB,OAAOA,EAAQA,EAAQ1+B,OAAS,EACpC,CACA,SAAS4a,GAAY8jB,EAASsB,GAC1B,GAAItB,EAAQ1+B,OAAS,EACjB,MAAO,CAAE2K,EAAG,EAAG+gB,EAAG,GAEtB,IAAInoB,EAAIm7B,EAAQ1+B,OAAS,EACrBigC,EAAmB,KACvB,MAAMC,EAAYJ,GAAgBpB,GAClC,KAAOn7B,GAAK,IACR08B,EAAmBvB,EAAQn7B,KACvB28B,EAAUxtB,UAAYutB,EAAiBvtB,WACvCtN,EAAAA,GAAAA,GAAsB46B,MAG1Bz8B,IAEJ,IAAK08B,EACD,MAAO,CAAEt1B,EAAG,EAAG+gB,EAAG,GAEtB,MAAMtpB,GAAOmD,EAAAA,GAAAA,GAAsB26B,EAAUxtB,UAAYutB,EAAiBvtB,WAC1E,GAAa,IAATtQ,EACA,MAAO,CAAEuI,EAAG,EAAG+gB,EAAG,GAEtB,MAAMjjB,EAAkB,CACpBkC,GAAIu1B,EAAUv1B,EAAIs1B,EAAiBt1B,GAAKvI,EACxCspB,GAAIwU,EAAUxU,EAAIuU,EAAiBvU,GAAKtpB,GAQ5C,OANIqG,EAAgBkC,IAAMkK,MACtBpM,EAAgBkC,EAAI,GAEpBlC,EAAgBijB,IAAM7W,MACtBpM,EAAgBijB,EAAI,GAEjBjjB,CACX,C,0BCvJA,MACM03B,GAAY,MACZC,GAAY,OAEZC,IAAgB,IAChBC,GAAgB,IACtB,SAASC,GAAWC,GAChB,OAAOA,EAAKh8B,IAAMg8B,EAAKp4B,GAC3B,CAIA,SAASq4B,GAAc/6B,EAAOwnB,EAAQhmB,GAAsB,IAAdD,EAAMyJ,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,GACnDhL,EAAMuB,OAASA,EACfvB,EAAMg7B,aAAcpyB,EAAAA,GAAAA,GAAU4e,EAAO9kB,IAAK8kB,EAAO1oB,IAAKkB,EAAMuB,QAC5DvB,EAAMkqB,MAAQ2Q,GAAWr5B,GAAUq5B,GAAWrT,GAC9CxnB,EAAMi7B,WACFryB,EAAAA,GAAAA,GAAUpH,EAAOkB,IAAKlB,EAAO1C,IAAKkB,EAAMuB,QAAUvB,EAAMg7B,aACvDh7B,EAAMkqB,OAASuQ,IAAaz6B,EAAMkqB,OAASwQ,IAC5C55B,MAAMd,EAAMkqB,UACZlqB,EAAMkqB,MAAQ,IAEblqB,EAAMi7B,WAAaN,IACpB36B,EAAMi7B,WAAaL,IACnB95B,MAAMd,EAAMi7B,cACZj7B,EAAMi7B,UAAY,EAE1B,CACA,SAASC,GAAal7B,EAAOwnB,EAAQhmB,EAAQD,GACzCw5B,GAAc/6B,EAAMiF,EAAGuiB,EAAOviB,EAAGzD,EAAOyD,EAAG1D,EAASA,EAAO4lB,aAAU7rB,GACrEy/B,GAAc/6B,EAAMgmB,EAAGwB,EAAOxB,EAAGxkB,EAAOwkB,EAAGzkB,EAASA,EAAO6lB,aAAU9rB,EACzE,CACA,SAAS6/B,GAAiB35B,EAAQ45B,EAAU9b,GACxC9d,EAAOkB,IAAM4c,EAAO5c,IAAM04B,EAAS14B,IACnClB,EAAO1C,IAAM0C,EAAOkB,IAAMm4B,GAAWO,EACzC,CAKA,SAASC,GAAyB75B,EAAQ2e,EAAQb,GAC9C9d,EAAOkB,IAAMyd,EAAOzd,IAAM4c,EAAO5c,IACjClB,EAAO1C,IAAM0C,EAAOkB,IAAMm4B,GAAW1a,EACzC,CACA,SAASmb,GAAqB95B,EAAQ2e,EAAQb,GAC1C+b,GAAyB75B,EAAOyD,EAAGkb,EAAOlb,EAAGqa,EAAOra,GACpDo2B,GAAyB75B,EAAOwkB,EAAG7F,EAAO6F,EAAG1G,EAAO0G,EACxD,C,eCnBA,SAASuV,GAA4BT,EAAMp4B,EAAK5D,GAC5C,MAAO,CACH4D,SAAapH,IAARoH,EAAoBo4B,EAAKp4B,IAAMA,OAAMpH,EAC1CwD,SAAaxD,IAARwD,EACCg8B,EAAKh8B,IAAMA,GAAOg8B,EAAKh8B,IAAMg8B,EAAKp4B,UAClCpH,EAEd,CAcA,SAASkgC,GAA4BC,EAAYC,GAC7C,IAAIh5B,EAAMg5B,EAAgBh5B,IAAM+4B,EAAW/4B,IACvC5D,EAAM48B,EAAgB58B,IAAM28B,EAAW38B,IAO3C,OAJI48B,EAAgB58B,IAAM48B,EAAgBh5B,IACtC+4B,EAAW38B,IAAM28B,EAAW/4B,OAC3BA,EAAK5D,GAAO,CAACA,EAAK4D,IAEhB,CAAEA,MAAK5D,MAClB,CAuCA,MAAM68B,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACHr5B,IAAKs5B,GAAoBH,EAAaC,GACtCh9B,IAAKk9B,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,kBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC9HA,MAMMC,GAAcA,KAAA,CAChBj3B,EAPoB,CACpBg2B,UAAW,EACX/Q,MAAO,EACP3oB,OAAQ,EACRy5B,YAAa,GAIbhV,EARoB,CACpBiV,UAAW,EACX/Q,MAAO,EACP3oB,OAAQ,EACRy5B,YAAa,KAOXmB,GAAYA,KAAA,CACdl3B,EAFe,CAASvC,IAAK,EAAG5D,IAAK,GAGrCknB,EAHe,CAAStjB,IAAK,EAAG5D,IAAK,KCVzC,SAASs9B,GAAS5gC,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCGA,SAAS6gC,GAAuBjiC,GAAgC,IAA/B,IAAEkiC,EAAG,KAAEC,EAAI,MAAEC,EAAK,OAAEC,GAASriC,EAC1D,MAAO,CACH6K,EAAG,CAAEvC,IAAK65B,EAAMz9B,IAAK09B,GACrBxW,EAAG,CAAEtjB,IAAK45B,EAAKx9B,IAAK29B,GAE5B,CCVA,SAASC,GAAgBxS,GACrB,YAAiB5uB,IAAV4uB,GAAiC,IAAVA,CAClC,CACA,SAASyS,GAAQviC,GAA4B,IAA3B,MAAE8vB,EAAK,OAAE0S,EAAM,OAAEC,GAAQziC,EACvC,OAASsiC,GAAgBxS,KACpBwS,GAAgBE,KAChBF,GAAgBG,EACzB,CACA,SAASnW,GAAazc,GAClB,OAAQ0yB,GAAS1yB,IACb6yB,GAAe7yB,IACfA,EAAOgc,GACPhc,EAAO8yB,QACP9yB,EAAO+yB,SACP/yB,EAAOgzB,SACPhzB,EAAOizB,OACPjzB,EAAOkzB,KACf,CACA,SAASL,GAAe7yB,GACpB,OAAOmzB,GAAcnzB,EAAOhF,IAAMm4B,GAAcnzB,EAAO+b,EAC3D,CACA,SAASoX,GAActiC,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCjBA,SAASuiC,GAAWhO,EAAOnF,EAAO8Q,GAG9B,OAAOA,EADQ9Q,GADYmF,EAAQ2L,EAGvC,CAIA,SAASsC,GAAgBjO,EAAO4L,EAAW/Q,EAAO8Q,EAAauC,GAI3D,YAHiBjiC,IAAbiiC,IACAlO,EAAQgO,GAAWhO,EAAOkO,EAAUvC,IAEjCqC,GAAWhO,EAAOnF,EAAO8Q,GAAeC,CACnD,CAIA,SAASuC,GAAe1C,GAAuD,IAAjDG,EAASjwB,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,EAAGkf,EAAKlf,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,EAAGgwB,EAAWhwB,UAAA1Q,OAAA,EAAA0Q,UAAA,QAAA1P,EAAEiiC,EAAQvyB,UAAA1Q,OAAA,EAAA0Q,UAAA,QAAA1P,EACzEw/B,EAAKp4B,IAAM46B,GAAgBxC,EAAKp4B,IAAKu4B,EAAW/Q,EAAO8Q,EAAauC,GACpEzC,EAAKh8B,IAAMw+B,GAAgBxC,EAAKh8B,IAAKm8B,EAAW/Q,EAAO8Q,EAAauC,EACxE,CAIA,SAASE,GAAcC,EAAGtjC,GAAY,IAAV,EAAE6K,EAAC,EAAE+gB,GAAG5rB,EAChCojC,GAAeE,EAAIz4B,EAAGA,EAAEg2B,UAAWh2B,EAAEilB,MAAOjlB,EAAE+1B,aAC9CwC,GAAeE,EAAI1X,EAAGA,EAAEiV,UAAWjV,EAAEkE,MAAOlE,EAAEgV,YAClD,CACA,MAAM2C,GAAsB,cACtBC,GAAsB,gBA6D5B,SAASC,GAAc/C,EAAMvC,GACzBuC,EAAKp4B,IAAMo4B,EAAKp4B,IAAM61B,EACtBuC,EAAKh8B,IAAMg8B,EAAKh8B,IAAMy5B,CAC1B,CAMA,SAASuF,GAAchD,EAAMiD,EAAeC,EAAWT,GAA4B,IAAlBU,EAAUjzB,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,GAG1EwyB,GAAe1C,EAAMiD,EAAeC,GAFhBp1B,EAAAA,GAAAA,GAAUkyB,EAAKp4B,IAAKo4B,EAAKh8B,IAAKm/B,GAEUV,EAChE,CAIA,SAASW,GAAaR,EAAK70B,GACvBi1B,GAAcJ,EAAIz4B,EAAG4D,EAAU5D,EAAG4D,EAAU+zB,OAAQ/zB,EAAUqhB,MAAOrhB,EAAUse,SAC/E2W,GAAcJ,EAAI1X,EAAGnd,EAAUmd,EAAGnd,EAAUg0B,OAAQh0B,EAAUqhB,MAAOrhB,EAAUue,QACnF,CCjHA,SAAS3J,GAAmBkE,EAAU8X,GAClC,OAAO4C,GHeX,SAA4BhN,EAAOoK,GAC/B,IAAKA,EACD,OAAOpK,EACX,MAAM8O,EAAU1E,EAAe,CAAEx0B,EAAGoqB,EAAMkN,KAAMvW,EAAGqJ,EAAMiN,MACnD8B,EAAc3E,EAAe,CAAEx0B,EAAGoqB,EAAMmN,MAAOxW,EAAGqJ,EAAMoN,SAC9D,MAAO,CACHH,IAAK6B,EAAQnY,EACbuW,KAAM4B,EAAQl5B,EACdw3B,OAAQ2B,EAAYpY,EACpBwW,MAAO4B,EAAYn5B,EAE3B,CG1BmCo5B,CAAmB1c,EAAS0M,wBAAyBoL,GACxF,C,cCJA,MAAM6E,GAAmBlkC,IAAiB,IAAhB,QAAEwD,GAASxD,EACjC,OAAOwD,EAAUA,EAAQ2gC,cAAcC,YAAc,IAAI,E,eCkB7D,MAAMC,GAAsB,IAAIvN,QAKhC,MAAMwN,GACFziC,WAAAA,CAAY4Z,GAIRvZ,KAAKqiC,eAAiB,KACtBriC,KAAKsiC,YAAa,EAClBtiC,KAAKuiC,iBAAmB,KACxBviC,KAAK0+B,YAAc,CAAE/1B,EAAG,EAAG+gB,EAAG,GAI9B1pB,KAAKwiC,aAAc,EACnBxiC,KAAKyiC,uBAAwB,EAI7BziC,KAAK0iC,QAAU7C,KACf7/B,KAAKuZ,cAAgBA,CACzB,CACA5I,KAAAA,CAAMgyB,GAA4C,IAA/B,aAAEC,GAAe,GAAOl0B,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,CAAC,EAI3C,MAAM,gBAAEgM,GAAoB1a,KAAKuZ,cACjC,GAAImB,IAAiD,IAA9BA,EAAgBihB,UACnC,OACJ,MA+FM,iBAAEU,GAAqBr8B,KAAK+W,WAClC/W,KAAK6iC,WAAa,IAAI3G,GAAWyG,EAAa,CAC1CjF,eAjGoBjL,IACpB,MAAM,iBAAE4J,GAAqBr8B,KAAK+W,WAGlCslB,EAAmBr8B,KAAK8iC,iBAAmB9iC,KAAK+iC,gBAC5CH,GACA5iC,KAAK4iC,aAAa/P,GAAiBJ,EAAO,QAAQM,MACtD,EA2FAiK,QAzFYA,CAACvK,EAAO0B,KACpB,IAAIrmB,EAEJ,MAAM,KAAEgW,EAAI,gBAAEkf,EAAe,YAAEC,GAAgBjjC,KAAK+W,WACpD,GAAI+M,IAASkf,IACLhjC,KAAKqiC,gBACLriC,KAAKqiC,iBACTriC,KAAKqiC,eAAiB9O,GAAczP,IAE/B9jB,KAAKqiC,gBACN,OAERriC,KAAKsiC,YAAa,EAClBtiC,KAAKuiC,iBAAmB,KACxBviC,KAAKkjC,qBACDljC,KAAKuZ,cAAcmK,aACnB1jB,KAAKuZ,cAAcmK,WAAWyf,oBAAqB,EACnDnjC,KAAKuZ,cAAcmK,WAAWxe,YAASlG,GAK3C8gC,IAAUtB,IACN,IAAIl9B,EAAUtB,KAAKojC,mBAAmB5E,GAAMvlB,OAAS,EAIrD,GAAI5H,GAAAA,GAAQ5R,KAAK6B,GAAU,CACvB,MAAM,WAAEoiB,GAAe1jB,KAAKuZ,cAC5B,GAAImK,GAAcA,EAAWG,OAAQ,CACjC,MAAMwf,EAAe3f,EAAWG,OAAOyf,UAAU9E,GACjD,GAAI6E,EAAc,CAEd/hC,EADei9B,GAAW8E,IACNzjB,WAAWte,GAAW,IAC9C,CACJ,CACJ,CACAtB,KAAK0+B,YAAYF,GAAQl9B,CAAO,IAGhC2hC,GACAryB,GAAAA,GAAMwN,YAAW,IAAM6kB,EAAYxQ,EAAO0B,KAEb,QAAhCrmB,EAAK9N,KAAKujC,wBAAqC,IAAPz1B,GAAyBA,EAAGoH,KAAKlV,MAC1EA,KAAKujC,kBAAmBlpB,EAAAA,GAAAA,GAAqBra,KAAKuZ,cAAe,aACjE,MAAM,eAAEK,GAAmB5Z,KAAKuZ,cAChCK,GAAkBA,EAAeya,UAAU,aAAa,EAAK,EA4C7D4I,OA1CWA,CAACxK,EAAO0B,KAEnB,MAAM,gBAAE6O,EAAe,kBAAEQ,EAAiB,gBAAEC,EAAe,OAAEC,GAAY1jC,KAAK+W,WAE9E,IAAKisB,IAAoBhjC,KAAKqiC,eAC1B,OACJ,MAAM,OAAE5yB,GAAW0kB,EAEnB,GAAIqP,GAA+C,OAA1BxjC,KAAKuiC,iBAM1B,OALAviC,KAAKuiC,iBAwWrB,SAA6B9yB,GAA4B,IAApBk0B,EAAaj1B,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,GAC7CwH,EAAY,KACZ9X,KAAKyH,IAAI4J,EAAOia,GAAKia,EACrBztB,EAAY,IAEP9X,KAAKyH,IAAI4J,EAAO9G,GAAKg7B,IAC1BztB,EAAY,KAEhB,OAAOA,CACX,CAjXwC0tB,CAAoBn0B,QAEd,OAA1BzP,KAAKuiC,kBACLkB,GAAmBA,EAAgBzjC,KAAKuiC,mBAKhDviC,KAAK6jC,WAAW,IAAK1P,EAAKpB,MAAOtjB,GACjCzP,KAAK6jC,WAAW,IAAK1P,EAAKpB,MAAOtjB,GAOjCzP,KAAKuZ,cAAc4E,SAKnBulB,GAAUA,EAAOjR,EAAO0B,EAAK,EAa7BmJ,aAXiBA,CAAC7K,EAAO0B,IAASn0B,KAAK6Q,KAAK4hB,EAAO0B,GAYnDoJ,gBAXoBA,IAAMuC,IAAUtB,IACpC,IAAI1wB,EACJ,MAAwC,WAAjC9N,KAAK8jC,kBAAkBtF,KAC0B,QAAlD1wB,EAAK9N,KAAKojC,mBAAmB5E,GAAM5oB,iBAA8B,IAAP9H,OAAgB,EAASA,EAAGmF,OAAO,KASpG,CACC4O,mBAAoB7hB,KAAKuZ,cAAcwqB,wBACvC1H,mBACAD,cAAe4F,GAAiBhiC,KAAKuZ,gBAE7C,CACA1I,IAAAA,CAAK4hB,EAAO0B,GACR,IAAIrmB,EAC6B,QAAhCA,EAAK9N,KAAKujC,wBAAqC,IAAPz1B,GAAyBA,EAAGoH,KAAKlV,MAC1E,MAAMsiC,EAAatiC,KAAKsiC,WAExB,GADAtiC,KAAK+R,UACAuwB,EACD,OACJ,MAAM,SAAEzhC,GAAaszB,EACrBn0B,KAAKgkC,eAAenjC,GACpB,MAAM,UAAEojC,GAAcjkC,KAAK+W,WACvBktB,GACArzB,GAAAA,GAAMwN,YAAW,IAAM6lB,EAAUxR,EAAO0B,IAEhD,CACApiB,MAAAA,GACI/R,KAAKsiC,YAAa,EAClB,MAAM,WAAE5e,EAAU,eAAE9J,GAAmB5Z,KAAKuZ,cACxCmK,IACAA,EAAWyf,oBAAqB,GAEpCnjC,KAAK6iC,YAAc7iC,KAAK6iC,WAAWxF,MACnCr9B,KAAK6iC,gBAAa7jC,EAClB,MAAM,gBAAEgkC,GAAoBhjC,KAAK+W,YAC5BisB,GAAmBhjC,KAAKqiC,iBACzBriC,KAAKqiC,iBACLriC,KAAKqiC,eAAiB,MAE1BzoB,GAAkBA,EAAeya,UAAU,aAAa,EAC5D,CACAwP,UAAAA,CAAWrF,EAAM0F,EAAQz0B,GACrB,MAAM,KAAEqU,GAAS9jB,KAAK+W,WAEtB,IAAKtH,IAAW00B,GAAW3F,EAAM1a,EAAM9jB,KAAKuiC,kBACxC,OACJ,MAAM6B,EAAYpkC,KAAKojC,mBAAmB5E,GAC1C,IAAIh4B,EAAOxG,KAAK0+B,YAAYF,GAAQ/uB,EAAO+uB,GAEvCx+B,KAAKwiC,aAAexiC,KAAKwiC,YAAYhE,KACrCh4B,ER5LZ,SAA0BusB,EAAKj1B,EAAgB4kC,GAAS,IAAvB,IAAEt8B,EAAG,IAAE5D,GAAK1E,EAazC,YAZYkB,IAARoH,GAAqB2sB,EAAQ3sB,EAE7B2sB,EAAQ2P,GACFp2B,EAAAA,GAAAA,GAAUlG,EAAK2sB,EAAO2P,EAAQt8B,KAC9BhI,KAAKoE,IAAIuwB,EAAO3sB,QAETpH,IAARwD,GAAqBuwB,EAAQvwB,IAElCuwB,EAAQ2P,GACFp2B,EAAAA,GAAAA,GAAU9J,EAAKuwB,EAAO2P,EAAQlgC,KAC9BpE,KAAKgI,IAAI2sB,EAAOvwB,IAEnBuwB,CACX,CQ8KmBsR,CAAiB79B,EAAMxG,KAAKwiC,YAAYhE,GAAOx+B,KAAK0iC,QAAQlE,KAEvE4F,EAAU7tB,IAAI/P,EAClB,CACA08B,kBAAAA,GACI,IAAIp1B,EACJ,MAAM,gBAAEiW,EAAe,YAAEwb,GAAgBv/B,KAAK+W,WACxC8M,EAAS7jB,KAAKuZ,cAAcmK,aAC7B1jB,KAAKuZ,cAAcmK,WAAWG,OAC7B7jB,KAAKuZ,cAAcmK,WAAW4gB,SAAQ,GACG,QAAxCx2B,EAAK9N,KAAKuZ,cAAcmK,kBAA+B,IAAP5V,OAAgB,EAASA,EAAG+V,OAC7E0gB,EAAkBvkC,KAAKwiC,YACzBze,GAAmBzB,EAAYyB,GAC1B/jB,KAAKwiC,cACNxiC,KAAKwiC,YAAcxiC,KAAKwkC,yBAKxBxkC,KAAKwiC,eADLze,IAAmBF,IR9KnC,SAAiCyf,EAAS7a,GAAgC,IAA9B,IAAEuX,EAAG,KAAEC,EAAI,OAAEE,EAAM,MAAED,GAAOzX,EACpE,MAAO,CACH9f,EAAGs2B,GAA4BqE,EAAU36B,EAAGs3B,EAAMC,GAClDxW,EAAGuV,GAA4BqE,EAAU5Z,EAAGsW,EAAKG,GAEzD,CQ0KmCsE,CAAwB5gB,EAAOyf,UAAWvf,GAMrE/jB,KAAK0iC,QRvHb,WAA0D,IAA9BnD,EAAW7wB,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG2wB,GAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACH12B,EAAG22B,GAAmBC,EAAa,OAAQ,SAC3C7V,EAAG4V,GAAmBC,EAAa,MAAO,UAElD,CQ4GuBmF,CAAmBnF,GAK9BgF,IAAoBvkC,KAAKwiC,aACzB3e,GACA7jB,KAAKwiC,cACJxiC,KAAKyiC,uBACN3C,IAAUtB,KACmB,IAArBx+B,KAAKwiC,aACLxiC,KAAKojC,mBAAmB5E,KACxBx+B,KAAKwiC,YAAYhE,GRjJrC,SAA+B3a,EAAQ2e,GACnC,MAAMmC,EAAsB,CAAC,EAO7B,YANwB3lC,IAApBwjC,EAAYp8B,MACZu+B,EAAoBv+B,IAAMo8B,EAAYp8B,IAAMyd,EAAOzd,UAE/BpH,IAApBwjC,EAAYhgC,MACZmiC,EAAoBniC,IAAMggC,EAAYhgC,IAAMqhB,EAAOzd,KAEhDu+B,CACX,CQwI6CC,CAAsB/gB,EAAOyf,UAAU9E,GAAOx+B,KAAKwiC,YAAYhE,IAC5F,GAGZ,CACAgG,qBAAAA,GACI,MAAQzgB,gBAAiBye,EAAW,yBAAEqC,GAA6B7kC,KAAK+W,WACxE,IAAKyrB,IAAgBlgB,EAAYkgB,GAC7B,OAAO,EACX,MAAMsC,EAAqBtC,EAAYlhC,SACvC4I,EAAAA,GAAAA,GAAiC,OAAvB46B,EAA6B,0GACvC,MAAM,WAAEphB,GAAe1jB,KAAKuZ,cAE5B,IAAKmK,IAAeA,EAAWG,OAC3B,OAAO,EACX,MAAMkhB,EFpPd,SAAwB5yB,EAAS6yB,EAAoBnjB,GACjD,MAAMojB,EAAc9jB,GAAmBhP,EAAS0P,IAC1C,OAAEqjB,GAAWF,EAKnB,OAJIE,IACA3D,GAAc0D,EAAYt8B,EAAGu8B,EAAOz1B,OAAO9G,GAC3C44B,GAAc0D,EAAYvb,EAAGwb,EAAOz1B,OAAOia,IAExCub,CACX,CE4O+BE,CAAeL,EAAoBphB,EAAW0R,KAAMp1B,KAAKuZ,cAAcwqB,yBAC9F,IAAIqB,ER1LZ,SAAiC9B,EAAWyB,GACxC,MAAO,CACHp8B,EAAGu2B,GAA4BoE,EAAU36B,EAAGo8B,EAAep8B,GAC3D+gB,EAAGwV,GAA4BoE,EAAU5Z,EAAGqb,EAAerb,GAEnE,CQqLkC2b,CAAwB3hB,EAAWG,OAAOyf,UAAWyB,GAK/E,GAAIF,EAA0B,CAC1B,MAAMS,EAAkBT,ELtPpC,SAAgCpc,GAAW,IAAV,EAAE9f,EAAC,EAAE+gB,GAAGjB,EACrC,MAAO,CAAEuX,IAAKtW,EAAEtjB,IAAK85B,MAAOv3B,EAAEnG,IAAK29B,OAAQzW,EAAElnB,IAAKy9B,KAAMt3B,EAAEvC,IAC9D,CKoP6Dm/B,CAAwBH,IACzEplC,KAAKyiC,wBAA0B6C,EAC3BA,IACAF,EAAsBrF,GAAwBuF,GAEtD,CACA,OAAOF,CACX,CACApB,cAAAA,CAAenjC,GACX,MAAM,KAAEijB,EAAI,aAAE0hB,EAAY,YAAEjG,EAAW,eAAEkG,EAAc,iBAAEpJ,EAAgB,oBAAEqJ,GAAyB1lC,KAAK+W,WACnGyrB,EAAcxiC,KAAKwiC,aAAe,CAAC,EACnCmD,EAAqB7F,IAAUtB,IACjC,IAAK2F,GAAW3F,EAAM1a,EAAM9jB,KAAKuiC,kBAC7B,OAEJ,IAAIhqB,EAAciqB,GAAeA,EAAYhE,IAAU,CAAC,EACpDnC,IACA9jB,EAAa,CAAEnS,IAAK,EAAG5D,IAAK,IAOhC,MAAMwE,EAAkBu4B,EAAc,IAAM,IACtCx4B,EAAgBw4B,EAAc,GAAK,IACnC34B,EAAU,CACZvJ,KAAM,UACNwD,SAAU2kC,EAAe3kC,EAAS29B,GAAQ,EAC1Cx3B,kBACAD,gBACAD,aAAc,IACd9B,UAAW,EACXxH,UAAW,MACRioC,KACAltB,GAKP,OAAOvY,KAAK4lC,wBAAwBpH,EAAM53B,EAAQ,IAGtD,OAAO1E,QAAQsV,IAAImuB,GAAoB7jC,KAAK4jC,EAChD,CACAE,uBAAAA,CAAwBpH,EAAMjmB,GAC1B,MAAM6rB,EAAYpkC,KAAKojC,mBAAmB5E,GAC1C,OAAO4F,EAAUzzB,OAAM2H,EAAAA,GAAAA,GAAmBkmB,EAAM4F,EAAW,EAAG7rB,EAAYvY,KAAKuZ,eAAe,GAAOc,EAAAA,GAAAA,GAAqBra,KAAKuZ,cAAeilB,IAClJ,CACAuE,aAAAA,GACIjD,IAAUtB,GAASx+B,KAAKojC,mBAAmB5E,GAAM3tB,QACrD,CACAiyB,cAAAA,GACIhD,IAAUtB,IAAW,IAAI1wB,EAAI,OAA0D,QAAlDA,EAAK9N,KAAKojC,mBAAmB5E,GAAM5oB,iBAA8B,IAAP9H,OAAgB,EAASA,EAAGoF,OAAO,GACtI,CACA4wB,iBAAAA,CAAkBtF,GACd,IAAI1wB,EACJ,OAA0D,QAAlDA,EAAK9N,KAAKojC,mBAAmB5E,GAAM5oB,iBAA8B,IAAP9H,OAAgB,EAASA,EAAG3I,KAClG,CAOAi+B,kBAAAA,CAAmB5E,GACf,MAAMqH,EAAU,QAAQrH,EAAKvO,gBACvBpN,EAAQ7iB,KAAKuZ,cAAcxC,WAC3B+uB,EAAsBjjB,EAAMgjB,GAClC,OAAOC,GAED9lC,KAAKuZ,cAAcO,SAAS0kB,GAAO3b,EAAMW,QACrCX,EAAMW,QAAQgb,QACdx/B,IAAc,EAC5B,CACA4jC,YAAAA,CAAa7P,GACT+M,IAAUtB,IACN,MAAM,KAAE1a,GAAS9jB,KAAK+W,WAEtB,IAAKotB,GAAW3F,EAAM1a,EAAM9jB,KAAKuiC,kBAC7B,OACJ,MAAM,WAAE7e,GAAe1jB,KAAKuZ,cACtB6qB,EAAYpkC,KAAKojC,mBAAmB5E,GAC1C,GAAI9a,GAAcA,EAAWG,OAAQ,CACjC,MAAM,IAAEzd,EAAG,IAAE5D,GAAQkhB,EAAWG,OAAOyf,UAAU9E,GACjD4F,EAAU7tB,IAAIwc,EAAMyL,IAAQlyB,EAAAA,GAAAA,GAAUlG,EAAK5D,EAAK,IACpD,IAER,CAMAujC,8BAAAA,GACI,IAAK/lC,KAAKuZ,cAAcjY,QACpB,OACJ,MAAM,KAAEwiB,EAAI,gBAAEC,GAAoB/jB,KAAK+W,YACjC,WAAE2M,GAAe1jB,KAAKuZ,cAC5B,IAAK+I,EAAYyB,KAAqBL,IAAe1jB,KAAKwiC,YACtD,OAKJxiC,KAAK+iC,gBAKL,MAAMiD,EAAc,CAAEr9B,EAAG,EAAG+gB,EAAG,GAC/BoW,IAAUtB,IACN,MAAM4F,EAAYpkC,KAAKojC,mBAAmB5E,GAC1C,GAAI4F,IAAkC,IAArBpkC,KAAKwiC,YAAuB,CACzC,MAAM/6B,EAAS28B,EAAUnrB,MACzB+sB,EAAYxH,GRzS5B,SAAoBtT,EAAQhmB,GACxB,IAAID,EAAS,GACb,MAAMghC,EAAe1H,GAAWrT,GAC1Bgb,EAAe3H,GAAWr5B,GAOhC,OANIghC,EAAeD,EACfhhC,GAASqK,EAAAA,GAAAA,GAASpK,EAAOkB,IAAKlB,EAAO1C,IAAMyjC,EAAc/a,EAAO9kB,KAE3D6/B,EAAeC,IACpBjhC,GAASqK,EAAAA,GAAAA,GAAS4b,EAAO9kB,IAAK8kB,EAAO1oB,IAAM0jC,EAAchhC,EAAOkB,OAE7D9C,EAAAA,GAAAA,GAAM,EAAG,EAAG2B,EACvB,CQ8RoCwnB,CAAW,CAAErmB,IAAKqB,EAAQjF,IAAKiF,GAAUzH,KAAKwiC,YAAYhE,GAClF,KAKJ,MAAM,kBAAExU,GAAsBhqB,KAAKuZ,cAAcxC,WACjD/W,KAAKuZ,cAAcjY,QAAQ2oB,MAAM1d,UAAYyd,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACNtG,EAAW0R,MAAQ1R,EAAW0R,KAAK+Q,eACnCziB,EAAW0iB,eACXpmC,KAAKkjC,qBAKLpD,IAAUtB,IACN,IAAK2F,GAAW3F,EAAM1a,EAAM,MACxB,OAIJ,MAAMsgB,EAAYpkC,KAAKojC,mBAAmB5E,IACpC,IAAEp4B,EAAG,IAAE5D,GAAQxC,KAAKwiC,YAAYhE,GACtC4F,EAAU7tB,KAAIjK,EAAAA,GAAAA,GAAUlG,EAAK5D,EAAKwjC,EAAYxH,IAAO,GAE7D,CACA6H,YAAAA,GACI,IAAKrmC,KAAKuZ,cAAcjY,QACpB,OACJ6gC,GAAoB5rB,IAAIvW,KAAKuZ,cAAevZ,MAC5C,MAIMsmC,EAAsBrT,GAJZjzB,KAAKuZ,cAAcjY,QAIkB,eAAgBmxB,IACjE,MAAM,KAAE3O,EAAI,aAAE2H,GAAe,GAASzrB,KAAK+W,WAC3C+M,GAAQ2H,GAAgBzrB,KAAK2Q,MAAM8hB,EAAM,IAEvC8T,EAAyBA,KAC3B,MAAM,gBAAExiB,GAAoB/jB,KAAK+W,WAC7BuL,EAAYyB,IAAoBA,EAAgBziB,UAChDtB,KAAKwiC,YAAcxiC,KAAKwkC,wBAC5B,GAEE,WAAE9gB,GAAe1jB,KAAKuZ,cACtBitB,EAA4B9iB,EAAW4O,iBAAiB,UAAWiU,GACrE7iB,IAAeA,EAAWG,SAC1BH,EAAW0R,MAAQ1R,EAAW0R,KAAK+Q,eACnCziB,EAAW0iB,gBAEfx1B,GAAAA,GAAMoN,KAAKuoB,GAKX,MAAME,EAAqBvU,GAAYjb,OAAQ,UAAU,IAAMjX,KAAK+lC,mCAK9DW,EAA2BhjB,EAAW4O,iBAAiB,aAAcx0B,IAAiC,IAAhC,MAAE4F,EAAK,iBAAEijC,GAAkB7oC,EAC/FkC,KAAKsiC,YAAcqE,IACnB7G,IAAUtB,IACN,MAAMtsB,EAAclS,KAAKojC,mBAAmB5E,GACvCtsB,IAELlS,KAAK0+B,YAAYF,IAAS96B,EAAM86B,GAAMG,UACtCzsB,EAAYqE,IAAIrE,EAAY+G,MAAQvV,EAAM86B,GAAMG,WAAU,IAE9D3+B,KAAKuZ,cAAc4E,SACvB,IAEJ,MAAO,KACHsoB,IACAH,IACAE,IACAE,GAA4BA,GAA0B,CAE9D,CACA3vB,QAAAA,GACI,MAAM8L,EAAQ7iB,KAAKuZ,cAAcxC,YAC3B,KAAE+M,GAAO,EAAK,kBAAE0f,GAAoB,EAAK,gBAAER,GAAkB,EAAK,gBAAEjf,GAAkB,EAAK,YAAEwb,EAAcF,GAAc,aAAEmG,GAAe,GAAU3iB,EAC1J,MAAO,IACAA,EACHiB,OACA0f,oBACAR,kBACAjf,kBACAwb,cACAiG,eAER,EAEJ,SAASrB,GAAWjuB,EAAW4N,EAAMye,GACjC,QAAkB,IAATze,GAAiBA,IAAS5N,KACT,OAArBqsB,GAA6BA,IAAqBrsB,EAC3D,CC/cA,MAAM0wB,GAAgBxU,GAAY,CAACK,EAAO0B,KAClC/B,GACAxhB,GAAAA,GAAMwN,YAAW,IAAMgU,EAAQK,EAAO0B,IAC1C,ECLJ,MAAM0S,GAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCbpB,SAASC,GAAgBC,EAAQzI,GAC7B,OAAIA,EAAKh8B,MAAQg8B,EAAKp4B,IACX,EACH6gC,GAAUzI,EAAKh8B,IAAMg8B,EAAKp4B,KAAQ,GAC9C,CAQA,MAAM8gC,GAAsB,CACxBC,QAASA,CAAC1/B,EAAQosB,KACd,IAAKA,EAAK3uB,OACN,OAAOuC,EAKX,GAAsB,kBAAXA,EAAqB,CAC5B,IAAIilB,GAAAA,GAAGjtB,KAAKgI,GAIR,OAAOA,EAHPA,EAASmY,WAAWnY,EAK5B,CAOA,MAAO,GAFGu/B,GAAgBv/B,EAAQosB,EAAK3uB,OAAOyD,OACpCq+B,GAAgBv/B,EAAQosB,EAAK3uB,OAAOwkB,KAC1B,G,eCjC5B,MAAM0d,GAAmB,CACrBD,QAASA,CAAC1/B,EAAM3J,KAAqC,IAAnC,UAAEupC,EAAS,gBAAEC,GAAiBxpC,EAC5C,MAAMypC,EAAW9/B,EACX+/B,EAAShoC,GAAAA,EAAQgM,MAAM/D,GAE7B,GAAI+/B,EAAOxpC,OAAS,EAChB,OAAOupC,EACX,MAAMp6B,EAAW3N,GAAAA,EAAQ4N,kBAAkB3F,GACrCgI,EAA8B,kBAAd+3B,EAAO,GAAkB,EAAI,EAE7CC,EAASH,EAAgB3+B,EAAEilB,MAAQyZ,EAAU1+B,EAC7C++B,EAASJ,EAAgB5d,EAAEkE,MAAQyZ,EAAU3d,EACnD8d,EAAO,EAAI/3B,IAAWg4B,EACtBD,EAAO,EAAI/3B,IAAWi4B,EAOtB,MAAMC,GAAer7B,EAAAA,GAAAA,GAAUm7B,EAAQC,EAAQ,IAO/C,MALkC,kBAAvBF,EAAO,EAAI/3B,KAClB+3B,EAAO,EAAI/3B,IAAWk4B,GAEQ,kBAAvBH,EAAO,EAAI/3B,KAClB+3B,EAAO,EAAI/3B,IAAWk4B,GACnBx6B,EAASq6B,EAAO,GClB/B,MAAMI,WAAiCjlB,EAAAA,UAMnCklB,iBAAAA,GACI,MAAM,cAAEtuB,EAAa,YAAEuuB,EAAW,kBAAEC,EAAiB,SAAEnkB,GAAa5jB,KAAK6iB,OACnE,WAAEa,GAAenK,E3DnB/B,IAA2ByuB,I2DoBDC,G3DnBtBjzB,OAAOqW,OAAO/B,EAAiB0e,G2DoBvBtkB,IACIokB,EAAYI,OACZJ,EAAYI,MAAMvqB,IAAI+F,GACtBqkB,GAAqBA,EAAkB/L,UAAYpY,GACnDmkB,EAAkB/L,SAAStY,GAE/BA,EAAW0R,KAAK+S,YAChBzkB,EAAW4O,iBAAiB,qBAAqB,KAC7CtyB,KAAKooC,cAAc,IAEvB1kB,EAAWS,WAAW,IACfT,EAAW3jB,QACd67B,eAAgBA,IAAM57B,KAAKooC,kBAGnCvB,GAAsBE,gBAAiB,CAC3C,CACAsB,uBAAAA,CAAwB3Y,GACpB,MAAM,iBAAE4Y,EAAgB,cAAE/uB,EAAa,KAAEuK,EAAI,UAAE6X,GAAc37B,KAAK6iB,MAC5Da,EAAanK,EAAcmK,WACjC,OAAKA,GASLA,EAAWiY,UAAYA,EACnB7X,GACA4L,EAAU4Y,mBAAqBA,QACVtpC,IAArBspC,EACA5kB,EAAW6kB,aAGXvoC,KAAKooC,eAEL1Y,EAAUiM,YAAcA,IACpBA,EACAjY,EAAW8kB,UAEL9kB,EAAW+kB,YAMjB73B,GAAAA,GAAMwN,YAAW,KACb,MAAMsqB,EAAQhlB,EAAWilB,WACpBD,GAAUA,EAAME,QAAQ5qC,QACzBgC,KAAKooC,cACT,KAIL,MAnCI,IAoCf,CACAS,kBAAAA,GACI,MAAM,WAAEnlB,GAAe1jB,KAAK6iB,MAAMtJ,cAC9BmK,IACAA,EAAW0R,KAAK+S,YAChB/lB,EAAUhE,YAAW,MACZsF,EAAWolB,kBAAoBplB,EAAWqlB,UAC3C/oC,KAAKooC,cACT,IAGZ,CACAY,oBAAAA,GACI,MAAM,cAAEzvB,EAAa,YAAEuuB,EAAaC,kBAAmBkB,GAAoBjpC,KAAK6iB,OAC1E,WAAEa,GAAenK,EACnBmK,IACAA,EAAWwlB,4BACPpB,GAAeA,EAAYI,OAC3BJ,EAAYI,MAAMiB,OAAOzlB,GACzBulB,GAAkBA,EAAeG,YACjCH,EAAeG,WAAW1lB,GAEtC,CACA0kB,YAAAA,GACI,MAAM,aAAEA,GAAiBpoC,KAAK6iB,MAC9BulB,GAAgBA,GACpB,CACAjqB,MAAAA,GACI,OAAO,IACX,EAEJ,SAASyJ,GAAc/E,GACnB,MAAO8Y,EAAWyM,GCrFtB,WACI,MAAMpiB,GAAU/C,EAAAA,EAAAA,YAAWhB,GAC3B,GAAgB,OAAZ+D,EACA,MAAO,EAAC,EAAM,MAClB,MAAM,UAAE2V,EAAS,eAAEC,EAAc,SAAEI,GAAahW,EAG1C2C,GAAK0gB,EAAAA,EAAAA,UACXtkB,EAAAA,EAAAA,YAAU,IAAMiX,EAASrT,IAAK,IAC9B,MAAMyf,GAAehjB,EAAAA,EAAAA,cAAY,IAAMwW,GAAkBA,EAAejT,IAAK,CAACA,EAAIiT,IAClF,OAAQD,GAAaC,EAAiB,EAAC,EAAOwM,GAAgB,EAAC,EACnE,CD0EsCkB,GAC5BxB,GAAc7kB,EAAAA,EAAAA,YAAW+D,GAC/B,OAAQwB,EAAAA,EAAAA,KAAIof,GAA0B,IAAK/kB,EAAOilB,YAAaA,EAAaC,mBAAmB9kB,EAAAA,EAAAA,YAAWT,GAA2BmZ,UAAWA,EAAWyM,aAAcA,GAC7K,CACA,MAAMH,GAAyB,CAC3BsB,aAAc,IACPrC,GACHsC,QAAS,CACL,sBACA,uBACA,yBACA,4BAGRC,oBAAqBvC,GACrBwC,qBAAsBxC,GACtByC,uBAAwBzC,GACxB0C,wBAAyB1C,GACzB2C,UAAWzC,I,yBE3Hf,MAAM0C,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQ9rC,OACrBgsC,GAAYxrC,GAA2B,kBAAVA,EAAqBohB,WAAWphB,GAASA,EACtEyrC,GAAQzrC,GAA2B,kBAAVA,GAAsBkuB,GAAAA,GAAGjtB,KAAKjB,GA0C7D,SAAS0rC,GAAUv8B,EAAQw8B,GACvB,YAA8BnrC,IAAvB2O,EAAOw8B,GACRx8B,EAAOw8B,GACPx8B,EAAO47B,YACjB,CAwBA,MAAMa,GAAkBC,GAAS,EAAG,GAAKxgC,GAAAA,IACnCygC,GAAmBD,GAAS,GAAK,IAAM7hC,GAAAA,GAC7C,SAAS6hC,GAASjkC,EAAK5D,EAAK6N,GACxB,OAAQtG,GAEAA,EAAI3D,EACG,EACP2D,EAAIvH,EACG,EACJ6N,GAAOf,EAAAA,GAAAA,GAASlJ,EAAK5D,EAAKuH,GAEzC,CCrFA,SAASwgC,GAAa/L,EAAMgM,GACxBhM,EAAKp4B,IAAMokC,EAAWpkC,IACtBo4B,EAAKh8B,IAAMgoC,EAAWhoC,GAC1B,CAMA,SAASioC,GAAYrJ,EAAKsJ,GACtBH,GAAanJ,EAAIz4B,EAAG+hC,EAAU/hC,GAC9B4hC,GAAanJ,EAAI1X,EAAGghB,EAAUhhB,EAClC,CAMA,SAASihB,GAAkBjnC,EAAOknC,GAC9BlnC,EAAMi7B,UAAYiM,EAAYjM,UAC9Bj7B,EAAMkqB,MAAQgd,EAAYhd,MAC1BlqB,EAAMg7B,YAAckM,EAAYlM,YAChCh7B,EAAMuB,OAAS2lC,EAAY3lC,MAC/B,CCrBA,SAAS4lC,GAAiB9X,EAAO4L,EAAW/Q,EAAO8Q,EAAauC,GAM5D,OAJAlO,EAAQgO,GADRhO,GAAS4L,EACiB,EAAI/Q,EAAO8Q,QACpB1/B,IAAbiiC,IACAlO,EAAQgO,GAAWhO,EAAO,EAAIkO,EAAUvC,IAErC3L,CACX,CAsBA,SAAS+X,GAAqBtM,EAAMuM,EAAUjtC,EAA8BmH,EAAQ+lC,GAAY,IAA/ClmC,EAAKmmC,EAAUC,GAAUptC,GAlB1E,SAAyB0gC,GAA8F,IAAxFG,EAASjwB,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,EAAGkf,EAAKlf,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,EAAGzJ,EAAMyJ,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,GAAKuyB,EAAQvyB,UAAA1Q,OAAA,EAAA0Q,UAAA,QAAA1P,EAAEwrC,EAAU97B,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG8vB,EAAMwM,EAAUt8B,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG8vB,EACzGntB,GAAAA,GAAQ5R,KAAKk/B,KACbA,EAAY/e,WAAW+e,GAEvBA,GADyBryB,EAAAA,GAAAA,GAAU0+B,EAAW5kC,IAAK4kC,EAAWxoC,IAAKm8B,EAAY,KAChDqM,EAAW5kC,KAE9C,GAAyB,kBAAdu4B,EACP,OACJ,IAAID,GAAcpyB,EAAAA,GAAAA,GAAUk+B,EAAWpkC,IAAKokC,EAAWhoC,IAAKyC,GACxDu5B,IAASgM,IACT9L,GAAeC,GACnBH,EAAKp4B,IAAMykC,GAAiBrM,EAAKp4B,IAAKu4B,EAAW/Q,EAAO8Q,EAAauC,GACrEzC,EAAKh8B,IAAMqoC,GAAiBrM,EAAKh8B,IAAKm8B,EAAW/Q,EAAO8Q,EAAauC,EACzE,CAMIkK,CAAgB3M,EAAMuM,EAAWjmC,GAAMimC,EAAWE,GAAWF,EAAWG,GAAYH,EAAWnd,MAAO3oB,EAAQ+lC,EAClH,CAIA,MAAMI,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASC,GAAoBlK,EAAK2J,EAAYL,EAAWa,GACrDT,GAAqB1J,EAAIz4B,EAAGoiC,EAAYK,GAAOV,EAAYA,EAAU/hC,OAAI3J,EAAWusC,EAAYA,EAAU5iC,OAAI3J,GAC9G8rC,GAAqB1J,EAAI1X,EAAGqhB,EAAYM,GAAOX,EAAYA,EAAUhhB,OAAI1qB,EAAWusC,EAAYA,EAAU7hB,OAAI1qB,EAClH,C,eCjDA,SAASwsC,GAAgB9nC,GACrB,OAA2B,IAApBA,EAAMi7B,WAAmC,IAAhBj7B,EAAMkqB,KAC1C,CACA,SAAS6d,GAAY/nC,GACjB,OAAO8nC,GAAgB9nC,EAAMiF,IAAM6iC,GAAgB9nC,EAAMgmB,EAC7D,CACA,SAASgiB,GAAW/nC,EAAGC,GACnB,OAAOD,EAAEyC,MAAQxC,EAAEwC,KAAOzC,EAAEnB,MAAQoB,EAAEpB,GAC1C,CAIA,SAASmpC,GAAkBhoC,EAAGC,GAC1B,OAAQxF,KAAK4N,MAAMrI,EAAEyC,OAAShI,KAAK4N,MAAMpI,EAAEwC,MACvChI,KAAK4N,MAAMrI,EAAEnB,OAASpE,KAAK4N,MAAMpI,EAAEpB,IAC3C,CACA,SAASopC,GAAiBjoC,EAAGC,GACzB,OAAO+nC,GAAkBhoC,EAAEgF,EAAG/E,EAAE+E,IAAMgjC,GAAkBhoC,EAAE+lB,EAAG9lB,EAAE8lB,EACnE,CACA,SAASmiB,GAAYzK,GACjB,OAAO7C,GAAW6C,EAAIz4B,GAAK41B,GAAW6C,EAAI1X,EAC9C,CACA,SAASoiB,GAAgBnoC,EAAGC,GACxB,OAAQD,EAAEg7B,YAAc/6B,EAAE+6B,WACtBh7B,EAAEiqB,QAAUhqB,EAAEgqB,OACdjqB,EAAE+6B,cAAgB96B,EAAE86B,WAC5B,CC1BA,MAAMqN,GACFpsC,WAAAA,GACIK,KAAK4oC,QAAU,EACnB,CACAjrB,GAAAA,CAAIkW,IACA3C,EAAAA,GAAAA,IAAclxB,KAAK4oC,QAAS/U,GAC5BA,EAAKmY,gBACT,CACA7C,MAAAA,CAAOtV,GAKH,IAJAoY,EAAAA,GAAAA,IAAWjsC,KAAK4oC,QAAS/U,GACrBA,IAAS7zB,KAAKksC,WACdlsC,KAAKksC,cAAWltC,GAEhB60B,IAAS7zB,KAAKmsC,KAAM,CACpB,MAAMD,EAAWlsC,KAAK4oC,QAAQ5oC,KAAK4oC,QAAQ5qC,OAAS,GAChDkuC,GACAlsC,KAAKwoC,QAAQ0D,EAErB,CACJ,CACAzD,QAAAA,CAAS5U,GACL,MAAMuY,EAAcpsC,KAAK4oC,QAAQyD,WAAWC,GAAWzY,IAASyY,IAChE,GAAoB,IAAhBF,EACA,OAAO,EAIX,IAAIF,EACJ,IAAK,IAAI3qC,EAAI6qC,EAAa7qC,GAAK,EAAGA,IAAK,CACnC,MAAM+qC,EAAStsC,KAAK4oC,QAAQrnC,GAC5B,IAAyB,IAArB+qC,EAAO3Q,UAAqB,CAC5BuQ,EAAWI,EACX,KACJ,CACJ,CACA,QAAIJ,IACAlsC,KAAKwoC,QAAQ0D,IACN,EAKf,CACA1D,OAAAA,CAAQ3U,EAAM0Y,GACV,MAAML,EAAWlsC,KAAKmsC,KACtB,GAAItY,IAASqY,IAEblsC,KAAKksC,SAAWA,EAChBlsC,KAAKmsC,KAAOtY,EACZA,EAAK2Y,OACDN,GAAU,CACVA,EAAS7mB,UAAY6mB,EAASF,iBAC9BnY,EAAKmY,iBACLnY,EAAK4Y,WAAaP,EACdK,IACA1Y,EAAK4Y,WAAWC,iBAAkB,GAElCR,EAASS,WACT9Y,EAAK8Y,SAAWT,EAASS,SACzB9Y,EAAK8Y,SAAS5yB,aACVmyB,EAASU,iBAAmBV,EAASnyB,cAEzC8Z,EAAKuB,MAAQvB,EAAKuB,KAAKyX,aACvBhZ,EAAKiZ,eAAgB,GAEzB,MAAM,UAAEC,GAAclZ,EAAK9zB,SACT,IAAdgtC,GACAb,EAASc,MAcjB,CACJ,CACAC,qBAAAA,GACIjtC,KAAK4oC,QAAQ1wB,SAAS2b,IAClB,MAAM,QAAE9zB,EAAO,aAAEmtC,GAAiBrZ,EAClC9zB,EAAQ67B,gBAAkB77B,EAAQ67B,iBAC9BsR,GACAA,EAAantC,QAAQ67B,gBACjBsR,EAAantC,QAAQ67B,gBAC7B,GAER,CACAoQ,cAAAA,GACIhsC,KAAK4oC,QAAQ1wB,SAAS2b,IAClBA,EAAKxO,UAAYwO,EAAKmY,gBAAe,EAAM,GAEnD,CAKAmB,kBAAAA,GACQntC,KAAKmsC,MAAQnsC,KAAKmsC,KAAKQ,WACvB3sC,KAAKmsC,KAAKQ,cAAW3tC,EAE7B,EC5GJ,MAAMouC,GAAiBA,CAACzpC,EAAGC,IAAMD,EAAEob,MAAQnb,EAAEmb,MCG7C,MAAMsuB,GACF1tC,WAAAA,GACIK,KAAKuoB,SAAW,GAChBvoB,KAAKstC,SAAU,CACnB,CACA3vB,GAAAA,CAAInC,IACA0V,EAAAA,GAAAA,IAAclxB,KAAKuoB,SAAU/M,GAC7Bxb,KAAKstC,SAAU,CACnB,CACAnE,MAAAA,CAAO3tB,IACHywB,EAAAA,GAAAA,IAAWjsC,KAAKuoB,SAAU/M,GAC1Bxb,KAAKstC,SAAU,CACnB,CACAp1B,OAAAA,CAAQhZ,GACJc,KAAKstC,SAAWttC,KAAKuoB,SAASjN,KAAK8xB,IACnCptC,KAAKstC,SAAU,EACfttC,KAAKuoB,SAASrQ,QAAQhZ,EAC1B,E,6CCQJ,MAAMquC,GAAU,CACZlwC,KAAM,kBACNmwC,WAAY,EACZC,qBAAsB,EACtBC,uBAAwB,GAEtBC,GAA4B,qBAAX12B,aAAiDjY,IAAvBiY,OAAO22B,YAClDC,GAAgB,CAAC,GAAI,IAAK,IAAK,KAC/BC,GAAmB,CAAEC,WAAY,UAMvC,IAAIplB,GAAK,EACT,SAASqlB,GAAyBlpC,EAAKyU,EAAe5L,EAAQsgC,GAC1D,MAAM,aAAEl0B,GAAiBR,EAErBQ,EAAajV,KACb6I,EAAO7I,GAAOiV,EAAajV,GAC3ByU,EAAc20B,eAAeppC,EAAK,GAC9BmpC,IACAA,EAAsBnpC,GAAO,GAGzC,CACA,SAASqpC,GAAuCC,GAE5C,GADAA,EAAeC,2BAA4B,EACvCD,EAAehZ,OAASgZ,EACxB,OACJ,MAAM,cAAE70B,GAAkB60B,EAAeruC,QACzC,IAAKwZ,EACD,OACJ,MAAMW,GAAWC,EAAAA,GAAAA,GAAqBZ,GAClCtC,OAAOq3B,qCAAqCp0B,IAC5CjD,OAAOs3B,+BAA+Br0B,GAE1C,MAAM,OAAE8I,GAAWorB,EACfprB,IAAWA,EAAOqrB,2BAClBF,GAAuCnrB,EAE/C,CACA,SAASsB,GAAoBxmB,GAA6F,IAA5F,qBAAE0wC,EAAoB,cAAEC,EAAa,cAAEC,EAAa,kBAAEC,EAAiB,eAAEC,GAAiB9wC,EACpH,OAAO,MACH6B,WAAAA,GAAuH,IAA3Goa,EAAYrL,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGsU,EAAMtU,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAqB,OAAlB+/B,QAA4C,IAAlBA,OAA2B,EAASA,IAIlGzuC,KAAK2oB,GAAKA,KAIV3oB,KAAK6uC,YAAc,EAOnB7uC,KAAKuoB,SAAW,IAAIprB,IAKpB6C,KAAKD,QAAU,CAAC,EAMhBC,KAAK8uC,iBAAkB,EACvB9uC,KAAKmjC,oBAAqB,EAO1BnjC,KAAK8sC,eAAgB,EAKrB9sC,KAAK+uC,mBAAoB,EAKzB/uC,KAAKgvC,yBAA0B,EAK/BhvC,KAAKivC,kBAAmB,EAIxBjvC,KAAKkvC,uBAAwB,EAC7BlvC,KAAKmvC,uBAAwB,EAK7BnvC,KAAK6sC,YAAa,EAIlB7sC,KAAKovC,OAAQ,EAKbpvC,KAAKqvC,YAAa,EAIlBrvC,KAAKsvC,sBAAuB,EAO5BtvC,KAAKquC,2BAA4B,EASjCruC,KAAKqnC,UAAY,CAAE1+B,EAAG,EAAG+gB,EAAG,GAI5B1pB,KAAKuvC,cAAgB,IAAIvmB,IACzBhpB,KAAKwvC,iBAAkB,EAEvBxvC,KAAKyvC,iBAAkB,EACvBzvC,KAAK0vC,eAAiB,IAAM1vC,KAAKwQ,SACjCxQ,KAAK2vC,2BAA4B,EACjC3vC,KAAK4vC,kBAAoB,KACjB5vC,KAAK6sC,aACL7sC,KAAK6sC,YAAa,EAClB7sC,KAAK6vC,oBACT,EAOJ7vC,KAAK8vC,iBAAmB,KACpB9vC,KAAK2vC,2BAA4B,EAK7BhC,KACAJ,GAAQC,WACJD,GAAQE,qBACJF,GAAQG,uBACJ,GAEhB1tC,KAAK+vC,MAAM73B,QAAQ83B,IACnBhwC,KAAK+vC,MAAM73B,QAAQ+3B,IACnBjwC,KAAK+vC,MAAM73B,QAAQg4B,IACnBlwC,KAAK+vC,MAAM73B,QAAQi4B,IACfxC,IACA12B,OAAO22B,YAAYwC,OAAO7C,GAC9B,EAKJvtC,KAAKqwC,yBAA2B,EAChCrwC,KAAKswC,cAAe,EACpBtwC,KAAKuwC,WAAY,EACjBvwC,KAAKwwC,kBAAoB,EAKzBxwC,KAAKywC,YAAc,IAAIznB,IACvBhpB,KAAK+Z,aAAeA,EACpB/Z,KAAKo1B,KAAOpS,EAASA,EAAOoS,MAAQpS,EAAShjB,KAC7CA,KAAK0wC,KAAO1tB,EAAS,IAAIA,EAAO0tB,KAAM1tB,GAAU,GAChDhjB,KAAKgjB,OAASA,EACdhjB,KAAK+e,MAAQiE,EAASA,EAAOjE,MAAQ,EAAI,EACzC,IAAK,IAAIxd,EAAI,EAAGA,EAAIvB,KAAK0wC,KAAK1yC,OAAQuD,IAClCvB,KAAK0wC,KAAKnvC,GAAG+tC,sBAAuB,EAEpCtvC,KAAKo1B,OAASp1B,OACdA,KAAK+vC,MAAQ,IAAI1C,GACzB,CACA/a,gBAAAA,CAAiBjzB,EAAM+yB,GAInB,OAHKpyB,KAAKuvC,cAAcrxC,IAAImB,IACxBW,KAAKuvC,cAAch5B,IAAIlX,EAAM,IAAIsxC,GAAAA,GAE9B3wC,KAAKuvC,cAAct2B,IAAI5Z,GAAMse,IAAIyU,EAC5C,CACAwe,eAAAA,CAAgBvxC,GACZ,MAAMwxC,EAAsB7wC,KAAKuvC,cAAct2B,IAAI5Z,GAAM,QAAAyxC,EAAApiC,UAAA1Q,OADpC+yC,EAAI,IAAAzxC,MAAAwxC,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,EAAA,GAAAtiC,UAAAsiC,GAEzBH,GAAuBA,EAAoBp1B,UAAUs1B,EACzD,CACAE,YAAAA,CAAa5xC,GACT,OAAOW,KAAKuvC,cAAcrxC,IAAImB,EAClC,CAIAimB,KAAAA,CAAMD,GAAqD,IAA3CynB,EAAap+B,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG1O,KAAKo1B,KAAKoa,gBACtC,GAAIxvC,KAAKqlB,SACL,OClPhB,IAAsBlT,EDmPVnS,KAAKovC,OCnPKj9B,EDmPgBkT,aClPR6rB,YAAkC,QAApB/+B,EAAQ6f,QDmPxChyB,KAAKqlB,SAAWA,EAChB,MAAM,SAAEzB,EAAQ,OAAEC,EAAM,cAAEtK,GAAkBvZ,KAAKD,QASjD,GARIwZ,IAAkBA,EAAcjY,SAChCiY,EAAc+L,MAAMD,GAExBrlB,KAAKo1B,KAAK2a,MAAMpyB,IAAI3d,MACpBA,KAAKgjB,QAAUhjB,KAAKgjB,OAAOuF,SAAS5K,IAAI3d,MACpC8sC,IAAkBjpB,GAAUD,KAC5B5jB,KAAK8sC,eAAgB,GAErB0B,EAAsB,CACtB,IAAI2C,EACJ,MAAMC,EAAsBA,IAAOpxC,KAAKo1B,KAAK+Z,uBAAwB,EACrEX,EAAqBnpB,GAAU,KAC3BrlB,KAAKo1B,KAAK+Z,uBAAwB,EAClCgC,GAAeA,IACfA,EE9PpB,SAAejyC,EAAUmyC,GACrB,MAAM1gC,EAAQvQ,GAAAA,EAAKC,MACbixC,EAAexzC,IAAmB,IAAlB,UAAE4S,GAAW5S,EAC/B,MAAM0V,EAAU9C,EAAYC,EACxB6C,GAAW69B,KACXvgC,EAAAA,GAAAA,IAAYwgC,GACZpyC,EAASsU,EAAU69B,GACvB,EAGJ,OADAzgC,GAAAA,GAAMoN,KAAKszB,GAAc,GAClB,KAAMxgC,EAAAA,GAAAA,IAAYwgC,EAC7B,CFmPkCzxC,CAAMuxC,EAAqB,KACrCvK,GAAsBC,yBACtBD,GAAsBC,wBAAyB,EAC/C9mC,KAAK+vC,MAAM73B,QAAQq5B,IACvB,GAER,CACI3tB,GACA5jB,KAAKo1B,KAAKoc,mBAAmB5tB,EAAU5jB,OAGd,IAAzBA,KAAKD,QAAQgW,SACbwD,IACCqK,GAAYC,IACb7jB,KAAKsyB,iBAAiB,aAAa7J,IAA+E,IAA9E,MAAE/kB,EAAK,iBAAEijC,EAAgB,yBAAE8K,EAA0B5tB,OAAQ6tB,GAAYjpB,EACzG,GAAIzoB,KAAK2xC,yBAGL,OAFA3xC,KAAKkF,YAASlG,OACdgB,KAAK4xC,oBAAiB5yC,GAI1B,MAAM6yC,EAAmB7xC,KAAKD,QAAQwY,YAClCgB,EAAc3b,wBACdk0C,IACE,uBAAEC,EAAsB,0BAAEC,GAA+Bz4B,EAAcxC,WAKvEk7B,GAAiBjyC,KAAKkyC,eACvBtG,GAAiB5rC,KAAKkyC,aAAcR,IACrCD,EAMEU,GAAgCxL,GAAoB8K,EAC1D,GAAIzxC,KAAKD,QAAQkkB,YACZjkB,KAAKysC,YAAczsC,KAAKysC,WAAWpnB,UACpC8sB,GACCxL,IACIsL,IAAkBjyC,KAAK8oC,kBAAoB,CAC5C9oC,KAAKysC,aACLzsC,KAAKktC,aAAeltC,KAAKysC,WACzBzsC,KAAKktC,aAAaA,kBAAeluC,GAErCgB,KAAKoyC,mBAAmB1uC,EAAOyuC,GAC/B,MAAME,EAAmB,KAClB15B,EAAAA,GAAAA,GAAmBk5B,EAAkB,UACxCx9B,OAAQ09B,EACRjxC,WAAYkxC,IAEZz4B,EAAca,oBACdpa,KAAKD,QAAQkkB,cACbouB,EAAiBxyC,MAAQ,EACzBwyC,EAAiBh1C,MAAO,GAE5B2C,KAAKgkC,eAAeqO,EACxB,MAOS1L,GACD4K,GAAgBvxC,MAEhBA,KAAK+oC,UAAY/oC,KAAKD,QAAQ67B,gBAC9B57B,KAAKD,QAAQ67B,iBAGrB57B,KAAKkyC,aAAeR,CAAS,GAGzC,CACAnsB,OAAAA,GACIvlB,KAAKD,QAAQ6jB,UAAY5jB,KAAKuoC,aAC9BvoC,KAAKo1B,KAAK2a,MAAM5G,OAAOnpC,MACvB,MAAM0oC,EAAQ1oC,KAAK2oC,WACnBD,GAASA,EAAMS,OAAOnpC,MACtBA,KAAKgjB,QAAUhjB,KAAKgjB,OAAOuF,SAAS3K,OAAO5d,MAC3CA,KAAKqlB,cAAWrmB,GAChB8R,EAAAA,GAAAA,IAAY9Q,KAAK8vC,iBACrB,CAEAwC,WAAAA,GACItyC,KAAKkvC,uBAAwB,CACjC,CACAqD,aAAAA,GACIvyC,KAAKkvC,uBAAwB,CACjC,CACAsD,eAAAA,GACI,OAAOxyC,KAAKkvC,uBAAyBlvC,KAAKmvC,qBAC9C,CACAwC,sBAAAA,GACI,OAAQ3xC,KAAKmjC,oBACRnjC,KAAKgjB,QAAUhjB,KAAKgjB,OAAO2uB,2BAC5B,CACR,CAEAc,WAAAA,GACQzyC,KAAKwyC,oBAETxyC,KAAK6sC,YAAa,EAClB7sC,KAAK+vC,OAAS/vC,KAAK+vC,MAAM73B,QAAQw6B,IACjC1yC,KAAK6uC,cACT,CACA8D,oBAAAA,GACI,MAAM,cAAEp5B,GAAkBvZ,KAAKD,QAC/B,OAAOwZ,GAAiBA,EAAcxC,WAAWiT,iBACrD,CACAue,UAAAA,GAAyC,IAA9BqK,IAAqBlkC,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,KAAAA,UAAA,GAE5B,GADA1O,KAAKo1B,KAAKoa,iBAAkB,EACxBxvC,KAAKo1B,KAAKod,kBAEV,YADAxyC,KAAKD,QAAQ67B,gBAAkB57B,KAAKD,QAAQ67B,kBAoBhD,GALI3kB,OAAOs3B,iCACNvuC,KAAKquC,2BACNF,GAAuCnuC,OAE1CA,KAAKo1B,KAAKyX,YAAc7sC,KAAKo1B,KAAKqd,cAC/BzyC,KAAK8sC,cACL,OACJ9sC,KAAK8sC,eAAgB,EACrB,IAAK,IAAIvrC,EAAI,EAAGA,EAAIvB,KAAK0wC,KAAK1yC,OAAQuD,IAAK,CACvC,MAAMsyB,EAAO7zB,KAAK0wC,KAAKnvC,GACvBsyB,EAAKyb,sBAAuB,EAC5Bzb,EAAKsS,aAAa,YACdtS,EAAK9zB,QAAQkkB,YACb4P,EAAK0U,YAAW,EAExB,CACA,MAAM,SAAE3kB,EAAQ,OAAEC,GAAW7jB,KAAKD,QAClC,QAAiBf,IAAb4kB,IAA2BC,EAC3B,OACJ,MAAMmG,EAAoBhqB,KAAK2yC,uBAC/B3yC,KAAK6yC,2BAA6B7oB,EAC5BA,EAAkBhqB,KAAK+Z,aAAc,SACrC/a,EACNgB,KAAK8yC,iBACLF,GAAyB5yC,KAAK4wC,gBAAgB,aAClD,CACApgC,MAAAA,GACIxQ,KAAKyvC,iBAAkB,EAKvB,GAJyBzvC,KAAKwyC,kBAQ1B,OAHAxyC,KAAKuyC,gBACLvyC,KAAK6vC,yBACL7vC,KAAK+vC,MAAM73B,QAAQ66B,IAGlB/yC,KAAK6sC,YACN7sC,KAAK+vC,MAAM73B,QAAQ86B,IAEvBhzC,KAAK6sC,YAAa,EAIlB7sC,KAAK+vC,MAAM73B,QAAQ+6B,IAKnBjzC,KAAK+vC,MAAM73B,QAAQkuB,IAKnBpmC,KAAK+vC,MAAM73B,QAAQg7B,IACnBlzC,KAAK6vC,oBAML,MAAMxvC,EAAMD,GAAAA,EAAKC,MACjB0Q,GAAAA,GAAUrN,OAAQJ,EAAAA,GAAAA,GAAM,EAAG,IAAO,GAAIjD,EAAM0Q,GAAAA,GAAUL,WACtDK,GAAAA,GAAUL,UAAYrQ,EACtB0Q,GAAAA,GAAUC,cAAe,EACzB8L,GAAAA,GAAMtM,OAAOqN,QAAQ9M,GAAAA,IACrB+L,GAAAA,GAAMoB,UAAUL,QAAQ9M,GAAAA,IACxB+L,GAAAA,GAAMqB,OAAON,QAAQ9M,GAAAA,IACrBA,GAAAA,GAAUC,cAAe,CAC7B,CACAm3B,SAAAA,GACSnoC,KAAKyvC,kBACNzvC,KAAKyvC,iBAAkB,EACvBrtB,EAAUpE,KAAKhe,KAAK0vC,gBAE5B,CACAG,iBAAAA,GACI7vC,KAAK+vC,MAAM73B,QAAQi7B,IACnBnzC,KAAKywC,YAAYv4B,QAAQk7B,GAC7B,CACAC,wBAAAA,GACSrzC,KAAK2vC,4BACN3vC,KAAK2vC,2BAA4B,EACjC/+B,GAAAA,GAAMsN,UAAUle,KAAK8vC,kBAAkB,GAAO,GAEtD,CACA5G,yBAAAA,GAMIt4B,GAAAA,GAAMwN,YAAW,KACTpe,KAAK8sC,cACL9sC,KAAKo1B,KAAK+S,YAGVnoC,KAAKo1B,KAAKwa,mBACd,GAER,CAIAkD,cAAAA,IACQ9yC,KAAK2sC,UAAa3sC,KAAKqlB,WAE3BrlB,KAAK2sC,SAAW3sC,KAAKskC,UACzB,CACA8B,YAAAA,GACI,IAAKpmC,KAAKqlB,SACN,OAGJ,GADArlB,KAAKmmC,iBACCnmC,KAAKD,QAAQqkB,sBAAuBpkB,KAAK+oC,YAC1C/oC,KAAK8sC,cACN,OASJ,GAAI9sC,KAAKysC,aAAezsC,KAAKysC,WAAWpnB,SACpC,IAAK,IAAI9jB,EAAI,EAAGA,EAAIvB,KAAK0wC,KAAK1yC,OAAQuD,IAAK,CAC1BvB,KAAK0wC,KAAKnvC,GAClB4kC,cACT,CAEJ,MAAMmN,EAAatzC,KAAK6jB,OACxB7jB,KAAK6jB,OAAS7jB,KAAKskC,SAAQ,GAC3BtkC,KAAKuzC,gBAAkB1T,KACvB7/B,KAAK8sC,eAAgB,EACrB9sC,KAAKsnC,qBAAkBtoC,EACvBgB,KAAK4wC,gBAAgB,UAAW5wC,KAAK6jB,OAAOyf,WAC5C,MAAM,cAAE/pB,GAAkBvZ,KAAKD,QAC/BwZ,GACIA,EAAckC,OAAO,gBAAiBzb,KAAK6jB,OAAOyf,UAAWgQ,EAAaA,EAAWhQ,eAAYtkC,EACzG,CACAmnC,YAAAA,GAAgC,IAAnBqN,EAAK9kC,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,UACb6R,EAAmBjV,QAAQtL,KAAKD,QAAQikB,cAAgBhkB,KAAKqlB,UAMjE,GALIrlB,KAAKklC,QACLllC,KAAKklC,OAAO2J,cAAgB7uC,KAAKo1B,KAAKyZ,aACtC7uC,KAAKklC,OAAOsO,QAAUA,IACtBjzB,GAAmB,GAEnBA,EAAkB,CAClB,MAAMkzB,EAAS9E,EAAkB3uC,KAAKqlB,UACtCrlB,KAAKklC,OAAS,CACV2J,YAAa7uC,KAAKo1B,KAAKyZ,YACvB2E,QACAC,SACAhkC,OAAQi/B,EAAc1uC,KAAKqlB,UAC3BquB,QAAS1zC,KAAKklC,OAASllC,KAAKklC,OAAOuO,OAASA,EAEpD,CACJ,CACA7E,cAAAA,GACI,IAAKA,EACD,OACJ,MAAM+E,EAAmB3zC,KAAK8sC,eAC1B9sC,KAAKsvC,sBACLtvC,KAAKD,QAAQqkB,oBACXwvB,EAAgB5zC,KAAKsnC,kBAAoBmE,GAAYzrC,KAAKsnC,iBAC1Dtd,EAAoBhqB,KAAK2yC,uBACzBkB,EAAyB7pB,EACzBA,EAAkBhqB,KAAK+Z,aAAc,SACrC/a,EACA80C,EAA8BD,IAA2B7zC,KAAK6yC,2BAChEc,IACCC,GACGxpB,GAAapqB,KAAK+Z,eAClB+5B,KACJlF,EAAe5uC,KAAKqlB,SAAUwuB,GAC9B7zC,KAAKsvC,sBAAuB,EAC5BtvC,KAAKgsC,iBAEb,CACA1H,OAAAA,GAAgC,IAAxByP,IAAerlC,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,KAAAA,UAAA,GACnB,MAAMslC,EAAUh0C,KAAKmlC,iBACrB,IAAI7B,EAAYtjC,KAAKi0C,oBAAoBD,GAi+BrD,IAAkB5S,EAv9BN,OAJI2S,IACAzQ,EAAYtjC,KAAK+zC,gBAAgBzQ,IA29B7C4Q,IADc9S,EAx9BGkC,GAy9BH36B,GACdurC,GAAU9S,EAAI1X,GAz9BC,CACHmlB,YAAa7uC,KAAKo1B,KAAKyZ,YACvBsF,YAAaH,EACb1Q,YACAvpB,aAAc,CAAC,EACfmR,OAAQlrB,KAAK2oB,GAErB,CACAwc,cAAAA,GACI,IAAIr3B,EACJ,MAAM,cAAEyL,GAAkBvZ,KAAKD,QAC/B,IAAKwZ,EACD,OAAOsmB,KACX,MAAMuB,EAAM7nB,EAAc4H,qBAE1B,MADgD,QAAtBrT,EAAK9N,KAAKklC,cAA2B,IAAPp3B,OAAgB,EAASA,EAAG4lC,UAAY1zC,KAAK0wC,KAAK7rC,KAAKuvC,KACzF,CAElB,MAAM,OAAElP,GAAWllC,KAAKo1B,KACpB8P,IACA3D,GAAcH,EAAIz4B,EAAGu8B,EAAOz1B,OAAO9G,GACnC44B,GAAcH,EAAI1X,EAAGwb,EAAOz1B,OAAOia,GAE3C,CACA,OAAO0X,CACX,CACA6S,mBAAAA,CAAoB7S,GAChB,IAAItzB,EACJ,MAAMumC,EAAmBxU,KAEzB,GADA4K,GAAY4J,EAAkBjT,GACH,QAAtBtzB,EAAK9N,KAAKklC,cAA2B,IAAPp3B,OAAgB,EAASA,EAAG4lC,QAC3D,OAAOW,EAMX,IAAK,IAAI9yC,EAAI,EAAGA,EAAIvB,KAAK0wC,KAAK1yC,OAAQuD,IAAK,CACvC,MAAMsyB,EAAO7zB,KAAK0wC,KAAKnvC,IACjB,OAAE2jC,EAAM,QAAEnlC,GAAY8zB,EACxBA,IAAS7zB,KAAKo1B,MAAQ8P,GAAUnlC,EAAQikB,eAKpCkhB,EAAOwO,SACPjJ,GAAY4J,EAAkBjT,GAElCG,GAAc8S,EAAiB1rC,EAAGu8B,EAAOz1B,OAAO9G,GAChD44B,GAAc8S,EAAiB3qB,EAAGwb,EAAOz1B,OAAOia,GAExD,CACA,OAAO2qB,CACX,CACAC,cAAAA,CAAelT,GAA4B,IAAvBmT,EAAa7lC,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,IAAAA,UAAA,GAC7B,MAAM8lC,EAAiB3U,KACvB4K,GAAY+J,EAAgBpT,GAC5B,IAAK,IAAI7/B,EAAI,EAAGA,EAAIvB,KAAK0wC,KAAK1yC,OAAQuD,IAAK,CACvC,MAAMsyB,EAAO7zB,KAAK0wC,KAAKnvC,IAClBgzC,GACD1gB,EAAK9zB,QAAQikB,cACb6P,EAAKqR,QACLrR,IAASA,EAAKuB,MACdwM,GAAa4S,EAAgB,CACzB7rC,GAAIkrB,EAAKqR,OAAOz1B,OAAO9G,EACvB+gB,GAAImK,EAAKqR,OAAOz1B,OAAOia,IAG1BU,GAAayJ,EAAK9Z,eAEvB6nB,GAAa4S,EAAgB3gB,EAAK9Z,aACtC,CAIA,OAHIqQ,GAAapqB,KAAK+Z,eAClB6nB,GAAa4S,EAAgBx0C,KAAK+Z,cAE/By6B,CACX,CACAT,eAAAA,CAAgB3S,GACZ,MAAMqT,EAAsB5U,KAC5B4K,GAAYgK,EAAqBrT,GACjC,IAAK,IAAI7/B,EAAI,EAAGA,EAAIvB,KAAK0wC,KAAK1yC,OAAQuD,IAAK,CACvC,MAAMsyB,EAAO7zB,KAAK0wC,KAAKnvC,GACvB,IAAKsyB,EAAKxO,SACN,SACJ,IAAK+E,GAAayJ,EAAK9Z,cACnB,SACJsmB,GAASxM,EAAK9Z,eAAiB8Z,EAAKif,iBACpC,MAAMvH,EAAY1L,KAElB4K,GAAYc,EADI1X,EAAKsR,kBAErBmG,GAAoBmJ,EAAqB5gB,EAAK9Z,aAAc8Z,EAAK8Y,SAAW9Y,EAAK8Y,SAASrJ,eAAYtkC,EAAWusC,EACrH,CAIA,OAHInhB,GAAapqB,KAAK+Z,eAClBuxB,GAAoBmJ,EAAqBz0C,KAAK+Z,cAE3C06B,CACX,CACAC,cAAAA,CAAehxC,GACX1D,KAAK20C,YAAcjxC,EACnB1D,KAAKo1B,KAAKie,2BACVrzC,KAAK+uC,mBAAoB,CAC7B,CACA5qB,UAAAA,CAAWpkB,GACPC,KAAKD,QAAU,IACRC,KAAKD,WACLA,EACHgtC,eAAiC/tC,IAAtBe,EAAQgtC,WAA0BhtC,EAAQgtC,UAE7D,CACAgG,iBAAAA,GACI/yC,KAAKklC,YAASlmC,EACdgB,KAAK6jB,YAAS7kB,EACdgB,KAAK2sC,cAAW3tC,EAChBgB,KAAK6yC,gCAA6B7zC,EAClCgB,KAAK20C,iBAAc31C,EACnBgB,KAAKkF,YAASlG,EACdgB,KAAK8sC,eAAgB,CACzB,CACA8H,kCAAAA,GACS50C,KAAK60C,gBAQN70C,KAAK60C,eAAexE,2BACpBt/B,GAAAA,GAAUL,WACV1Q,KAAK60C,eAAe5E,oBAAmB,EAE/C,CACAA,kBAAAA,GAA+C,IAA5B6E,EAAkBpmC,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,IAAAA,UAAA,GACjC,IAAIZ,EAMJ,MAAMq+B,EAAOnsC,KAAK+0C,UAClB/0C,KAAK+uC,oBAAsB/uC,KAAK+uC,kBAAoB5C,EAAK4C,mBACzD/uC,KAAKivC,mBAAqBjvC,KAAKivC,iBAAmB9C,EAAK8C,kBACvDjvC,KAAKgvC,0BAA4BhvC,KAAKgvC,wBAA0B7C,EAAK6C,yBACrE,MAAMgG,EAAW1pC,QAAQtL,KAAKktC,eAAiBltC,OAASmsC,EAWxD,KANkB2I,GACbE,GAAYh1C,KAAKgvC,yBAClBhvC,KAAK+uC,oBACmB,QAAtBjhC,EAAK9N,KAAKgjB,cAA2B,IAAPlV,OAAgB,EAASA,EAAGihC,oBAC5D/uC,KAAKi1C,gCACLj1C,KAAKo1B,KAAK+Z,uBAEV,OACJ,MAAM,OAAEtrB,EAAM,SAAED,GAAa5jB,KAAKD,QAIlC,GAAKC,KAAK6jB,SAAYA,GAAUD,GAAhC,CAQA,GANA5jB,KAAKqwC,yBAA2Bt/B,GAAAA,GAAUL,WAMrC1Q,KAAK20C,cAAgB30C,KAAK4xC,eAAgB,CAC3C,MAAMiD,EAAiB70C,KAAKk1C,6BACxBL,GACAA,EAAehxB,QACY,IAA3B7jB,KAAKwwC,mBACLxwC,KAAK60C,eAAiBA,EACtB70C,KAAK40C,qCACL50C,KAAK4xC,eAAiB/R,KACtB7/B,KAAKm1C,qBAAuBtV,KAC5Bb,GAAqBh/B,KAAKm1C,qBAAsBn1C,KAAK6jB,OAAOyf,UAAWuR,EAAehxB,OAAOyf,WAC7FmH,GAAYzqC,KAAK4xC,eAAgB5xC,KAAKm1C,uBAGtCn1C,KAAK60C,eAAiB70C,KAAK4xC,oBAAiB5yC,CAEpD,CAKA,GAAKgB,KAAK4xC,gBAAmB5xC,KAAK20C,YAAlC,CvB7tBZ,IAAyBzvC,EAAQ45B,EAAU9b,EuBswB/B,GApCKhjB,KAAKkF,SACNlF,KAAKkF,OAAS26B,KACd7/B,KAAKo1C,qBAAuBvV,MAK5B7/B,KAAK4xC,gBACL5xC,KAAKm1C,sBACLn1C,KAAK60C,gBACL70C,KAAK60C,eAAe3vC,QACpBlF,KAAK40C,qCvB7uBI1vC,EuB8uBOlF,KAAKkF,OvB9uBJ45B,EuB8uBY9+B,KAAK4xC,evB9uBP5uB,EuB8uBuBhjB,KAAK60C,eAAe3vC,OvB7uBlF25B,GAAiB35B,EAAOyD,EAAGm2B,EAASn2B,EAAGqa,EAAOra,GAC9Ck2B,GAAiB35B,EAAOwkB,EAAGoV,EAASpV,EAAG1G,EAAO0G,IuBivB7B1pB,KAAK20C,aACNrpC,QAAQtL,KAAKktC,cAEbltC,KAAKkF,OAASlF,KAAKs0C,eAAet0C,KAAK6jB,OAAOyf,WAG9CmH,GAAYzqC,KAAKkF,OAAQlF,KAAK6jB,OAAOyf,WAEzCnC,GAAcnhC,KAAKkF,OAAQlF,KAAK20C,cAMhClK,GAAYzqC,KAAKkF,OAAQlF,KAAK6jB,OAAOyf,WAKrCtjC,KAAKi1C,+BAAgC,CACrCj1C,KAAKi1C,gCAAiC,EACtC,MAAMJ,EAAiB70C,KAAKk1C,6BACxBL,GACAvpC,QAAQupC,EAAe3H,gBACnB5hC,QAAQtL,KAAKktC,gBAChB2H,EAAe90C,QAAQikB,cACxB6wB,EAAe3vC,QACY,IAA3BlF,KAAKwwC,mBACLxwC,KAAK60C,eAAiBA,EACtB70C,KAAK40C,qCACL50C,KAAK4xC,eAAiB/R,KACtB7/B,KAAKm1C,qBAAuBtV,KAC5Bb,GAAqBh/B,KAAKm1C,qBAAsBn1C,KAAKkF,OAAQ2vC,EAAe3vC,QAC5EulC,GAAYzqC,KAAK4xC,eAAgB5xC,KAAKm1C,uBAGtCn1C,KAAK60C,eAAiB70C,KAAK4xC,oBAAiB5yC,CAEpD,CAII2uC,IACAJ,GAAQE,sBAhEF,CA5BA,CA8Fd,CACAyH,0BAAAA,GACI,GAAKl1C,KAAKgjB,SACNqd,GAASrgC,KAAKgjB,OAAOjJ,gBACrBymB,GAAexgC,KAAKgjB,OAAOjJ,cAG/B,OAAI/Z,KAAKgjB,OAAOqyB,eACLr1C,KAAKgjB,OAGLhjB,KAAKgjB,OAAOkyB,4BAE3B,CACAG,YAAAA,GACI,OAAO/pC,SAAStL,KAAK4xC,gBACjB5xC,KAAK20C,aACL30C,KAAKD,QAAQkkB,aACbjkB,KAAK6jB,OACb,CACAqsB,cAAAA,GACI,IAAIpiC,EACJ,MAAMq+B,EAAOnsC,KAAK+0C,UACZC,EAAW1pC,QAAQtL,KAAKktC,eAAiBltC,OAASmsC,EACxD,IAAImJ,GAAU,EAuBd,IAlBIt1C,KAAK+uC,oBAA6C,QAAtBjhC,EAAK9N,KAAKgjB,cAA2B,IAAPlV,OAAgB,EAASA,EAAGihC,sBACtFuG,GAAU,GAMVN,IACCh1C,KAAKgvC,yBAA2BhvC,KAAKivC,oBACtCqG,GAAU,GAMVt1C,KAAKqwC,2BAA6Bt/B,GAAAA,GAAUL,YAC5C4kC,GAAU,GAEVA,EACA,OACJ,MAAM,OAAEzxB,EAAM,SAAED,GAAa5jB,KAAKD,QAWlC,GANAC,KAAK8uC,gBAAkBxjC,QAAStL,KAAKgjB,QAAUhjB,KAAKgjB,OAAO8rB,iBACvD9uC,KAAK8oC,kBACL9oC,KAAKu1C,kBACJv1C,KAAK8uC,kBACN9uC,KAAK20C,YAAc30C,KAAK4xC,oBAAiB5yC,IAExCgB,KAAK6jB,SAAYA,IAAUD,EAC5B,OAKJ6mB,GAAYzqC,KAAKuzC,gBAAiBvzC,KAAK6jB,OAAOyf,WAI9C,MAAMkS,EAAiBx1C,KAAKqnC,UAAU1+B,EAChC8sC,EAAiBz1C,KAAKqnC,UAAU3d,GjBn2BlD,SAAyB0X,EAAKiG,EAAWqO,GAAsC,IAA5BC,EAAkBjnC,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,IAAAA,UAAA,GACjE,MAAMknC,EAAaF,EAAS13C,OAC5B,IAAK43C,EACD,OAGJ,IAAI/hB,EACAnwB,EAFJ2jC,EAAU1+B,EAAI0+B,EAAU3d,EAAI,EAG5B,IAAK,IAAInoB,EAAI,EAAGA,EAAIq0C,EAAYr0C,IAAK,CACjCsyB,EAAO6hB,EAASn0C,GAChBmC,EAAQmwB,EAAKyT,gBAKb,MAAM,cAAE/tB,GAAkBsa,EAAK9zB,QAC3BwZ,GACAA,EAAcsJ,MAAMoH,OACkB,aAAtC1Q,EAAcsJ,MAAMoH,MAAM4rB,UAG1BF,GACA9hB,EAAK9zB,QAAQikB,cACb6P,EAAKqR,QACLrR,IAASA,EAAKuB,MACdwM,GAAaR,EAAK,CACdz4B,GAAIkrB,EAAKqR,OAAOz1B,OAAO9G,EACvB+gB,GAAImK,EAAKqR,OAAOz1B,OAAOia,IAG3BhmB,IAEA2jC,EAAU1+B,GAAKjF,EAAMiF,EAAEilB,MACvByZ,EAAU3d,GAAKhmB,EAAMgmB,EAAEkE,MAEvBuT,GAAcC,EAAK19B,IAEnBiyC,GAAsBvrB,GAAayJ,EAAK9Z,eACxC6nB,GAAaR,EAAKvN,EAAK9Z,cAE/B,CAKIstB,EAAU1+B,EAAI24B,IACd+F,EAAU1+B,EAAI04B,KACdgG,EAAU1+B,EAAI,GAEd0+B,EAAU3d,EAAI4X,IACd+F,EAAU3d,EAAI2X,KACdgG,EAAU3d,EAAI,EAEtB,CiBmzBYosB,CAAgB91C,KAAKuzC,gBAAiBvzC,KAAKqnC,UAAWrnC,KAAK0wC,KAAMsE,IAK7D7I,EAAKtoB,QACJsoB,EAAKjnC,QACgB,IAArBlF,KAAKqnC,UAAU1+B,GAAgC,IAArB3I,KAAKqnC,UAAU3d,IAC1CyiB,EAAKjnC,OAASinC,EAAKtoB,OAAOyf,UAC1B6I,EAAKiJ,qBAAuBvV,MAEhC,MAAM,OAAE36B,GAAWinC,EACdjnC,GAYAlF,KAAKsnC,iBAAoBtnC,KAAK+1C,qBAI/BpL,GAAkB3qC,KAAK+1C,oBAAoBptC,EAAG3I,KAAKsnC,gBAAgB3+B,GACnEgiC,GAAkB3qC,KAAK+1C,oBAAoBrsB,EAAG1pB,KAAKsnC,gBAAgB5d,IAJnE1pB,KAAKg2C,yBAeTpX,GAAa5+B,KAAKsnC,gBAAiBtnC,KAAKuzC,gBAAiBruC,EAAQlF,KAAK+Z,cAClE/Z,KAAKqnC,UAAU1+B,IAAM6sC,GACrBx1C,KAAKqnC,UAAU3d,IAAM+rB,GACpB3J,GAAgB9rC,KAAKsnC,gBAAgB3+B,EAAG3I,KAAK+1C,oBAAoBptC,IACjEmjC,GAAgB9rC,KAAKsnC,gBAAgB5d,EAAG1pB,KAAK+1C,oBAAoBrsB,KAClE1pB,KAAKswC,cAAe,EACpBtwC,KAAKgsC,iBACLhsC,KAAK4wC,gBAAgB,mBAAoB1rC,IAKzCyoC,IACAJ,GAAQG,0BAnCJ1tC,KAAK+1C,sBACL/1C,KAAKg2C,yBACLh2C,KAAKgsC,iBAmCjB,CACAgB,IAAAA,GACIhtC,KAAKuwC,WAAY,CAErB,CACA/D,IAAAA,GACIxsC,KAAKuwC,WAAY,CAErB,CACAvE,cAAAA,GAAiC,IAAlBiK,IAASvnC,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,KAAAA,UAAA,GACpB,IAAIZ,EAEJ,GADsC,QAArCA,EAAK9N,KAAKD,QAAQwZ,qBAAkC,IAAPzL,GAAyBA,EAAGk+B,iBACtEiK,EAAW,CACX,MAAMvN,EAAQ1oC,KAAK2oC,WACnBD,GAASA,EAAMsD,gBACnB,CACIhsC,KAAKktC,eAAiBltC,KAAKktC,aAAa7nB,WACxCrlB,KAAKktC,kBAAeluC,EAE5B,CACAg3C,sBAAAA,GACIh2C,KAAK+1C,oBAAsBnW,KAC3B5/B,KAAKsnC,gBAAkB1H,KACvB5/B,KAAKk2C,6BAA+BtW,IACxC,CACAwS,kBAAAA,CAAmB1uC,GAA6C,IAAtCyuC,EAA4BzjC,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,IAAAA,UAAA,GAClD,MAAMi+B,EAAW3sC,KAAK2sC,SAChBwJ,EAAuBxJ,EACvBA,EAAS5yB,aACT,CAAC,EACDq8B,EAAc,IAAKp2C,KAAK+Z,cACxB46B,EAAc/U,KACf5/B,KAAK60C,gBACL70C,KAAK60C,eAAe90C,QAAQkkB,aAC7BjkB,KAAK4xC,eAAiB5xC,KAAKm1C,0BAAuBn2C,GAEtDgB,KAAKi1C,gCAAkC9C,EACvC,MAAMkE,EAAiBxW,KAGjByW,GAFiB3J,EAAWA,EAASzhB,YAASlsB,MAC/BgB,KAAK6jB,OAAS7jB,KAAK6jB,OAAOqH,YAASlsB,GAElD0pC,EAAQ1oC,KAAK2oC,WACb4N,GAAgB7N,GAASA,EAAME,QAAQ5qC,QAAU,EACjDw4C,EAAyBlrC,QAAQgrC,IAClCC,IAC0B,IAA3Bv2C,KAAKD,QAAQgtC,YACZ/sC,KAAK0wC,KAAK7rC,KAAK4xC,KAEpB,IAAIC,EADJ12C,KAAKwwC,kBAAoB,EAEzBxwC,KAAK22C,eAAkBlvC,IACnB,MAAM6H,EAAW7H,EAAS,IJh/B1C,IAAmB9D,EAAGC,EIy/CNmJ,EAAQpC,EAAMC,EAAIb,EAxgBlB6sC,GAAajC,EAAYhsC,EAAGjF,EAAMiF,EAAG2G,GACrCsnC,GAAajC,EAAYjrB,EAAGhmB,EAAMgmB,EAAGpa,GACrCtP,KAAK00C,eAAeC,GAChB30C,KAAK4xC,gBACL5xC,KAAKm1C,sBACLn1C,KAAK6jB,QACL7jB,KAAK60C,gBACL70C,KAAK60C,eAAehxB,SACpBmb,GAAqBqX,EAAgBr2C,KAAK6jB,OAAOyf,UAAWtjC,KAAK60C,eAAehxB,OAAOyf,WAggB3Fv2B,EA/fW/M,KAAK4xC,eA+fRjnC,EA/fwB3K,KAAKm1C,qBA+fvBvqC,EA/f6CyrC,EA+fzCtsC,EA/fyDuF,EAggBvFunC,GAAQ9pC,EAAOpE,EAAGgC,EAAKhC,EAAGiC,EAAGjC,EAAGoB,GAChC8sC,GAAQ9pC,EAAO2c,EAAG/e,EAAK+e,EAAG9e,EAAG8e,EAAG3f,GA5fZ2sC,IJ//BL/yC,EIggCe3D,KAAK4xC,eJhgCjBhuC,EIggCiC8yC,EJ//B5ChL,GAAW/nC,EAAEgF,EAAG/E,EAAE+E,IAAM+iC,GAAW/nC,EAAE+lB,EAAG9lB,EAAE8lB,MIggC7B1pB,KAAK+uC,mBAAoB,GAExB2H,IACDA,EAAqB7W,MACzB4K,GAAYiM,EAAoB12C,KAAK4xC,iBAErC0E,IACAt2C,KAAK4sC,gBAAkBwJ,EPzgC3C,SAAmBlxC,EAAQ4xC,EAAQ3K,EAAM78B,EAAUknC,EAAwBD,GACnEC,GACAtxC,EAAO6xC,SAAUzqC,EAAAA,GAAAA,GAAU,OAEVtN,IAAjBmtC,EAAK4K,QAAwB5K,EAAK4K,QAAU,EAAG3M,GAAgB96B,IAC/DpK,EAAO8xC,aAAc1qC,EAAAA,GAAAA,QAA6BtN,IAAnB83C,EAAOC,QAAwBD,EAAOC,QAAU,EAAG,EAAGzM,GAAiBh7B,KAEjGinC,IACLrxC,EAAO6xC,SAAUzqC,EAAAA,GAAAA,QAA6BtN,IAAnB83C,EAAOC,QAAwBD,EAAOC,QAAU,OAAoB/3C,IAAjBmtC,EAAK4K,QAAwB5K,EAAK4K,QAAU,EAAGznC,IAKjI,IAAK,IAAI/N,EAAI,EAAGA,EAAIwoC,GAAYxoC,IAAK,CACjC,MAAM01C,EAAc,SAASnN,GAAQvoC,WACrC,IAAI21C,EAAehN,GAAU4M,EAAQG,GACjCE,EAAajN,GAAUiC,EAAM8K,QACZj4C,IAAjBk4C,QAA6Cl4C,IAAfm4C,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACAlN,GAAKiN,KAAkBjN,GAAKkN,IAE5BjyC,EAAO+xC,GAAe74C,KAAKoE,KAAI8J,EAAAA,GAAAA,GAAU09B,GAASkN,GAAelN,GAASmN,GAAa7nC,GAAW,IAC9F+B,GAAAA,GAAQ5R,KAAK03C,IAAe9lC,GAAAA,GAAQ5R,KAAKy3C,MACzChyC,EAAO+xC,IAAgB,MAI3B/xC,EAAO+xC,GAAeE,EAE9B,EAIIL,EAAOrW,QAAU0L,EAAK1L,UACtBv7B,EAAOu7B,QAASn0B,EAAAA,GAAAA,GAAUwqC,EAAOrW,QAAU,EAAG0L,EAAK1L,QAAU,EAAGnxB,GAExE,COk+BoB8nC,CAAUhB,EAAaD,EAAsBn2C,KAAK+Z,aAAczK,EAAUknC,EAAwBD,IAEtGv2C,KAAKo1B,KAAKie,2BACVrzC,KAAKgsC,iBACLhsC,KAAKwwC,kBAAoBlhC,CAAQ,EAErCtP,KAAK22C,eAAe32C,KAAKD,QAAQkkB,WAAa,IAAO,EACzD,CACA+f,cAAAA,CAAejkC,GACXC,KAAK4wC,gBAAgB,kBACrB5wC,KAAK8oC,kBAAoB9oC,KAAK8oC,iBAAiBj4B,OAC3C7Q,KAAKktC,cAAgBltC,KAAKktC,aAAapE,kBACvC9oC,KAAKktC,aAAapE,iBAAiBj4B,OAEnC7Q,KAAKu1C,oBACLzkC,EAAAA,GAAAA,IAAY9Q,KAAKu1C,kBACjBv1C,KAAKu1C,sBAAmBv2C,GAO5BgB,KAAKu1C,iBAAmB3kC,GAAAA,GAAMJ,QAAO,KACjCq2B,GAAsBC,wBAAyB,EAC/C9mC,KAAK8oC,iBGziCrB,SAA4BtqC,EAAOT,EAAWgC,GAC1C,MAAMs3C,GAAgBlsB,EAAAA,EAAAA,GAAc3sB,GAASA,GAAQ0T,EAAAA,GAAAA,IAAY1T,GAEjE,OADA64C,EAAc1mC,OAAM2H,EAAAA,GAAAA,GAAmB,GAAI++B,EAAet5C,EAAWgC,IAC9Ds3C,EAAczhC,SACzB,CHqiCwC0hC,CAAmB,EApgCnC,IAogCuD,IACxDv3C,EACHgB,SAAW0G,IACPzH,KAAK22C,eAAelvC,GACpB1H,EAAQgB,UAAYhB,EAAQgB,SAAS0G,EAAO,EAEhD3G,WAAYA,KACRf,EAAQe,YAAcf,EAAQe,aAC9Bd,KAAKu3C,mBAAmB,IAG5Bv3C,KAAKktC,eACLltC,KAAKktC,aAAapE,iBAAmB9oC,KAAK8oC,kBAE9C9oC,KAAKu1C,sBAAmBv2C,CAAS,GAEzC,CACAu4C,iBAAAA,GACQv3C,KAAKktC,eACLltC,KAAKktC,aAAapE,sBAAmB9pC,EACrCgB,KAAKktC,aAAaR,qBAAkB1tC,GAExC,MAAM0pC,EAAQ1oC,KAAK2oC,WACnBD,GAASA,EAAMuE,wBACfjtC,KAAKktC,aACDltC,KAAK8oC,iBACD9oC,KAAK4sC,qBACD5tC,EACZgB,KAAK4wC,gBAAgB,oBACzB,CACAW,eAAAA,GACQvxC,KAAK8oC,mBACL9oC,KAAK22C,gBAAkB32C,KAAK22C,eApiCpB,KAqiCR32C,KAAK8oC,iBAAiBj4B,QAE1B7Q,KAAKu3C,mBACT,CACAC,uBAAAA,GACI,MAAMrL,EAAOnsC,KAAK+0C,UAClB,IAAI,qBAAEK,EAAoB,OAAElwC,EAAM,OAAE2e,EAAM,aAAE9J,GAAiBoyB,EAC7D,GAAKiJ,GAAyBlwC,GAAW2e,EAAzC,CAOA,GAAI7jB,OAASmsC,GACTnsC,KAAK6jB,QACLA,GACA4zB,GAA0Bz3C,KAAKD,QAAQskB,cAAerkB,KAAK6jB,OAAOyf,UAAWzf,EAAOyf,WAAY,CAChGp+B,EAASlF,KAAKkF,QAAU26B,KACxB,MAAM6X,EAAUnZ,GAAWv+B,KAAK6jB,OAAOyf,UAAU36B,GACjDzD,EAAOyD,EAAEvC,IAAM+lC,EAAKjnC,OAAOyD,EAAEvC,IAC7BlB,EAAOyD,EAAEnG,IAAM0C,EAAOyD,EAAEvC,IAAMsxC,EAC9B,MAAMC,EAAUpZ,GAAWv+B,KAAK6jB,OAAOyf,UAAU5Z,GACjDxkB,EAAOwkB,EAAEtjB,IAAM+lC,EAAKjnC,OAAOwkB,EAAEtjB,IAC7BlB,EAAOwkB,EAAElnB,IAAM0C,EAAOwkB,EAAEtjB,IAAMuxC,CAClC,CACAlN,GAAY2K,EAAsBlwC,GAMlC08B,GAAawT,EAAsBr7B,GAOnC6kB,GAAa5+B,KAAKk2C,6BAA8Bl2C,KAAKuzC,gBAAiB6B,EAAsBr7B,EA/BlF,CAgCd,CACAy3B,kBAAAA,CAAmB5tB,EAAUiQ,GACpB7zB,KAAKywC,YAAYvyC,IAAI0lB,IACtB5jB,KAAKywC,YAAYl6B,IAAIqN,EAAU,IAAImoB,IAEzB/rC,KAAKywC,YAAYx3B,IAAI2K,GAC7BjG,IAAIkW,GACV,MAAMrD,EAASqD,EAAK9zB,QAAQ4jB,uBAC5BkQ,EAAK2U,QAAQ,CACTjwB,WAAYiY,EAASA,EAAOjY,gBAAavZ,EACzCutC,sBAAuB/b,GAAUA,EAAOonB,4BAClCpnB,EAAOonB,4BAA4B/jB,QACnC70B,GAEd,CACA+pC,MAAAA,GACI,MAAML,EAAQ1oC,KAAK2oC,WACnB,OAAOD,GAAQA,EAAMyD,OAASnsC,IAClC,CACA+0C,OAAAA,GACI,IAAIjnC,EACJ,MAAM,SAAE8V,GAAa5jB,KAAKD,QAC1B,OAAO6jB,IAAuC,QAA1B9V,EAAK9N,KAAK2oC,kBAA+B,IAAP76B,OAAgB,EAASA,EAAGq+B,OAAgBnsC,IACtG,CACA63C,WAAAA,GACI,IAAI/pC,EACJ,MAAM,SAAE8V,GAAa5jB,KAAKD,QAC1B,OAAO6jB,EAAsC,QAA1B9V,EAAK9N,KAAK2oC,kBAA+B,IAAP76B,OAAgB,EAASA,EAAGo+B,cAAWltC,CAChG,CACA2pC,QAAAA,GACI,MAAM,SAAE/kB,GAAa5jB,KAAKD,QAC1B,GAAI6jB,EACA,OAAO5jB,KAAKo1B,KAAKqb,YAAYx3B,IAAI2K,EACzC,CACA4kB,OAAAA,GAAiE,IAAzD,WAAE6G,EAAU,WAAE92B,EAAU,sBAAEg0B,GAAwB79B,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1D,MAAMg6B,EAAQ1oC,KAAK2oC,WACfD,GACAA,EAAMF,QAAQxoC,KAAMusC,GACpB8C,IACArvC,KAAKsnC,qBAAkBtoC,EACvBgB,KAAKqvC,YAAa,GAElB92B,GACAvY,KAAKmkB,WAAW,CAAE5L,cAC1B,CACAkwB,QAAAA,GACI,MAAMC,EAAQ1oC,KAAK2oC,WACnB,QAAID,GACOA,EAAMD,SAASzoC,KAK9B,CACA0yC,oBAAAA,GACI,MAAM,cAAEn5B,GAAkBvZ,KAAKD,QAC/B,IAAKwZ,EACD,OAEJ,IAAIu+B,GAAyB,EAK7B,MAAM,aAAE/9B,GAAiBR,EAWzB,IAVIQ,EAAa4P,GACb5P,EAAa0mB,QACb1mB,EAAa2mB,SACb3mB,EAAa4mB,SACb5mB,EAAag+B,SACbh+B,EAAa6mB,OACb7mB,EAAa8mB,SACbiX,GAAyB,IAGxBA,EACD,OACJ,MAAME,EAAc,CAAC,EACjBj+B,EAAa4P,GACbqkB,GAAyB,IAAKz0B,EAAey+B,EAAah4C,KAAK4sC,iBAGnE,IAAK,IAAIrrC,EAAI,EAAGA,EAAIssC,GAAc7vC,OAAQuD,IACtCysC,GAAyB,SAASH,GAActsC,KAAMgY,EAAey+B,EAAah4C,KAAK4sC,iBACvFoB,GAAyB,OAAOH,GAActsC,KAAMgY,EAAey+B,EAAah4C,KAAK4sC,iBAIzFrzB,EAAc4E,SAEd,IAAK,MAAMrZ,KAAOkzC,EACdz+B,EAAc20B,eAAeppC,EAAKkzC,EAAYlzC,IAC1C9E,KAAK4sC,kBACL5sC,KAAK4sC,gBAAgB9nC,GAAOkzC,EAAYlzC,IAKhDyU,EAAcyyB,gBAClB,CACA9c,mBAAAA,CAAoBD,GAChB,IAAInhB,EAAImqC,EACR,IAAKj4C,KAAKqlB,UAAYrlB,KAAKovC,MACvB,OACJ,IAAKpvC,KAAKuwC,UACN,OAAOzC,GAEX,MAAMoK,EAAS,CACXnK,WAAY,IAEV/jB,EAAoBhqB,KAAK2yC,uBAC/B,GAAI3yC,KAAKqvC,WAQL,OAPArvC,KAAKqvC,YAAa,EAClB6I,EAAOnB,QAAU,GACjBmB,EAAOC,cACHhoB,GAAiC,OAAdlB,QAAoC,IAAdA,OAAuB,EAASA,EAAUkpB,gBAAkB,GACzGD,EAAO3rC,UAAYyd,EACbA,EAAkBhqB,KAAK+Z,aAAc,IACrC,OACCm+B,EAEX,MAAM/L,EAAOnsC,KAAK+0C,UAClB,IAAK/0C,KAAKsnC,kBAAoBtnC,KAAK6jB,SAAWsoB,EAAKjnC,OAAQ,CACvD,MAAMkzC,EAAc,CAAC,EAerB,OAdIp4C,KAAKD,QAAQ6jB,WACbw0B,EAAYrB,aACsB/3C,IAA9BgB,KAAK+Z,aAAag9B,QACZ/2C,KAAK+Z,aAAag9B,QAClB,EACVqB,EAAYD,cACRhoB,GAAiC,OAAdlB,QAAoC,IAAdA,OAAuB,EAASA,EAAUkpB,gBAAkB,IAEzGn4C,KAAKswC,eAAiBlmB,GAAapqB,KAAK+Z,gBACxCq+B,EAAY7rC,UAAYyd,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACNhqB,KAAKswC,cAAe,GAEjB8H,CACX,CACA,MAAMC,EAAiBlM,EAAKS,iBAAmBT,EAAKpyB,aACpD/Z,KAAKw3C,0BACLU,EAAO3rC,UIpwCnB,SAAkC7I,EAAO2jC,EAAWiR,GAChD,IAAI/rC,EAAY,GAOhB,MAAMgsC,EAAa70C,EAAMiF,EAAEg2B,UAAY0I,EAAU1+B,EAC3C6vC,EAAa90C,EAAMgmB,EAAEiV,UAAY0I,EAAU3d,EAC3C+uB,GAAkC,OAApBH,QAAgD,IAApBA,OAA6B,EAASA,EAAgB3uB,IAAM,EAW5G,IAVI4uB,GAAcC,GAAcC,KAC5BlsC,EAAY,eAAegsC,QAAiBC,QAAiBC,SAM7C,IAAhBpR,EAAU1+B,GAA2B,IAAhB0+B,EAAU3d,IAC/Bnd,GAAa,SAAS,EAAI86B,EAAU1+B,MAAM,EAAI0+B,EAAU3d,OAExD4uB,EAAiB,CACjB,MAAM,qBAAE1uB,EAAoB,OAAE6W,EAAM,QAAEC,EAAO,QAAEC,EAAO,MAAEC,EAAK,MAAEC,GAAUyX,EACrE1uB,IACArd,EAAY,eAAeqd,QAA2Brd,KACtDk0B,IACAl0B,GAAa,UAAUk0B,UACvBC,IACAn0B,GAAa,WAAWm0B,UACxBC,IACAp0B,GAAa,WAAWo0B,UACxBC,IACAr0B,GAAa,SAASq0B,UACtBC,IACAt0B,GAAa,SAASs0B,SAC9B,CAKA,MAAM6X,EAAgBh1C,EAAMiF,EAAEilB,MAAQyZ,EAAU1+B,EAC1CgwC,EAAgBj1C,EAAMgmB,EAAEkE,MAAQyZ,EAAU3d,EAIhD,OAHsB,IAAlBgvB,GAAyC,IAAlBC,IACvBpsC,GAAa,SAASmsC,MAAkBC,MAErCpsC,GAAa,MACxB,CJstC+BqsC,CAAyB54C,KAAKk2C,6BAA8Bl2C,KAAKqnC,UAAWgR,GAC3FruB,IACAkuB,EAAO3rC,UAAYyd,EAAkBquB,EAAgBH,EAAO3rC,YAEhE,MAAM,EAAE5D,EAAC,EAAE+gB,GAAM1pB,KAAKsnC,gBACtB4Q,EAAO/tB,gBAAkB,GAAc,IAAXxhB,EAAE1D,WAA4B,IAAXykB,EAAEzkB,YAC7CknC,EAAKS,gBAKLsL,EAAOnB,QACH5K,IAASnsC,KACiG,QAAnGi4C,EAAuC,QAAjCnqC,EAAKuqC,EAAetB,eAA4B,IAAPjpC,EAAgBA,EAAK9N,KAAK+Z,aAAag9B,eAA4B,IAAPkB,EAAgBA,EAAK,EACjIj4C,KAAK0sC,gBACD1sC,KAAK+Z,aAAag9B,QAClBsB,EAAerB,YAO7BkB,EAAOnB,QACH5K,IAASnsC,UACwBhB,IAA3Bq5C,EAAetB,QACXsB,EAAetB,QACf,QAC2B/3C,IAA/Bq5C,EAAerB,YACXqB,EAAerB,YACf,EAKlB,IAAK,MAAMlyC,KAAOwkB,EAAiB,CAC/B,QAA4BtqB,IAAxBq5C,EAAevzC,GACf,SACJ,MAAM,QAAEqiC,EAAO,QAAEqC,GAAYlgB,EAAgBxkB,GAOvC+zC,EAAiC,SAArBX,EAAO3rC,UACnB8rC,EAAevzC,GACfqiC,EAAQkR,EAAevzC,GAAMqnC,GACnC,GAAI3C,EAAS,CACT,MAAMsP,EAAMtP,EAAQxrC,OACpB,IAAK,IAAIuD,EAAI,EAAGA,EAAIu3C,EAAKv3C,IACrB22C,EAAO1O,EAAQjoC,IAAMs3C,CAE7B,MAEIX,EAAOpzC,GAAO+zC,CAEtB,CAYA,OANI74C,KAAKD,QAAQ6jB,WACbs0B,EAAOC,cACHhM,IAASnsC,KACHmwB,GAAiC,OAAdlB,QAAoC,IAAdA,OAAuB,EAASA,EAAUkpB,gBAAkB,GACrG,QAEPD,CACX,CACA/E,aAAAA,GACInzC,KAAKysC,WAAazsC,KAAK2sC,cAAW3tC,CACtC,CAEA+5C,SAAAA,GACI/4C,KAAKo1B,KAAK2a,MAAM73B,SAAS2b,IAAW,IAAI/lB,EAAI,OAAwC,QAAhCA,EAAK+lB,EAAKiV,wBAAqC,IAAPh7B,OAAgB,EAASA,EAAG+C,MAAM,IAC9H7Q,KAAKo1B,KAAK2a,MAAM73B,QAAQ66B,IACxB/yC,KAAKo1B,KAAKqb,YAAY3yB,OAC1B,EAER,CACA,SAASsoB,GAAavS,GAClBA,EAAKuS,cACT,CACA,SAAS8M,GAAmBrf,GACxB,IAAI/lB,EACJ,MAAM6+B,GAAuC,QAA1B7+B,EAAK+lB,EAAK4Y,kBAA+B,IAAP3+B,OAAgB,EAASA,EAAG6+B,WAAa9Y,EAAK8Y,SACnG,GAAI9Y,EAAKkV,UACLlV,EAAKhQ,QACL8oB,GACA9Y,EAAKod,aAAa,aAAc,CAChC,MAAQ3N,UAAWzf,EAAQswB,YAAa6E,GAAmBnlB,EAAKhQ,QAC1D,cAAEQ,GAAkBwP,EAAK9zB,QACzBi1C,EAAWrI,EAASzhB,SAAW2I,EAAKhQ,OAAOqH,OAG3B,SAAlB7G,EACAyb,IAAUtB,IACN,MAAMya,EAAejE,EACfrI,EAASwH,YAAY3V,GACrBmO,EAASrJ,UAAU9E,GACnBxgC,EAASugC,GAAW0a,GAC1BA,EAAa7yC,IAAMyd,EAAO2a,GAAMp4B,IAChC6yC,EAAaz2C,IAAMy2C,EAAa7yC,IAAMpI,CAAM,IAG3Cy5C,GAA0BpzB,EAAesoB,EAASrJ,UAAWzf,IAClEic,IAAUtB,IACN,MAAMya,EAAejE,EACfrI,EAASwH,YAAY3V,GACrBmO,EAASrJ,UAAU9E,GACnBxgC,EAASugC,GAAW1a,EAAO2a,IACjCya,EAAaz2C,IAAMy2C,EAAa7yC,IAAMpI,EAIlC61B,EAAK+d,iBAAmB/d,EAAKiV,mBAC7BjV,EAAKkb,mBAAoB,EACzBlb,EAAK+d,eAAepT,GAAMh8B,IACtBqxB,EAAK+d,eAAepT,GAAMp4B,IAAMpI,EACxC,IAGR,MAAMk7C,EAActZ,KACpBhB,GAAasa,EAAar1B,EAAQ8oB,EAASrJ,WAC3C,MAAM6V,EAAcvZ,KAChBoV,EACApW,GAAaua,EAAatlB,EAAKygB,eAAe0E,GAAgB,GAAOrM,EAASwH,aAG9EvV,GAAaua,EAAat1B,EAAQ8oB,EAASrJ,WAE/C,MAAMqD,GAAoB8E,GAAYyN,GACtC,IAAIzH,GAA2B,EAC/B,IAAK5d,EAAK4Y,WAAY,CAClB,MAAMoI,EAAiBhhB,EAAKqhB,6BAK5B,GAAIL,IAAmBA,EAAepI,WAAY,CAC9C,MAAQE,SAAUyM,EAAgBv1B,OAAQw1B,GAAiBxE,EAC3D,GAAIuE,GAAkBC,EAAc,CAChC,MAAMC,EAAmBzZ,KACzBb,GAAqBsa,EAAkB3M,EAASrJ,UAAW8V,EAAe9V,WAC1E,MAAM+S,EAAiBxW,KACvBb,GAAqBqX,EAAgBxyB,EAAQw1B,EAAa/V,WACrDsI,GAAiB0N,EAAkBjD,KACpC5E,GAA2B,GAE3BoD,EAAe90C,QAAQkkB,aACvB4P,EAAK+d,eAAiByE,EACtBxiB,EAAKshB,qBAAuBmE,EAC5BzlB,EAAKghB,eAAiBA,EAE9B,CACJ,CACJ,CACAhhB,EAAK+c,gBAAgB,YAAa,CAC9B/sB,SACA8oB,WACAjpC,MAAOy1C,EACPD,cACAvS,mBACA8K,4BAER,MACK,GAAI5d,EAAKkV,SAAU,CACpB,MAAM,eAAEnN,GAAmB/H,EAAK9zB,QAChC67B,GAAkBA,GACtB,CAMA/H,EAAK9zB,QAAQwY,gBAAavZ,CAC9B,CACA,SAASgxC,GAAoBnc,GAIrB8Z,IACAJ,GAAQC,aAEP3Z,EAAK7Q,SAQL6Q,EAAKwhB,iBACNxhB,EAAKkb,kBAAoBlb,EAAK7Q,OAAO+rB,mBAOzClb,EAAKmb,0BAA4Bnb,EAAKmb,wBAA0B1jC,QAAQuoB,EAAKkb,mBACzElb,EAAK7Q,OAAO+rB,mBACZlb,EAAK7Q,OAAOgsB,0BAChBnb,EAAKob,mBAAqBpb,EAAKob,iBAAmBpb,EAAK7Q,OAAOisB,kBAClE,CACA,SAASkB,GAAgBtc,GACrBA,EAAKkb,kBACDlb,EAAKmb,wBACDnb,EAAKob,kBACD,CAChB,CACA,SAASkE,GAActf,GACnBA,EAAKsf,eACT,CACA,SAASJ,GAAkBlf,GACvBA,EAAKkf,mBACT,CACA,SAASC,GAAmBnf,GACxBA,EAAKiZ,eAAgB,CACzB,CACA,SAASmG,GAAoBpf,GACzB,MAAM,cAAEta,GAAkBsa,EAAK9zB,QAC3BwZ,GAAiBA,EAAcxC,WAAWwiC,uBAC1ChgC,EAAckC,OAAO,uBAEzBoY,EAAK+a,gBACT,CACA,SAAS2C,GAAgB1d,GACrBA,EAAK0d,kBACL1d,EAAK8gB,YAAc9gB,EAAK+d,eAAiB/d,EAAK3uB,YAASlG,EACvD60B,EAAKkb,mBAAoB,CAC7B,CACA,SAASkB,GAAmBpc,GACxBA,EAAKoc,oBACT,CACA,SAASC,GAAerc,GACpBA,EAAKqc,gBACT,CACA,SAASwC,GAAqB7e,GAC1BA,EAAK6e,sBACT,CACA,SAASU,GAAoB1K,GACzBA,EAAMyE,oBACV,CACA,SAASyJ,GAAa7pC,EAAQrJ,EAAOqG,GACjCgD,EAAO4xB,WAAYryB,EAAAA,GAAAA,GAAU5I,EAAMi7B,UAAW,EAAG50B,GACjDgD,EAAO6gB,OAAQthB,EAAAA,GAAAA,GAAU5I,EAAMkqB,MAAO,EAAG7jB,GACzCgD,EAAO9H,OAASvB,EAAMuB,OACtB8H,EAAO2xB,YAAch7B,EAAMg7B,WAC/B,CACA,SAASmY,GAAQ9pC,EAAQpC,EAAMC,EAAIb,GAC/BgD,EAAO3G,KAAMkG,EAAAA,GAAAA,GAAU3B,EAAKvE,IAAKwE,EAAGxE,IAAK2D,GACzCgD,EAAOvK,KAAM8J,EAAAA,GAAAA,GAAU3B,EAAKnI,IAAKoI,EAAGpI,IAAKuH,EAC7C,CAKA,SAAS0sC,GAAoB5iB,GACzB,OAAQA,EAAK+Y,sBAAwD5tC,IAArC60B,EAAK+Y,gBAAgBoK,WACzD,CACA,MAAMlF,GAA0B,CAC5Bp0C,SAAU,IACVC,KAAM,CAAC,GAAK,EAAG,GAAK,IAElB67C,GAAqBC,GAAgC,qBAAdC,WACzCA,UAAUC,WACVD,UAAUC,UAAUzrB,cAAc9E,SAASqwB,GAMzCG,GAAaJ,GAAkB,kBAAoBA,GAAkB,WACrEp7C,KAAK4N,MACLxD,GAAAA,EACN,SAAS0rC,GAAU1V,GAEfA,EAAKp4B,IAAMwzC,GAAWpb,EAAKp4B,KAC3Bo4B,EAAKh8B,IAAMo3C,GAAWpb,EAAKh8B,IAC/B,CAKA,SAASi1C,GAA0BpzB,EAAesoB,EAAU9oB,GACxD,MAA0B,aAAlBQ,GACe,oBAAlBA,IvB1hDO7lB,EuB2hDIqtC,GAAYc,GvB3hDTznC,EuB2hDoB2mC,GAAYhoB,GvB3hDxBg2B,EuB2hDiC,KvB1hDrDz7C,KAAKyH,IAAIrH,EAAQ0G,IAAW20C,IADvC,IAAgBr7C,EAAO0G,EAAQ20C,CuB4hD/B,CACA,SAASzF,GAAuBvgB,GAC5B,IAAI/lB,EACJ,OAAO+lB,IAASA,EAAKuB,OAAgC,QAAtBtnB,EAAK+lB,EAAKqR,cAA2B,IAAPp3B,OAAgB,EAASA,EAAG4lC,QAC7F,CKxiDA,MAAMoG,GAAyBx1B,GAAqB,CAChDkqB,qBAAsBA,CAACjsB,EAAK9G,IAAWyW,GAAY3P,EAAK,SAAU9G,GAClEizB,cAAeA,KAAA,CACX/lC,EAAG2sB,SAASykB,gBAAgBC,YAAc1kB,SAAS2kB,KAAKD,WACxDtwB,EAAG4L,SAASykB,gBAAgBG,WAAa5kB,SAAS2kB,KAAKC,YAE3DvL,kBAAmBA,KAAM,ICNvB3J,GAAqB,CACvB1jC,aAAStC,GAEPm7C,GAAqB71B,GAAqB,CAC5CoqB,cAAgBrpB,IAAQ,CACpB1c,EAAG0c,EAAS20B,WACZtwB,EAAGrE,EAAS60B,YAEhBzL,cAAeA,KACX,IAAKzJ,GAAmB1jC,QAAS,CAC7B,MAAM84C,EAAe,IAAIN,GAAuB,CAAC,GACjDM,EAAa90B,MAAMrO,QACnBmjC,EAAaj2B,WAAW,CAAEH,cAAc,IACxCghB,GAAmB1jC,QAAU84C,CACjC,CACA,OAAOpV,GAAmB1jC,OAAO,EAErCstC,eAAgBA,CAACvpB,EAAU7mB,KACvB6mB,EAAS4E,MAAM1d,eAAsBvN,IAAVR,EAAsBA,EAAQ,MAAM,EAEnEmwC,kBAAoBtpB,GAAa/Z,QAAuD,UAA/C2L,OAAOsI,iBAAiB8F,GAAUg1B,YClBzEv2B,GAAO,CACT8C,IAAK,CACDgN,QpBKR,cAAyBA,GACrBj0B,WAAAA,GACI4R,SAAS7C,WACT1O,KAAKs6C,0BAA4B9xC,GAAAA,CACrC,CACA+xC,aAAAA,CAAcC,GACVx6C,KAAKy6C,QAAU,IAAIve,GAAWse,EAAkBx6C,KAAK06C,oBAAqB,CACtE74B,mBAAoB7hB,KAAK6zB,KAAKkQ,wBAC9B3H,cAAe4F,GAAiBhiC,KAAK6zB,OAE7C,CACA6mB,iBAAAA,GACI,MAAM,kBAAEC,EAAiB,WAAEC,EAAU,MAAEC,EAAK,SAAEC,GAAa96C,KAAK6zB,KAAK9c,WACrE,MAAO,CACH2mB,eAAgBkJ,GAAa+T,GAC7B3d,QAAS4J,GAAagU,GACtB3d,OAAQ4d,EACRpiC,MAAOA,CAACga,EAAO0B,YACJn0B,KAAKy6C,QACRK,GACAlqC,GAAAA,GAAMwN,YAAW,IAAM08B,EAASroB,EAAO0B,IAC3C,EAGZ,CACA7O,KAAAA,GACItlB,KAAKs6C,0BAA4BrnB,GAAgBjzB,KAAK6zB,KAAKvyB,QAAS,eAAgBmxB,GAAUzyB,KAAKu6C,cAAc9nB,IACrH,CACAjiB,MAAAA,GACIxQ,KAAKy6C,SAAWz6C,KAAKy6C,QAAQ7c,eAAe59B,KAAK06C,oBACrD,CACAn1B,OAAAA,GACIvlB,KAAKs6C,4BACLt6C,KAAKy6C,SAAWz6C,KAAKy6C,QAAQpd,KACjC,IoBrCAvZ,KAAM,CACF8P,QCNR,cAA0BA,GACtBj0B,WAAAA,CAAYk0B,GACRtiB,MAAMsiB,GACN7zB,KAAK+6C,oBAAsBvyC,GAAAA,EAC3BxI,KAAK29B,gBAAkBn1B,GAAAA,EACvBxI,KAAKqY,SAAW,IAAI+pB,GAA0BvO,EAClD,CACAvO,KAAAA,GAGI,MAAM,aAAE01B,GAAiBh7C,KAAK6zB,KAAK9c,WAC/BikC,IACAh7C,KAAK+6C,oBAAsBC,EAAavf,UAAUz7B,KAAKqY,WAE3DrY,KAAK29B,gBAAkB39B,KAAKqY,SAASguB,gBAAkB79B,GAAAA,CAC3D,CACA+c,OAAAA,GACIvlB,KAAK+6C,sBACL/6C,KAAK29B,iBACT,GDZIxV,eAAgBgyB,GAChBvyB,cAAaA,K,eEXrB,MAAMqzB,GAAuB,CAAE35C,QAAS,MAClC45C,GAA2B,CAAE55C,SAAS,GCF5C,MAAM65C,GAAqB,IAAIvmB,Q,sECQ/B,MAAMwmB,GAAa,IAAIC,GAAAA,EAAqBjwC,GAAAA,EAAO5L,GAAAA,G,eCenD,MAAM87C,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAEEC,GAAkB51B,EAAa3nB,OAKrC,MAAMw9C,GAQF/rB,2BAAAA,CAA4BgsB,EAAQC,EAAYC,GAC5C,MAAO,CAAC,CACZ,CACAh8C,WAAAA,CAAW7B,GAA6G,IAA5G,OAAEklB,EAAM,MAAEH,EAAK,gBAAEnI,EAAe,oBAAEyI,EAAmB,sBAAEI,EAAqB,YAAEX,GAAc9kB,EAAEiC,EAAO2O,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,CAAC,EAKjH1O,KAAK8vB,iBAAkB,EAKvB9vB,KAAKsB,QAAU,KAIftB,KAAKuoB,SAAW,IAAIprB,IAIpB6C,KAAK6lB,eAAgB,EACrB7lB,KAAK4lB,uBAAwB,EAQ7B5lB,KAAKoa,mBAAqB,KAM1Bpa,KAAK2N,OAAS,IAAIqb,IAClBhpB,KAAKqS,iBAAmBA,GAAAA,EAIxBrS,KAAKwnB,SAAW,CAAC,EAKjBxnB,KAAK47C,mBAAqB,IAAI5yB,IAM9BhpB,KAAK67C,iBAAmB,CAAC,EAIzB77C,KAAK87C,OAAS,CAAC,EAMf97C,KAAK+7C,uBAAyB,CAAC,EAC/B/7C,KAAKg8C,aAAe,IAAMh8C,KAAKyb,OAAO,SAAUzb,KAAK+Z,cACrD/Z,KAAKme,OAAS,KACVne,KAAKi8C,mBAAoB,EACpBj8C,KAAKsB,UAEVtB,KAAKk8C,eACLl8C,KAAKm8C,eAAen8C,KAAKsB,QAAStB,KAAKsvB,YAAatvB,KAAK6iB,MAAMoH,MAAOjqB,KAAK0jB,YAAW,EAE1F1jB,KAAKi8C,mBAAoB,EACzBj8C,KAAKgsC,eAAiB,KACbhsC,KAAKi8C,oBACNj8C,KAAKi8C,mBAAoB,EACzBrrC,GAAAA,GAAMuN,OAAOne,KAAKme,QAAQ,GAAO,GACrC,EAEJ,MAAM,aAAEpE,EAAY,YAAEuV,GAAgB1M,EACtC5iB,KAAK+Z,aAAeA,EACpB/Z,KAAKo8C,WAAa,IAAKriC,GACvB/Z,KAAKq8C,cAAgBx5B,EAAMW,QAAU,IAAKzJ,GAAiB,CAAC,EAC5D/Z,KAAKsvB,YAAcA,EACnBtvB,KAAKgjB,OAASA,EACdhjB,KAAK6iB,MAAQA,EACb7iB,KAAK0a,gBAAkBA,EACvB1a,KAAK+e,MAAQiE,EAASA,EAAOjE,MAAQ,EAAI,EACzC/e,KAAKmjB,oBAAsBA,EAC3BnjB,KAAKD,QAAUA,EACfC,KAAKujB,sBAAwBjY,QAAQiY,GACrCvjB,KAAK4lB,sBAAwBA,EAAsB/C,GACnD7iB,KAAK6lB,cAAgBA,EAAchD,GAC/B7iB,KAAK6lB,gBACL7lB,KAAK8a,gBAAkB,IAAI3d,KAE/B6C,KAAKi6B,uBAAyB3uB,QAAQ0X,GAAUA,EAAO1hB,SAWvD,MAAM,WAAEuuB,KAAeysB,GAAwBt8C,KAAKyvB,4BAA4B5M,EAAO,CAAC,EAAG7iB,MAC3F,IAAK,MAAM8E,KAAOw3C,EAAqB,CACnC,MAAM99C,EAAQ89C,EAAoBx3C,QACR9F,IAAtB+a,EAAajV,KAAsBqmB,EAAAA,EAAAA,GAAc3sB,IACjDA,EAAM+X,IAAIwD,EAAajV,IAAM,EAErC,CACJ,CACAwgB,KAAAA,CAAMD,GACFrlB,KAAKsB,QAAU+jB,EACf81B,GAAmB5kC,IAAI8O,EAAUrlB,MAC7BA,KAAK0jB,aAAe1jB,KAAK0jB,WAAW2B,UACpCrlB,KAAK0jB,WAAW4B,MAAMD,GAEtBrlB,KAAKgjB,QAAUhjB,KAAK6lB,gBAAkB7lB,KAAK4lB,wBAC3C5lB,KAAKu8C,sBAAwBv8C,KAAKgjB,OAAOw5B,gBAAgBx8C,OAE7DA,KAAK2N,OAAOuK,SAAQ,CAAC1Z,EAAOsG,IAAQ9E,KAAKy8C,kBAAkB33C,EAAKtG,KAC3D08C,GAAyB55C,SCtKtC,WAEI,GADA45C,GAAyB55C,SAAU,EAC9BymB,EAAAA,EAEL,GAAI9Q,OAAOylC,WAAY,CACnB,MAAMC,EAAmB1lC,OAAOylC,WAAW,4BACrCE,EAA8BA,IAAO3B,GAAqB35C,QAAUq7C,EAAiB/jB,QAC3F+jB,EAAiBE,YAAYD,GAC7BA,GACJ,MAEI3B,GAAqB35C,SAAU,CAEvC,CD0JYw7C,GAEJ98C,KAAKoa,mBAC4B,UAA7Bpa,KAAKmjB,sBAE8B,WAA7BnjB,KAAKmjB,qBAED83B,GAAqB35C,SAI/BtB,KAAKgjB,QACLhjB,KAAKgjB,OAAOuF,SAAS5K,IAAI3d,MAC7BA,KAAKwQ,OAAOxQ,KAAK6iB,MAAO7iB,KAAK0a,gBACjC,CACA6K,OAAAA,GACI41B,GAAmBv9B,OAAO5d,KAAKsB,SAC/BtB,KAAK0jB,YAAc1jB,KAAK0jB,WAAW6B,WACnCzU,EAAAA,GAAAA,IAAY9Q,KAAKg8C,eACjBlrC,EAAAA,GAAAA,IAAY9Q,KAAKme,QACjBne,KAAK47C,mBAAmB1jC,SAASixB,GAAWA,MAC5CnpC,KAAKu8C,uBAAyBv8C,KAAKu8C,wBACnCv8C,KAAKgjB,QAAUhjB,KAAKgjB,OAAOuF,SAAS3K,OAAO5d,MAC3C,IAAK,MAAM8E,KAAO9E,KAAK87C,OACnB97C,KAAK87C,OAAOh3C,GAAKgZ,QAErB,IAAK,MAAMhZ,KAAO9E,KAAKwnB,SAAU,CAC7B,MAAMu1B,EAAU/8C,KAAKwnB,SAAS1iB,GAC1Bi4C,IACAA,EAAQx3B,UACRw3B,EAAQjpB,WAAY,EAE5B,CACA9zB,KAAKsB,QAAU,IACnB,CACAm7C,iBAAAA,CAAkB33C,EAAKtG,GACfwB,KAAK47C,mBAAmB19C,IAAI4G,IAC5B9E,KAAK47C,mBAAmB3iC,IAAInU,EAA5B9E,GAEJ,MAAMg9C,EAAmB/+C,EAAAA,EAAeC,IAAI4G,GACtCm4C,EAAiBz+C,EAAM0+C,GAAG,UAAWC,IACvCn9C,KAAK+Z,aAAajV,GAAOq4C,EACzBn9C,KAAK6iB,MAAM9hB,UAAY6P,GAAAA,GAAMsN,UAAUle,KAAKg8C,cACxCgB,GAAoBh9C,KAAK0jB,aACzB1jB,KAAK0jB,WAAWurB,kBAAmB,EACvC,IAEEmO,EAAwB5+C,EAAM0+C,GAAG,gBAAiBl9C,KAAKgsC,gBAC7DhsC,KAAK47C,mBAAmBrlC,IAAIzR,GAAK,KAC7Bm4C,IACAG,IACI5+C,EAAM+W,OACN/W,EAAMqS,MAAM,GAExB,CACAiL,gBAAAA,CAAiBuhC,GAIb,OAAKr9C,KAAKsB,SACLtB,KAAKs9C,0BACNt9C,KAAK3C,OAASggD,EAAMhgD,KAGjB2C,KAAKs9C,yBAAyBt9C,KAAKsB,QAAS+7C,EAAM/7C,SAF9C,CAGf,CACAujB,cAAAA,GACI,IAAI/f,EAAM,YACV,IAAKA,KAAOgiB,EAAoB,CAC5B,MAAMy2B,EAAoBz2B,EAAmBhiB,GAC7C,IAAKy4C,EACD,SACJ,MAAM,UAAEx2B,EAAW6M,QAAS4pB,GAAuBD,EAYnD,IARKv9C,KAAKwnB,SAAS1iB,IACf04C,GACAz2B,EAAU/mB,KAAK6iB,SACf7iB,KAAKwnB,SAAS1iB,GAAO,IAAI04C,EAAmBx9C,OAK5CA,KAAKwnB,SAAS1iB,GAAM,CACpB,MAAMi4C,EAAU/8C,KAAKwnB,SAAS1iB,GAC1Bi4C,EAAQjpB,UACRipB,EAAQvsC,UAGRusC,EAAQz3B,QACRy3B,EAAQjpB,WAAY,EAE5B,CACJ,CACJ,CACAooB,YAAAA,GACIl8C,KAAKy9C,MAAMz9C,KAAKsvB,YAAatvB,KAAK+Z,aAAc/Z,KAAK6iB,MACzD,CAMA1B,kBAAAA,GACI,OAAOnhB,KAAKsB,QACNtB,KAAK09C,2BAA2B19C,KAAKsB,QAAStB,KAAK6iB,OACnDgd,IACV,CACA8d,cAAAA,CAAe74C,GACX,OAAO9E,KAAK+Z,aAAajV,EAC7B,CACAopC,cAAAA,CAAeppC,EAAKtG,GAChBwB,KAAK+Z,aAAajV,GAAOtG,CAC7B,CAKAgS,MAAAA,CAAOqS,EAAOnI,IACNmI,EAAMmH,mBAAqBhqB,KAAK6iB,MAAMmH,oBACtChqB,KAAKgsC,iBAEThsC,KAAK0vB,UAAY1vB,KAAK6iB,MACtB7iB,KAAK6iB,MAAQA,EACb7iB,KAAK87B,oBAAsB97B,KAAK0a,gBAChC1a,KAAK0a,gBAAkBA,EAIvB,IAAK,IAAInZ,EAAI,EAAGA,EAAI+5C,GAAkBt9C,OAAQuD,IAAK,CAC/C,MAAMuD,EAAMw2C,GAAkB/5C,GAC1BvB,KAAK+7C,uBAAuBj3C,KAC5B9E,KAAK+7C,uBAAuBj3C,YACrB9E,KAAK+7C,uBAAuBj3C,IAEvC,MACM84C,EAAW/6B,EADK,KAAO/d,GAEzB84C,IACA59C,KAAK+7C,uBAAuBj3C,GAAO9E,KAAKk9C,GAAGp4C,EAAK84C,GAExD,CACA59C,KAAK67C,iBEpTb,SAAqC1pC,EAAS3L,EAAMuyB,GAChD,IAAK,MAAMj0B,KAAO0B,EAAM,CACpB,MAAMq3C,EAAYr3C,EAAK1B,GACjBg5C,EAAY/kB,EAAKj0B,GACvB,IAAIqmB,EAAAA,EAAAA,GAAc0yB,GAKd1rC,EAAQ4rC,SAASj5C,EAAK+4C,QASrB,IAAI1yB,EAAAA,EAAAA,GAAc2yB,GAKnB3rC,EAAQ4rC,SAASj5C,GAAKoN,EAAAA,GAAAA,IAAY2rC,EAAW,CAAEtoC,MAAOpD,UAErD,GAAI2rC,IAAcD,EAMnB,GAAI1rC,EAAQ6rC,SAASl5C,GAAM,CACvB,MAAMm5C,EAAgB9rC,EAAQ2H,SAAShV,IACP,IAA5Bm5C,EAAcruB,UACdquB,EAAc58B,KAAKw8B,GAEbI,EAAcC,aACpBD,EAAc1nC,IAAIsnC,EAE1B,KACK,CACD,MAAMV,EAAchrC,EAAQwrC,eAAe74C,GAC3CqN,EAAQ4rC,SAASj5C,GAAKoN,EAAAA,GAAAA,SAA4BlT,IAAhBm+C,EAA4BA,EAAcU,EAAW,CAAEtoC,MAAOpD,IACpG,CAER,CAEA,IAAK,MAAMrN,KAAOi0B,OACI/5B,IAAdwH,EAAK1B,IACLqN,EAAQgsC,YAAYr5C,GAE5B,OAAO0B,CACX,CFgQgC43C,CAA4Bp+C,KAAMA,KAAKyvB,4BAA4B5M,EAAO7iB,KAAK0vB,UAAW1vB,MAAOA,KAAK67C,kBAC1H77C,KAAKq+C,wBACLr+C,KAAKq+C,wBAEb,CACAtnC,QAAAA,GACI,OAAO/W,KAAK6iB,KAChB,CAIAy7B,UAAAA,CAAWj/C,GACP,OAAOW,KAAK6iB,MAAMiD,SAAW9lB,KAAK6iB,MAAMiD,SAASzmB,QAAQL,CAC7D,CAIApB,oBAAAA,GACI,OAAOoC,KAAK6iB,MAAMtK,UACtB,CACAwrB,qBAAAA,GACI,OAAO/jC,KAAK6iB,MAAMhB,kBACtB,CACA08B,qBAAAA,GACI,OAAOv+C,KAAK6lB,cACN7lB,KACAA,KAAKgjB,OACDhjB,KAAKgjB,OAAOu7B,6BACZv/C,CACd,CACAy6B,iBAAAA,GACI,GAD2B/qB,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,IAAAA,UAAA,GAEvB,OAAO1O,KAAKgjB,OAAShjB,KAAKgjB,OAAOyW,yBAAsBz6B,EAE3D,IAAKgB,KAAK4lB,sBAAuB,CAC7B,MAAMI,EAAUhmB,KAAKgjB,QACfhjB,KAAKgjB,OAAOyW,qBACZ,CAAC,EAIP,YAH2Bz6B,IAAvBgB,KAAK6iB,MAAMW,UACXwC,EAAQxC,QAAUxjB,KAAK6iB,MAAMW,SAE1BwC,CACX,CACA,MAAMA,EAAU,CAAC,EACjB,IAAK,IAAIzkB,EAAI,EAAGA,EAAIg6C,GAAiBh6C,IAAK,CACtC,MAAMlC,EAAOsmB,EAAapkB,GACpB8kB,EAAOrmB,KAAK6iB,MAAMxjB,IACpBmmB,EAAea,KAAkB,IAATA,KACxBL,EAAQ3mB,GAAQgnB,EAExB,CACA,OAAOL,CACX,CAIAw2B,eAAAA,CAAgBhhC,GACZ,MAAMgjC,EAAqBx+C,KAAKu+C,wBAChC,GAAIC,EAGA,OAFAA,EAAmB1jC,iBACf0jC,EAAmB1jC,gBAAgB6C,IAAInC,GACpC,IAAMgjC,EAAmB1jC,gBAAgB8C,OAAOpC,EAE/D,CAIAuiC,QAAAA,CAASj5C,EAAKtG,GAEV,MAAMy/C,EAAgBj+C,KAAK2N,OAAOsL,IAAInU,GAClCtG,IAAUy/C,IACNA,GACAj+C,KAAKm+C,YAAYr5C,GACrB9E,KAAKy8C,kBAAkB33C,EAAKtG,GAC5BwB,KAAK2N,OAAO4I,IAAIzR,EAAKtG,GACrBwB,KAAK+Z,aAAajV,GAAOtG,EAAMya,MAEvC,CAIAklC,WAAAA,CAAYr5C,GACR9E,KAAK2N,OAAOiQ,OAAO9Y,GACnB,MAAM25C,EAAcz+C,KAAK47C,mBAAmB3iC,IAAInU,GAC5C25C,IACAA,IACAz+C,KAAK47C,mBAAmBh+B,OAAO9Y,WAE5B9E,KAAK+Z,aAAajV,GACzB9E,KAAK0+C,2BAA2B55C,EAAK9E,KAAKsvB,YAC9C,CAIA0uB,QAAAA,CAASl5C,GACL,OAAO9E,KAAK2N,OAAOzP,IAAI4G,EAC3B,CACAgV,QAAAA,CAAShV,EAAK65C,GACV,GAAI3+C,KAAK6iB,MAAMlV,QAAU3N,KAAK6iB,MAAMlV,OAAO7I,GACvC,OAAO9E,KAAK6iB,MAAMlV,OAAO7I,GAE7B,IAAItG,EAAQwB,KAAK2N,OAAOsL,IAAInU,GAK5B,YAJc9F,IAAVR,QAAwCQ,IAAjB2/C,IACvBngD,GAAQ0T,EAAAA,GAAAA,IAA6B,OAAjBysC,OAAwB3/C,EAAY2/C,EAAc,CAAEppC,MAAOvV,OAC/EA,KAAK+9C,SAASj5C,EAAKtG,IAEhBA,CACX,CAMAogD,SAAAA,CAAU95C,EAAKI,GACX,IAAI4I,EACJ,IAAItP,OAAmCQ,IAA3BgB,KAAK+Z,aAAajV,IAAuB9E,KAAKsB,QAEI,QAAvDwM,EAAK9N,KAAK6+C,uBAAuB7+C,KAAK6iB,MAAO/d,UAAyB,IAAPgJ,EAAgBA,EAAK9N,KAAK8+C,sBAAsB9+C,KAAKsB,QAASwD,EAAK9E,KAAKD,SADxIC,KAAK+Z,aAAajV,GDhaTqC,MC6af,YAXcnI,IAAVR,GAAiC,OAAVA,IACF,kBAAVA,KACNmhB,EAAAA,GAAAA,GAAkBnhB,KAAUiiB,EAAAA,GAAAA,GAAkBjiB,IAE/CA,EAAQohB,WAAWphB,IDtaZ2I,ECwaa3I,GDxaP48C,GAAW/vC,MAAK0zC,EAAAA,GAAAA,GAAc53C,KCwab3H,GAAAA,EAAQC,KAAKyF,KAC3C1G,GAAQoiB,EAAAA,GAAAA,GAAkB9b,EAAKI,KAEnClF,KAAKg/C,cAAcl6C,GAAKqmB,EAAAA,EAAAA,GAAc3sB,GAASA,EAAMya,MAAQza,KAE1D2sB,EAAAA,EAAAA,GAAc3sB,GAASA,EAAMya,MAAQza,CAChD,CAKAwgD,aAAAA,CAAcl6C,EAAKtG,GACfwB,KAAKo8C,WAAWt3C,GAAOtG,CAC3B,CAKAs8B,aAAAA,CAAch2B,GACV,IAAIgJ,EACJ,MAAM,QAAE0V,GAAYxjB,KAAK6iB,MACzB,IAAIo8B,EACJ,GAAuB,kBAAZz7B,GAA2C,kBAAZA,EAAsB,CAC5D,MAAMhJ,GAAU6W,EAAAA,GAAAA,GAAwBrxB,KAAK6iB,MAAOW,EAAyC,QAA/B1V,EAAK9N,KAAK0a,uBAAoC,IAAP5M,OAAgB,EAASA,EAAG6M,QAC7HH,IACAykC,EAAmBzkC,EAAQ1V,GAEnC,CAIA,GAAI0e,QAAgCxkB,IAArBigD,EACX,OAAOA,EAMX,MAAM/5C,EAASlF,KAAK6+C,uBAAuB7+C,KAAK6iB,MAAO/d,GACvD,YAAe9F,IAAXkG,IAAyBimB,EAAAA,EAAAA,GAAcjmB,QAMRlG,IAA5BgB,KAAKq8C,cAAcv3C,SACD9F,IAArBigD,OACEjgD,EACAgB,KAAKo8C,WAAWt3C,GARXI,CASf,CACAg4C,EAAAA,CAAG/qB,EAAWjzB,GAIV,OAHKc,KAAK87C,OAAO3pB,KACbnyB,KAAK87C,OAAO3pB,GAAa,IAAIwe,GAAAA,GAE1B3wC,KAAK87C,OAAO3pB,GAAWxU,IAAIze,EACtC,CACAuc,MAAAA,CAAO0W,GACH,GAAInyB,KAAK87C,OAAO3pB,GAAY,SAAA2e,EAAApiC,UAAA1Q,OADX+yC,EAAI,IAAAzxC,MAAAwxC,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,EAAA,GAAAtiC,UAAAsiC,GAEjBhxC,KAAK87C,OAAO3pB,GAAW1W,UAAUs1B,EACrC,CACJ,E,eG7eJ,MAAMmO,WAAyB1D,GAC3B77C,WAAAA,GACI4R,SAAS7C,WACT1O,KAAKqS,iBAAmBiD,GAAAA,CAC5B,CACAgoC,wBAAAA,CAAyB35C,EAAGC,GAMxB,OAAsC,EAA/BD,EAAEw7C,wBAAwBv7C,GAAS,GAAK,CACnD,CACAi7C,sBAAAA,CAAuBh8B,EAAO/d,GAC1B,OAAO+d,EAAMoH,MACPpH,EAAMoH,MAAMnlB,QACZ9F,CACV,CACA0/C,0BAAAA,CAA2B55C,EAAGhH,GAAmB,IAAjB,KAAEosB,EAAI,MAAED,GAAOnsB,SACpCosB,EAAKplB,UACLmlB,EAAMnlB,EACjB,ECXJ,MAAMs6C,WAA0BF,GAC5Bv/C,WAAAA,GACI4R,SAAS7C,WACT1O,KAAK3C,KAAO,OACZ2C,KAAK8vB,iBAAkB,EACvB9vB,KAAKm8C,eAAiBntB,EAC1B,CACA8vB,qBAAAA,CAAsBz5B,EAAUvgB,GAC5B,GAAI7G,EAAAA,EAAeC,IAAI4G,GAAM,CACzB,MAAMu6C,GAAcC,EAAAA,GAAAA,GAAoBx6C,GACxC,OAAOu6C,GAAcA,EAAY7yB,SAAe,CACpD,CACK,CACD,MAAM+yB,GAhBQptC,EAgByBkT,EAfxCpO,OAAOsI,iBAAiBpN,IAgBjB3T,IAAS8rB,EAAAA,EAAAA,GAAkBxlB,GAC3By6C,EAAc//B,iBAAiB1a,GAC/By6C,EAAcz6C,KAAS,EAC7B,MAAwB,kBAAVtG,EAAqBA,EAAMkhB,OAASlhB,CACtD,CArBR,IAA0B2T,CAsBtB,CACAurC,0BAAAA,CAA2Br4B,EAAQvnB,GAA0B,IAAxB,mBAAE+jB,GAAoB/jB,EACvD,OAAOqjB,GAAmBkE,EAAUxD,EACxC,CACA47B,KAAAA,CAAMnuB,EAAavV,EAAc8I,GAC7BkH,EAAgBuF,EAAavV,EAAc8I,EAAMmH,kBACrD,CACAyF,2BAAAA,CAA4B5M,EAAO6M,EAAWnW,GAC1C,OAAOkW,GAA4B5M,EAAO6M,EAAWnW,EACzD,CACA8kC,sBAAAA,GACQr+C,KAAKw/C,oBACLx/C,KAAKw/C,2BACEx/C,KAAKw/C,mBAEhB,MAAM,SAAEj3B,GAAavoB,KAAK6iB,OACtBsI,EAAAA,EAAAA,GAAc5C,KACdvoB,KAAKw/C,kBAAoBj3B,EAAS20B,GAAG,UAAWz1C,IACxCzH,KAAKsB,UACLtB,KAAKsB,QAAQm+C,YAAc,GAAGh4C,IAAQ,IAGtD,EC3CJ,MAAMi4C,WAAyBR,GAC3Bv/C,WAAAA,GACI4R,SAAS7C,WACT1O,KAAK3C,KAAO,MACZ2C,KAAK+sB,UAAW,EAChB/sB,KAAK09C,2BAA6B7d,EACtC,CACAgf,sBAAAA,CAAuBh8B,EAAO/d,GAC1B,OAAO+d,EAAM/d,EACjB,CACAg6C,qBAAAA,CAAsBz5B,EAAUvgB,GAC5B,GAAI7G,EAAAA,EAAeC,IAAI4G,GAAM,CACzB,MAAMu6C,GAAcC,EAAAA,GAAAA,GAAoBx6C,GACxC,OAAOu6C,GAAcA,EAAY7yB,SAAe,CACpD,CAEA,OADA1nB,EAAOsqB,GAAoBlxB,IAAI4G,GAA0BA,GAAnBoX,EAAAA,GAAAA,GAAYpX,GAC3CugB,EAASs6B,aAAa76C,EACjC,CACA2qB,2BAAAA,CAA4B5M,EAAO6M,EAAWnW,GAC1C,OAAOkW,GAA4B5M,EAAO6M,EAAWnW,EACzD,CACAkkC,KAAAA,CAAMnuB,EAAavV,EAAc8I,GAC7BiK,GAAcwC,EAAavV,EAAc/Z,KAAK+sB,SAAUlK,EAAMmH,kBAClE,CACAmyB,cAAAA,CAAe92B,EAAUiK,EAAaL,EAAWvL,GAC7C2L,GAAUhK,EAAUiK,EAAaL,EAAWvL,EAChD,CACA4B,KAAAA,CAAMD,GACFrlB,KAAK+sB,SAAWA,GAAS1H,EAAS2M,SAClCzgB,MAAM+T,MAAMD,EAChB,ECpCJ,MAAMu6B,GAAyBA,CAACj9B,EAAW5iB,IAChCopB,EAAexG,GAChB,IAAI+8B,GAAiB3/C,GACrB,IAAIq/C,GAAkBr/C,EAAS,CAC7BklB,gBAAiBtC,IAAckM,EAAAA,WCArCxH,GAAoB,IACnBjQ,MACA2e,MACAjS,MCTQ,CACXD,OAAQ,CACJsE,eAAgBgyB,GAChBvyB,cAAaA,MDefi4B,GAAuBj3B,GAAkB,CAACjG,EAAW6N,IEhB3D,SAA+B7N,EAAS7kB,EAAkCupB,EAAmBvE,GAAqB,IAAxE,mBAAE0L,GAAqB,GAAO1wB,EAIpE,MAAO,IAHYqrB,EAAexG,GAC5BkP,GACAI,GAGF5K,oBACAC,UAAWiH,GAAgBC,GAC3B1L,sBACAH,YAER,CFKsEm9B,CAAsBn9B,EAAW6N,EAAQnJ,GAAmBu4B,K,kCGlBlI,MAAM1jC,EAAe6jC,GAAQA,EAAIC,QAAQ,mBAAoB,SAAS9xB,a,0CCHtE,MAAM+xB,EAAyBjhC,GAAWla,GAAuB,kBAARA,GAAoBA,EAAI3G,WAAW6gB,GACtFsL,EAAoB21B,EAAsB,MAC1CC,EAAwBD,EAAsB,UAC9CtzC,EAAsBnO,KACA0hD,EAAsB1hD,IAIvC2hD,EAAuB1gD,KAAKjB,EAAM4hD,MAAM,MAAM,GAAG1gC,QAEtDygC,EAAyB,qF,gGCN/B,MAAMjgC,EAAiB,IAAI/iB,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,IACA,aACA,eAEEmjB,EAAiBnZ,GAAMA,IAAMuG,EAAAA,IAAUvG,IAAMulB,EAAAA,GAC7C2zB,EAAmBA,CAACC,EAAQC,IAAQ3gC,WAAW0gC,EAAOF,MAAM,MAAMG,IAClEC,EAAyBA,CAACC,EAAMC,IAAS,CAACC,EAAK7iD,KAAoB,IAAlB,UAAEyO,GAAWzO,EAChE,GAAkB,SAAdyO,IAAyBA,EACzB,OAAO,EACX,MAAMq0C,EAAWr0C,EAAU2S,MAAM,uBACjC,GAAI0hC,EACA,OAAOP,EAAiBO,EAAS,GAAIF,GAEpC,CACD,MAAMJ,EAAS/zC,EAAU2S,MAAM,qBAC/B,OAAIohC,EACOD,EAAiBC,EAAO,GAAIG,GAG5B,CAEf,GAEEI,EAAgB,IAAI1jD,IAAI,CAAC,IAAK,IAAK,MACnC2jD,EAAgCh3B,EAAAA,EAAmBhrB,QAAQgG,IAAS+7C,EAAc3iD,IAAI4G,KAC5F,SAASi8C,EAAgCxnC,GACrC,MAAMiI,EAAoB,GAQ1B,OAPAs/B,EAA8B5oC,SAASpT,IACnC,MAAMtG,EAAQ+a,EAAcO,SAAShV,QACvB9F,IAAVR,IACAgjB,EAAkBtS,KAAK,CAACpK,EAAKtG,EAAMya,QACnCza,EAAM+X,IAAIzR,EAAI3G,WAAW,SAAW,EAAI,GAC5C,IAEGqjB,CACX,CACA,MAAMN,EAAmB,CAErBuM,MAAOA,CAAAhF,EAAAu4B,KAAA,IAAC,EAAEr4C,GAAG8f,GAAE,YAAEw4B,EAAc,IAAG,aAAEC,EAAe,KAAKF,EAAA,OAAKr4C,EAAEnG,IAAMmG,EAAEvC,IAAMwZ,WAAWqhC,GAAerhC,WAAWshC,EAAa,EAC/HxzB,OAAQA,CAAAyzB,EAAAC,KAAA,IAAC,EAAE13B,GAAGy3B,GAAE,WAAEE,EAAa,IAAG,cAAEC,EAAgB,KAAKF,EAAA,OAAK13B,EAAElnB,IAAMknB,EAAEtjB,IAAMwZ,WAAWyhC,GAAczhC,WAAW0hC,EAAc,EAChIthB,IAAKA,CAAC2gB,EAAKY,KAAA,IAAE,IAAEvhB,GAAKuhB,EAAA,OAAK3hC,WAAWogB,EAAI,EACxCC,KAAMA,CAAC0gB,EAAKa,KAAA,IAAE,KAAEvhB,GAAMuhB,EAAA,OAAK5hC,WAAWqgB,EAAK,EAC3CE,OAAQA,CAAAshB,EAAAC,KAAA,IAAC,EAAEh4B,GAAG+3B,GAAE,IAAEzhB,GAAK0hB,EAAA,OAAK9hC,WAAWogB,IAAQtW,EAAElnB,IAAMknB,EAAEtjB,IAAI,EAC7D85B,MAAOA,CAAAyhB,EAAAC,KAAA,IAAC,EAAEj5C,GAAGg5C,GAAE,KAAE1hB,GAAM2hB,EAAA,OAAKhiC,WAAWqgB,IAASt3B,EAAEnG,IAAMmG,EAAEvC,IAAI,EAE9DuC,EAAG63C,EAAuB,EAAG,IAC7B92B,EAAG82B,EAAuB,EAAG,KAGjCt/B,EAAiB2gC,WAAa3gC,EAAiBvY,EAC/CuY,EAAiB4gC,WAAa5gC,EAAiBwI,C,oEC1D/C,SAAS9I,EAAkB9b,EAAKtG,GAC5B,IAAIujD,GAAmBzC,EAAAA,EAAAA,GAAoBx6C,GAI3C,OAHIi9C,IAAqBjjD,EAAAA,IACrBijD,EAAmBviD,EAAAA,GAEhBuiD,EAAiBnhC,kBAClBmhC,EAAiBnhC,kBAAkBpiB,QACnCQ,CACV,C,0DCLA,MAAMgjD,EAAoB,I,OACnBx3B,EAEHpf,MAAK,IACL62C,gBAAiB72C,EAAAA,EACjB82C,aAAc92C,EAAAA,EACd4K,KAAM5K,EAAAA,EACN+2C,OAAQ/2C,EAAAA,EAERg3C,YAAah3C,EAAAA,EACbi3C,eAAgBj3C,EAAAA,EAChBk3C,iBAAkBl3C,EAAAA,EAClBm3C,kBAAmBn3C,EAAAA,EACnBo3C,gBAAiBp3C,EAAAA,EACjBtM,OAAM,IACN2jD,aAAc3jD,EAAAA,GAKZwgD,EAAuBx6C,GAAQk9C,EAAkBl9C,E,4ECxBvD,MCKMu2C,EAAsB,CAAC3tC,EAAAA,GAAQgf,EAAAA,GAAIrb,EAAAA,GAASqxC,EAAAA,GAASC,EAAAA,GAAIC,EAAAA,GDLlD,CACTnjD,KAAO0H,GAAY,SAANA,EACbqE,MAAQrE,GAAMA,ICOZiZ,EAA0BjZ,GAAMk0C,EAAoBhwC,MAAK0zC,EAAAA,EAAAA,GAAc53C,G,yDCV7E,MAAM07C,EAAM,IACLn1C,EAAAA,GACHnB,UAAWnO,KAAK4N,OCAdwe,EAAmB,CAErBs4B,YAAap2B,EAAAA,GACbq2B,eAAgBr2B,EAAAA,GAChBs2B,iBAAkBt2B,EAAAA,GAClBu2B,kBAAmBv2B,EAAAA,GACnBw2B,gBAAiBx2B,EAAAA,GACjB6c,aAAc7c,EAAAA,GACdy2B,OAAQz2B,EAAAA,GACR+c,oBAAqB/c,EAAAA,GACrBgd,qBAAsBhd,EAAAA,GACtBkd,wBAAyBld,EAAAA,GACzBid,uBAAwBjd,EAAAA,GAExBe,MAAOf,EAAAA,GACP02B,SAAU12B,EAAAA,GACVgB,OAAQhB,EAAAA,GACR22B,UAAW32B,EAAAA,GACX3R,KAAM2R,EAAAA,GACNsT,IAAKtT,EAAAA,GACLwT,MAAOxT,EAAAA,GACPyT,OAAQzT,EAAAA,GACRuT,KAAMvT,EAAAA,GAEN42B,QAAS52B,EAAAA,GACT20B,WAAY30B,EAAAA,GACZw0B,aAAcx0B,EAAAA,GACd40B,cAAe50B,EAAAA,GACfu0B,YAAav0B,EAAAA,GACb0J,OAAQ1J,EAAAA,GACR62B,UAAW72B,EAAAA,GACX82B,YAAa92B,EAAAA,GACb+2B,aAAc/2B,EAAAA,GACdg3B,WAAYh3B,EAAAA,GAEZ+T,OAAQiiB,EAAAA,GACRhiB,QAASgiB,EAAAA,GACT/hB,QAAS+hB,EAAAA,GACT3K,QAAS2K,EAAAA,GACT90B,MAAK,KACL0S,OAAQ1S,EAAAA,GACR2S,OAAQ3S,EAAAA,GACR+1B,OAAQ/1B,EAAAA,GACRg2B,KAAMlB,EAAAA,GACN9hB,MAAO8hB,EAAAA,GACP7hB,MAAO6hB,EAAAA,GACPzmB,SAAUvP,EAAAA,GACVm1B,WAAYn1B,EAAAA,GACZo1B,WAAYp1B,EAAAA,GACZm3B,WAAYn3B,EAAAA,GACZ/jB,EAAG+jB,EAAAA,GACHhD,EAAGgD,EAAAA,GACH/C,EAAG+C,EAAAA,GACHo3B,YAAap3B,EAAAA,GACb9C,qBAAsB8C,EAAAA,GACtBqqB,QAASnrC,EAAAA,GACTif,QAASk5B,EAAAA,GACTj5B,QAASi5B,EAAAA,GACTh5B,QAAS2B,EAAAA,GAETs3B,OAAQnB,EACRoB,oBAAqBv3B,EAAAA,GACrBw3B,oBAAqBx3B,EAAAA,GAErBy3B,YAAav4C,EAAAA,GACbw4C,cAAex4C,EAAAA,GACfy4C,WAAYxB,E,kCCnEhB,MAAM9D,EAAiB53C,GAAO9J,GAASA,EAAKoC,KAAK0H,E,0CCAjD,MAAM2iB,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKE7rB,EAAiB,IAAId,IAAI2sB,E,kECtB/B,MAAMw6B,EAAY,IAAInnD,IACtB,IAAIgX,GAAc,EACdowC,GAAsB,EAC1B,SAASC,IACL,GAAID,EAAqB,CACrB,MAAME,EAAqBnlD,MAAMqL,KAAK25C,GAAWxlD,QAAQgT,GAAaA,EAASyO,mBACzEmkC,EAAoB,IAAIvnD,IAAIsnD,EAAmBv3C,KAAK4E,GAAaA,EAASK,WAC1EwyC,EAAsB,IAAI37B,IAKhC07B,EAAkBxsC,SAAS/F,IACvB,MAAMqP,GAAoBu/B,EAAAA,EAAAA,IAAgC5uC,GACrDqP,EAAkBxjB,SAEvB2mD,EAAoBpuC,IAAIpE,EAASqP,GACjCrP,EAAQgM,SAAQ,IAGpBsmC,EAAmBvsC,SAASpG,GAAaA,EAASgP,wBAElD4jC,EAAkBxsC,SAAS/F,IACvBA,EAAQgM,SACR,MAAMymC,EAAUD,EAAoB1rC,IAAI9G,GACpCyyC,GACAA,EAAQ1sC,SAAQpa,IAAkB,IAAhBgH,EAAKtG,GAAMV,EACzB,IAAIgQ,EAC6B,QAAhCA,EAAKqE,EAAQ2H,SAAShV,UAAyB,IAAPgJ,GAAyBA,EAAGyI,IAAI/X,EAAM,GAEvF,IAGJimD,EAAmBvsC,SAASpG,GAAaA,EAASwP,oBAElDmjC,EAAmBvsC,SAASpG,SACU9S,IAA9B8S,EAASiP,kBACT9J,OAAO4tC,SAAS,EAAG/yC,EAASiP,iBAChC,GAER,CACAwjC,GAAsB,EACtBpwC,GAAc,EACdmwC,EAAUpsC,SAASpG,GAAaA,EAASwC,aACzCgwC,EAAUxmC,OACd,CACA,SAASgnC,IACLR,EAAUpsC,SAASpG,IACfA,EAASiO,gBACLjO,EAASyO,mBACTgkC,GAAsB,EAC1B,GAER,CACA,SAAS5jD,IACLmkD,IACAN,GACJ,CACA,MAAMnyC,EACF1S,WAAAA,CAAYmgB,EAAqBhf,EAAYzB,EAAM6S,EAAaC,GAA0B,IAAjB4yC,EAAOr2C,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,IAAAA,UAAA,GAK5E1O,KAAKglD,YAAa,EAMlBhlD,KAAK+kD,SAAU,EAKf/kD,KAAKugB,kBAAmB,EAKxBvgB,KAAKmU,aAAc,EACnBnU,KAAK8f,oBAAsB,IAAIA,GAC/B9f,KAAKc,WAAaA,EAClBd,KAAKX,KAAOA,EACZW,KAAKkS,YAAcA,EACnBlS,KAAKmS,QAAUA,EACfnS,KAAK+kD,QAAUA,CACnB,CACAxyC,eAAAA,GACIvS,KAAKmU,aAAc,EACfnU,KAAK+kD,SACLT,EAAU3mC,IAAI3d,MACTmU,IACDA,GAAc,EACdvD,EAAAA,GAAMoN,KAAK8mC,GACXl0C,EAAAA,GAAMqN,iBAAiBumC,MAI3BxkD,KAAK+f,gBACL/f,KAAKsU,WAEb,CACAyL,aAAAA,GACI,MAAM,oBAAED,EAAmB,KAAEzgB,EAAI,QAAE8S,EAAO,YAAED,GAAgBlS,KAK5D,IAAK,IAAIuB,EAAI,EAAGA,EAAIue,EAAoB9hB,OAAQuD,IAC5C,GAA+B,OAA3Bue,EAAoBve,GAIpB,GAAU,IAANA,EAAS,CACT,MAAM0jD,EAA+B,OAAhB/yC,QAAwC,IAAhBA,OAAyB,EAASA,EAAY+G,MACrFva,EAAgBohB,EAAoBA,EAAoB9hB,OAAS,GACvE,QAAqBgB,IAAjBimD,EACAnlC,EAAoB,GAAKmlC,OAExB,GAAI9yC,GAAW9S,EAAM,CACtB,MAAM6lD,EAAc/yC,EAAQysC,UAAUv/C,EAAMX,QACxBM,IAAhBkmD,GAA6C,OAAhBA,IAC7BplC,EAAoB,GAAKolC,EAEjC,MAC+BlmD,IAA3B8gB,EAAoB,KACpBA,EAAoB,GAAKphB,GAEzBwT,QAAgClT,IAAjBimD,GACf/yC,EAAYqE,IAAIuJ,EAAoB,GAE5C,MAEIA,EAAoBve,GAAKue,EAAoBve,EAAI,EAIjE,CACA4jD,gBAAAA,GAAqB,CACrBrkC,mBAAAA,GAAwB,CACxBskC,eAAAA,GAAoB,CACpB9jC,eAAAA,GAAoB,CACpBhN,QAAAA,GACItU,KAAKglD,YAAa,EAClBhlD,KAAKc,WAAWd,KAAK8f,oBAAqB9f,KAAKtB,eAC/C4lD,EAAU1mC,OAAO5d,KACrB,CACA+R,MAAAA,GACS/R,KAAKglD,aACNhlD,KAAKmU,aAAc,EACnBmwC,EAAU1mC,OAAO5d,MAEzB,CACAoU,MAAAA,GACSpU,KAAKglD,YACNhlD,KAAKuS,iBACb,E,+CC9JJ,SAASkI,EAAelB,EAAetP,EAAY0Q,GAC/C,MAAMkI,EAAQtJ,EAAcxC,WAC5B,OAAOsa,EAAAA,EAAAA,GAAwBxO,EAAO5Y,OAAuBjL,IAAX2b,EAAuBA,EAASkI,EAAMlI,OAAQpB,EACpG,C,iBCLA,SAAS8rC,EAAc9rC,GACnB,MAAMpU,EAAQ,CAAC,CAAC,EAAG,CAAC,GAKpB,OAJkB,OAAlBoU,QAA4C,IAAlBA,GAAoCA,EAAc5L,OAAOuK,SAAQ,CAAC1Z,EAAOsG,KAC/FK,EAAM,GAAGL,GAAOtG,EAAMya,MACtB9T,EAAM,GAAGL,GAAOtG,EAAMoa,aAAa,IAEhCzT,CACX,CACA,SAASksB,EAAwBxO,EAAO5Y,EAAY0Q,EAAQpB,GAIxD,GAA0B,oBAAftP,EAA2B,CAClC,MAAO3I,EAAST,GAAYwkD,EAAc9rC,GAC1CtP,EAAaA,OAAsBjL,IAAX2b,EAAuBA,EAASkI,EAAMlI,OAAQrZ,EAAST,EACnF,CAaA,GAR0B,kBAAfoJ,IACPA,EAAa4Y,EAAMiD,UAAYjD,EAAMiD,SAAS7b,IAOxB,oBAAfA,EAA2B,CAClC,MAAO3I,EAAST,GAAYwkD,EAAc9rC,GAC1CtP,EAAaA,OAAsBjL,IAAX2b,EAAuBA,EAASkI,EAAMlI,OAAQrZ,EAAST,EACnF,CACA,OAAOoJ,CACX,C,mFCzBA,SAASq7C,EAAe/rC,EAAezU,EAAKtG,GACpC+a,EAAcykC,SAASl5C,GACvByU,EAAcO,SAAShV,GAAKyR,IAAI/X,GAGhC+a,EAAcwkC,SAASj5C,GAAKoN,EAAAA,EAAAA,IAAY1T,GAEhD,CACA,SAAS8b,EAAUf,EAAetP,GAC9B,MAAMxJ,GAAWga,EAAAA,EAAAA,GAAelB,EAAetP,GAC/C,IAAI,cAAEyP,EAAgB,CAAC,EAAC,WAAEnB,EAAa,CAAC,KAAMrT,GAAWzE,GAAY,CAAC,EACtEyE,EAAS,IAAKA,KAAWwU,GACzB,IAAK,MAAM5U,KAAOI,EAAQ,CAEtBogD,EAAe/rC,EAAezU,GADhBygD,EAAAA,EAAAA,GAA6BrgD,EAAOJ,IAEtD,CACJ,C,kCCxBA,MAAMiU,EAAqB,CACvBC,gBAAgB,EAChBsF,iBAAiB,E,iBCFrB,SAAS4S,EAAc1hB,EAAKg2C,IACG,IAAvBh2C,EAAI6Z,QAAQm8B,IACZh2C,EAAIN,KAAKs2C,EACjB,CACA,SAASvZ,EAAWz8B,EAAKg2C,GACrB,MAAMzmD,EAAQyQ,EAAI6Z,QAAQm8B,GACtBzmD,GAAS,GACTyQ,EAAIc,OAAOvR,EAAO,EAC1B,C,4DCRA,MAAMuE,EAAQA,CAAC8C,EAAK5D,EAAK2E,IACjBA,EAAI3E,EACGA,EACP2E,EAAIf,EACGA,EACJe,C,wDCHX,IAAI9F,EAAUmH,EAAAA,EACV0B,EAAY1B,EAAAA,C,kCCHhB,MAAMuf,EAA8B,qBAAX9Q,M,kCCGzB,MAAM0I,EAAqBxY,GAAM,+BAA+B1H,KAAK0H,E,kCCArE,MAAMsZ,EAAqBtZ,GAAM,cAAc1H,KAAK0H,E,kCCkBpD,MAAMmF,EAAYA,CAAC3B,EAAMC,EAAI0E,IAClB3E,GAAQC,EAAKD,GAAQ2E,C,kCCtBhC,MAAM9G,EAAQi9C,GAAQA,C,iCCOtB,MAAMC,EAAmBA,CAAC/hD,EAAGC,IAAOuD,GAAMvD,EAAED,EAAEwD,IACxC0G,EAAO,mBAAAijC,EAAApiC,UAAA1Q,OAAI2nD,EAAY,IAAArmD,MAAAwxC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAZ2U,EAAY3U,GAAAtiC,UAAAsiC,GAAA,OAAK2U,EAAa5oC,OAAO2oC,EAAiB,C,kCCIvE,MAAMp2C,EAAWA,CAAC3E,EAAMC,EAAIpM,KACxB,MAAMonD,EAAmBh7C,EAAKD,EAC9B,OAA4B,IAArBi7C,EAAyB,GAAKpnD,EAAQmM,GAAQi7C,CAAgB,C,wDCZzE,MAAMv1B,EAAiBlpB,GACZmE,QAAQnE,GAAkB,kBAANA,GAAkBA,EAAEkH,KAAOlH,EAAEmpB,SAEtDi1B,EAAgCp+C,IAE3BgV,EAAAA,EAAAA,GAAkBhV,GAAKA,EAAEA,EAAEnJ,OAAS,IAAM,EAAImJ,C,+CCLzD,MAAMwpC,EACFhxC,WAAAA,GACIK,KAAK6lD,cAAgB,EACzB,CACAloC,GAAAA,CAAIyU,GAEA,OADAlB,EAAAA,EAAAA,IAAclxB,KAAK6lD,cAAezzB,GAC3B,KAAM6Z,EAAAA,EAAAA,IAAWjsC,KAAK6lD,cAAezzB,EAChD,CACA3W,MAAAA,CAAO9X,EAAGC,EAAGE,GACT,MAAMgiD,EAAmB9lD,KAAK6lD,cAAc7nD,OAC5C,GAAK8nD,EAEL,GAAyB,IAArBA,EAIA9lD,KAAK6lD,cAAc,GAAGliD,EAAGC,EAAGE,QAG5B,IAAK,IAAIvC,EAAI,EAAGA,EAAIukD,EAAkBvkD,IAAK,CAKvC,MAAM6wB,EAAUpyB,KAAK6lD,cAActkD,GACnC6wB,GAAWA,EAAQzuB,EAAGC,EAAGE,EAC7B,CAER,CACAiiD,OAAAA,GACI,OAAO/lD,KAAK6lD,cAAc7nD,MAC9B,CACA8f,KAAAA,GACI9d,KAAK6lD,cAAc7nD,OAAS,CAChC,E,0CC9BJ,MAAMoF,EAAyB4iD,GAAsB,IAAVA,EACrCziD,EAAyB0iD,GAAiBA,EAAe,G,gDCE/D,SAASn1B,EAAYo1B,GACjB,MAAM3jC,GAAMc,EAAAA,EAAAA,QAAO,MAInB,OAHoB,OAAhBd,EAAIjhB,UACJihB,EAAIjhB,QAAU4kD,KAEX3jC,EAAIjhB,OACf,C,+CCZA,MAAMsjB,E,QAA4BmD,EAAYo+B,EAAAA,gBAAkBphC,EAAAA,S,iBCGhE,SAAStiB,EAAkB5B,EAAUulD,GACjC,OAAOA,EAAgBvlD,GAAY,IAAOulD,GAAiB,CAC/D,C,uGCEA,MAIMC,EAAsB,CACxB/kD,aAAStC,GAOb,MAAMsnD,EASF3mD,WAAAA,CAAYumD,GAAoB,IAAAK,EAAA,SAAdxmD,EAAO2O,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG,CAAC,EAKzB1O,KAAKwmD,QAAU,UAQfxmD,KAAKymD,iBAAmB,KAIxBzmD,KAAK87C,OAAS,CAAC,EACf97C,KAAK0mD,gBAAkB,SAACv/C,GAAqB,IAAlBgX,IAAMzP,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,KAAAA,UAAA,GAC7B,MAAMgD,EAActR,EAAAA,EAAKC,MAMrBkmD,EAAKI,YAAcj1C,GACnB60C,EAAKK,oBAETL,EAAKxtB,KAAOwtB,EAAKjlD,QACjBilD,EAAKM,WAAW1/C,GAEZo/C,EAAKjlD,UAAYilD,EAAKxtB,MAAQwtB,EAAKzK,OAAOgL,QAC1CP,EAAKzK,OAAOgL,OAAOrrC,OAAO8qC,EAAKjlD,SAG/B6c,GAAUooC,EAAKzK,OAAOiL,eACtBR,EAAKzK,OAAOiL,cAActrC,OAAO8qC,EAAKjlD,QAE9C,EACAtB,KAAKk+C,aAAc,EACnBl+C,KAAK6mD,WAAWX,GAChBlmD,KAAKuV,MAAQxV,EAAQwV,KACzB,CACAsxC,UAAAA,CAAWvlD,GA/DE9C,MAgETwB,KAAKsB,QAAUA,EACftB,KAAK2mD,UAAYvmD,EAAAA,EAAKC,MACQ,OAA1BL,KAAKymD,uBAAyCznD,IAAZsC,IAClCtB,KAAKymD,kBAnEAjoD,EAmE2BwB,KAAKsB,SAlErCkD,MAAMob,WAAWphB,KAoEzB,CACAooD,iBAAAA,GAAiD,IAA/BI,EAAct4C,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,GAAAA,UAAA,GAAG1O,KAAKsB,QACpCtB,KAAKgnD,eAAiBA,EACtBhnD,KAAKinD,cAAgBjnD,KAAK2mD,SAC9B,CAyCAO,QAAAA,CAASC,GAIL,OAAOnnD,KAAKk9C,GAAG,SAAUiK,EAC7B,CACAjK,EAAAA,CAAG/qB,EAAWjzB,GACLc,KAAK87C,OAAO3pB,KACbnyB,KAAK87C,OAAO3pB,GAAa,IAAIwe,EAAAA,GAEjC,MAAM8N,EAAcz+C,KAAK87C,OAAO3pB,GAAWxU,IAAIze,GAC/C,MAAkB,WAAdizB,EACO,KACHssB,IAKA7tC,EAAAA,GAAMoN,MAAK,KACFhe,KAAK87C,OAAOgL,OAAOf,WACpB/lD,KAAK6Q,MACT,GACF,EAGH4tC,CACX,CACA2I,cAAAA,GACI,IAAK,MAAMC,KAAiBrnD,KAAK87C,OAC7B97C,KAAK87C,OAAOuL,GAAevpC,OAEnC,CAMAwpC,MAAAA,CAAOC,EAAeC,GAClBxnD,KAAKunD,cAAgBA,EACrBvnD,KAAKwnD,kBAAoBA,CAC7B,CAgBAjxC,GAAAA,CAAIpP,GAAkB,IAAfgX,IAAMzP,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,KAAAA,UAAA,GACJyP,GAAWne,KAAKunD,cAIjBvnD,KAAKunD,cAAcpgD,EAAGnH,KAAK0mD,iBAH3B1mD,KAAK0mD,gBAAgBv/C,EAAGgX,EAKhC,CACAvH,eAAAA,CAAgBmiB,EAAMz3B,EAASoC,GAC3B1D,KAAKuW,IAAIjV,GACTtB,KAAK+4B,UAAO/5B,EACZgB,KAAKgnD,eAAiBjuB,EACtB/4B,KAAKinD,cAAgBjnD,KAAK2mD,UAAYjjD,CAC1C,CAKA2d,IAAAA,CAAKla,GAAwB,IAArBsgD,IAAY/4C,UAAA1Q,OAAA,QAAAgB,IAAA0P,UAAA,KAAAA,UAAA,GAChB1O,KAAK0mD,gBAAgBv/C,GACrBnH,KAAK+4B,KAAO5xB,EACZnH,KAAKinD,cAAgBjnD,KAAKgnD,oBAAiBhoD,EAC3CyoD,GAAgBznD,KAAK6Q,OACjB7Q,KAAKwnD,mBACLxnD,KAAKwnD,mBACb,CAQAvuC,GAAAA,GAII,OAHIotC,EAAoB/kD,SACpB+kD,EAAoB/kD,QAAQ4N,KAAKlP,MAE9BA,KAAKsB,OAChB,CAIAomD,WAAAA,GACI,OAAO1nD,KAAK+4B,IAChB,CAQAngB,WAAAA,GACI,MAAMlH,EAActR,EAAAA,EAAKC,MACzB,IAAKL,KAAKymD,uBACkBznD,IAAxBgB,KAAKgnD,gBACLt1C,EAAc1R,KAAK2mD,UAnOJ,GAoOf,OAAO,EAEX,MAAMjjD,EAAQtF,KAAKgI,IAAIpG,KAAK2mD,UAAY3mD,KAAKinD,cAtO1B,IAwOnB,OAAOxkD,EAAAA,EAAAA,GAAkBmd,WAAW5f,KAAKsB,SACrCse,WAAW5f,KAAKgnD,gBAAiBtjD,EACzC,CAaAiN,KAAAA,CAAMqzB,GAEF,OADAhkC,KAAK6Q,OACE,IAAI3O,SAASH,IAChB/B,KAAKk+C,aAAc,EACnBl+C,KAAK4V,UAAYouB,EAAejiC,GAC5B/B,KAAK87C,OAAO6L,gBACZ3nD,KAAK87C,OAAO6L,eAAelsC,QAC/B,IACD3Z,MAAK,KACA9B,KAAK87C,OAAO8L,mBACZ5nD,KAAK87C,OAAO8L,kBAAkBnsC,SAElCzb,KAAK6nD,gBAAgB,GAE7B,CAMAh3C,IAAAA,GACQ7Q,KAAK4V,YACL5V,KAAK4V,UAAU/E,OACX7Q,KAAK87C,OAAOgM,iBACZ9nD,KAAK87C,OAAOgM,gBAAgBrsC,UAGpCzb,KAAK6nD,gBACT,CAMAE,WAAAA,GACI,QAAS/nD,KAAK4V,SAClB,CACAiyC,cAAAA,UACW7nD,KAAK4V,SAChB,CAUAoyC,OAAAA,GACIhoD,KAAKonD,iBACLpnD,KAAK6Q,OACD7Q,KAAKwnD,mBACLxnD,KAAKwnD,mBAEb,EAEJ,SAASt1C,EAAYg0C,EAAMnmD,GACvB,OAAO,IAAIumD,EAAYJ,EAAMnmD,EACjC,C,gDC3RA,MAAMiL,EAAM,CACRvL,MAAMwoD,E,QAAAA,GAAc,KACpBz8C,MAhCJ,SAAkBrE,GACd,IAAI+gD,EAAI,GACJ9jD,EAAI,GACJR,EAAI,GACJD,EAAI,GAmBR,OAjBIwD,EAAEnJ,OAAS,GACXkqD,EAAI/gD,EAAE+oB,UAAU,EAAG,GACnB9rB,EAAI+C,EAAE+oB,UAAU,EAAG,GACnBtsB,EAAIuD,EAAE+oB,UAAU,EAAG,GACnBvsB,EAAIwD,EAAE+oB,UAAU,EAAG,KAInBg4B,EAAI/gD,EAAE+oB,UAAU,EAAG,GACnB9rB,EAAI+C,EAAE+oB,UAAU,EAAG,GACnBtsB,EAAIuD,EAAE+oB,UAAU,EAAG,GACnBvsB,EAAIwD,EAAE+oB,UAAU,EAAG,GACnBg4B,GAAKA,EACL9jD,GAAKA,EACLR,GAAKA,EACLD,GAAKA,GAEF,CACHkI,IAAKs8C,SAASD,EAAG,IACjBp8C,MAAOq8C,SAAS/jD,EAAG,IACnB2H,KAAMo8C,SAASvkD,EAAG,IAClBgI,MAAOjI,EAAIwkD,SAASxkD,EAAG,IAAM,IAAM,EAE3C,EAII4I,UAAWtB,EAAAA,EAAKsB,U,6EC/BpB,MAAMrB,EAAO,CACTzL,MAAMwoD,EAAAA,EAAAA,GAAc,MAAO,OAC3Bz8C,OAAO48C,EAAAA,EAAAA,GAAW,MAAO,aAAc,aACvC77C,UAAWzO,IAAwD,IAAvD,IAAE2N,EAAG,WAAEC,EAAU,UAAEC,EAAWC,MAAOy8C,EAAU,GAAGvqD,EAC1D,MAAQ,QACJM,KAAK4N,MAAMP,GACX,KACA4F,EAAAA,GAAQ9E,WAAU+7C,EAAAA,EAAAA,IAAS58C,IAC3B,KACA2F,EAAAA,GAAQ9E,WAAU+7C,EAAAA,EAAAA,IAAS38C,IAC3B,MACA28C,EAAAA,EAAAA,IAAS18C,EAAAA,GAAMW,UAAU87C,IACzB,GAAG,E,6ECZf,MAAMj9C,EAAQ,CACV3L,KAAO0H,GAAM8D,EAAAA,EAAKxL,KAAK0H,IAAM6D,EAAAA,EAAIvL,KAAK0H,IAAM+D,EAAAA,EAAKzL,KAAK0H,GACtDqE,MAAQrE,GACA8D,EAAAA,EAAKxL,KAAK0H,GACH8D,EAAAA,EAAKO,MAAMrE,GAEb+D,EAAAA,EAAKzL,KAAK0H,GACR+D,EAAAA,EAAKM,MAAMrE,GAGX6D,EAAAA,EAAIQ,MAAMrE,GAGzBoF,UAAYpF,IACDohD,EAAAA,EAAAA,IAASphD,GACVA,EACAA,EAAE8N,eAAe,OACbhK,EAAAA,EAAKsB,UAAUpF,GACf+D,EAAAA,EAAKqB,UAAUpF,G,6EClBjC,MACMqhD,EAAU,IACT96C,EAAAA,GACHnB,UAAYpF,GAAM/I,KAAK4N,MAHL7E,KAAM7D,EAAAA,EAAAA,GAAM,EAAG,IAAK6D,GAGTshD,CAAathD,KAExC8D,EAAO,CACTxL,MAAMwoD,EAAAA,EAAAA,GAAc,MAAO,OAC3Bz8C,OAAO48C,EAAAA,EAAAA,GAAW,MAAO,QAAS,QAClC77C,UAAWzO,IAAA,IAAC,IAAE+N,EAAG,MAAEC,EAAK,KAAEC,EAAMH,MAAOy8C,EAAU,GAAGvqD,EAAA,MAAK,QACrD0qD,EAAQj8C,UAAUV,GAClB,KACA28C,EAAQj8C,UAAUT,GAClB,KACA08C,EAAQj8C,UAAUR,GAClB,MACAu8C,EAAAA,EAAAA,IAAS18C,EAAAA,GAAMW,UAAU87C,IACzB,GAAG,E,uDCfX,MAAMJ,EAAgBA,CAAC5qD,EAAMqrD,IAAcvhD,GAChCmE,SAASi9C,EAAAA,EAAAA,IAASphD,IAAMwhD,EAAAA,GAAiBlpD,KAAK0H,IAAMA,EAAEhJ,WAAWd,IACnEqrD,KACIE,EAAAA,EAAAA,IAAUzhD,IACX6N,OAAOI,UAAUH,eAAeC,KAAK/N,EAAGuhD,IAE9CN,EAAaA,CAACS,EAAOC,EAAOC,IAAW5hD,IACzC,KAAKohD,EAAAA,EAAAA,IAASphD,GACV,OAAOA,EACX,MAAOxD,EAAGC,EAAGE,EAAG8H,GAASzE,EAAE+X,MAAM8pC,EAAAA,IACjC,MAAO,CACH,CAACH,GAAQjpC,WAAWjc,GACpB,CAACmlD,GAAQlpC,WAAWhc,GACpB,CAACmlD,GAAQnpC,WAAW9b,GACpB8H,WAAiB5M,IAAV4M,EAAsBgU,WAAWhU,GAAS,EACpD,C,yDCfL,MAAMq9C,EAAc,IAAI9rD,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAAS+rD,EAAmB/hD,GACxB,MAAO9H,EAAMb,GAAS2I,EAAEgiD,MAAM,GAAI,GAAG/I,MAAM,KAC3C,GAAa,gBAAT/gD,EACA,OAAO8H,EACX,MAAOuG,GAAUlP,EAAM0gB,MAAM8pC,EAAAA,KAAe,GAC5C,IAAKt7C,EACD,OAAOvG,EACX,MAAMiiD,EAAO5qD,EAAMwhD,QAAQtyC,EAAQ,IACnC,IAAIixC,EAAesK,EAAY/qD,IAAImB,GAAQ,EAAI,EAG/C,OAFIqO,IAAWlP,IACXmgD,GAAgB,KACbt/C,EAAO,IAAMs/C,EAAeyK,EAAO,GAC9C,CACA,MAAMC,EAAgB,uBAChBvqD,EAAS,IACRU,EAAAA,EACHohB,kBAAoBzZ,IAChB,MAAMmiD,EAAYniD,EAAE+X,MAAMmqC,GAC1B,OAAOC,EAAYA,EAAUp8C,IAAIg8C,GAAoB5iC,KAAK,KAAOnf,CAAC,E,iECd1E,MAAMoiD,EAAe,SACfC,EAAc,QACdC,EAAY,MACZC,EAAqB,OACrBC,EAAc,MAEdC,EAAe,kOACrB,SAASt8C,EAAoB9O,GACzB,MAAMqrD,EAAgBrrD,EAAMsrD,WACtBn8C,EAAS,GACTH,EAAU,CACZpC,MAAO,GACPsC,OAAQ,GACRD,IAAK,IAEHQ,EAAQ,GACd,IAAI1M,EAAI,EACR,MAmBM6+C,EAnBYyJ,EAAc7J,QAAQ4J,GAAeG,IAC/C3+C,EAAAA,EAAM3L,KAAKsqD,IACXv8C,EAAQpC,MAAM8D,KAAK3N,GACnB0M,EAAMiB,KAAKs6C,GACX77C,EAAOuB,KAAK9D,EAAAA,EAAMI,MAAMu+C,KAEnBA,EAAY5rD,WAAWurD,IAC5Bl8C,EAAQC,IAAIyB,KAAK3N,GACjB0M,EAAMiB,KAAKu6C,GACX97C,EAAOuB,KAAK66C,KAGZv8C,EAAQE,OAAOwB,KAAK3N,GACpB0M,EAAMiB,KAAKq6C,GACX57C,EAAOuB,KAAK0Q,WAAWmqC,OAEzBxoD,EACKooD,KAEavJ,MAAMuJ,GAC9B,MAAO,CAAEh8C,SAAQyyC,QAAO5yC,UAASS,QACrC,CACA,SAAS+7C,EAAkB7iD,GACvB,OAAOmG,EAAoBnG,GAAGwG,MAClC,CACA,SAASP,EAAkB8d,GACvB,MAAM,MAAEk1B,EAAK,MAAEnyC,GAAUX,EAAoB4d,GACvC++B,EAAc7J,EAAMpiD,OAC1B,OAAQmJ,IACJ,IAAI4F,EAAS,GACb,IAAK,IAAIxL,EAAI,EAAGA,EAAI0oD,EAAa1oD,IAE7B,GADAwL,GAAUqzC,EAAM7+C,QACHvC,IAATmI,EAAE5F,GAAkB,CACpB,MAAMlE,EAAO4Q,EAAM1M,GAEfwL,GADA1P,IAASksD,GACCjB,EAAAA,EAAAA,IAASnhD,EAAE5F,IAEhBlE,IAASmsD,EACJp+C,EAAAA,EAAMmB,UAAUpF,EAAE5F,IAGlB4F,EAAE5F,EAEpB,CAEJ,OAAOwL,CAAM,CAErB,CACA,MAAMm9C,EAAwB/iD,GAAmB,kBAANA,EAAiB,EAAIA,EAMhE,MAAM3H,EAAU,CACZC,KAhFJ,SAAc0H,GACV,IAAI2G,EAAImqC,EACR,OAAQzzC,MAAM2C,KACVohD,EAAAA,EAAAA,IAASphD,MACwB,QAA9B2G,EAAK3G,EAAE+X,MAAM8pC,EAAAA,WAAgC,IAAPl7C,OAAgB,EAASA,EAAG9P,SAAW,KAC3C,QAA9Bi6C,EAAK9wC,EAAE+X,MAAMirC,EAAAA,WAAgC,IAAPlS,OAAgB,EAASA,EAAGj6C,SAAW,GAChF,CACZ,EA0EIwN,MAAOw+C,EACP58C,oBACAwT,kBATJ,SAA2BzZ,GACvB,MAAMijD,EAASJ,EAAkB7iD,GAEjC,OADoBiG,EAAkBjG,EAC/BkjD,CAAYD,EAAOl9C,IAAIg9C,GAClC,E,mEC/EA,MAAMx8C,EAAS,CACXjO,KAAO0H,GAAmB,kBAANA,EACpBqE,MAAOoU,WACPrT,UAAYpF,GAAMA,GAEhByE,EAAQ,IACP8B,EACHnB,UAAYpF,IAAM7D,EAAAA,EAAAA,GAAM,EAAG,EAAG6D,IAE5BymB,EAAQ,IACPlgB,EACH8e,QAAS,E,6FCXb,MAAM89B,EAAkBlB,IAAI,CACxB3pD,KAAO0H,IAAMohD,EAAAA,EAAAA,IAASphD,IAAMA,EAAEojD,SAASnB,IAAiC,IAAxBjiD,EAAEi5C,MAAM,KAAKpiD,OAC7DwN,MAAOoU,WACPrT,UAAYpF,GAAM,GAAGA,IAAIiiD,MAEvB1G,EAAU4H,EAAe,OACzBj5C,EAAUi5C,EAAe,KACzB59B,EAAK49B,EAAe,MACpB1H,EAAK0H,EAAe,MACpB3H,EAAK2H,EAAe,MACpBvG,EAAqB,IACpB1yC,EACH7F,MAAQrE,GAAMkK,EAAQ7F,MAAMrE,GAAK,IACjCoF,UAAYpF,GAAMkK,EAAQ9E,UAAc,IAAJpF,G,+ECTxC,MAAMmhD,EAAYnhD,GAAM/I,KAAK4N,MAAU,IAAJ7E,GAAc,IAC3C6hD,EAAa,8BACbmB,EAAa,qHACbxB,EAAmB,sHACzB,SAASJ,EAASphD,GACd,MAAoB,kBAANA,CAClB,CACA,SAASyhD,EAAUzhD,GACf,OAAY,MAALA,CACX,C,oECXA,MAAMqjD,UAA8BlE,EAAAA,GAChC3mD,WAAAA,GACI4R,SAAS7C,WACT1O,KAAK+M,OAAS,GACd/M,KAAKyqD,OAAS,IAAIzhC,GACtB,CACArL,GAAAA,CAAIte,GACA,MAAMqrD,GAAYz5B,EAAAA,EAAAA,GAAkB5xB,GACpC,IAAKqrD,EACD,OAMJ,MAAMC,EAAY3qD,KAAKyqD,OAAOxxC,IAAIyxC,IAAc,EAChD1qD,KAAKyqD,OAAOl0C,IAAIm0C,EAAWC,EAAY,GACrB,IAAdA,IACA3qD,KAAK+M,OAAOmC,KAAKw7C,GACjB1qD,KAAKwQ,UAKT,IAAIo6C,GAAa,EACjB,MAAO,KACH,GAAIA,EACA,OACJA,GAAa,EACb,MAAMC,EAAW7qD,KAAKyqD,OAAOxxC,IAAIyxC,GAAa,EAC9C1qD,KAAKyqD,OAAOl0C,IAAIm0C,EAAWG,GACV,IAAbA,KACA5e,EAAAA,EAAAA,IAAWjsC,KAAK+M,OAAQ29C,GACxB1qD,KAAKwQ,SACT,CAER,CACAA,MAAAA,GACIxQ,KAAKuW,IAAIvW,KAAK+M,OAAO/O,OAASgC,KAAK+M,OAAOuZ,KAAK,MAAQ,OAC3D,E,cCxCJ,SAASjM,EAAqBd,EAAezU,GACzC,IAAIgJ,EACJ,IAAKyL,EAAcuW,gBACf,OACJ,IAAID,EAAatW,EAAcO,SAAS,cAaxC,OARK+V,IAAqD,QAApC/hB,EAAKyL,EAAcsJ,MAAMoH,aAA0B,IAAPnc,OAAgB,EAASA,EAAG+hB,cAC1FA,EAAa,IAAI26B,EAAsB,QACvCjxC,EAAcwkC,SAAS,aAAcluB,ICZ7C,SAAiCrxB,GAC7B,OAAO8M,SAAQ6f,EAAAA,EAAAA,GAAc3sB,IAAUA,EAAMmf,IACjD,CDgBQmtC,CAAwBj7B,GACjBA,EAAWlS,IAAI7Y,QAD1B,CAGJ,C,oEEnBA,SAASmsB,EAAkB5xB,GACvB,OAAIpB,EAAAA,EAAeC,IAAImB,GACZ,YAEFnC,EAAAA,EAAkBgB,IAAImB,IACpB6c,EAAAA,EAAAA,GAAY7c,QADlB,CAGT,C,kCCXA,MAAM8rB,EAAiB3sB,GAAU8M,QAAQ9M,GAASA,EAAMoa,Y","sources":["../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/WillChangeMotionValue.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/get-will-change-name.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return options.type === \"spring\" || !isWaapiSupportedEasing(options.ease);\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff, \n/**\n * Currently used to remove values from will-change when an animation ends.\n * Preferably this would be handled by event listeners on the MotionValue\n * but these aren't consistent enough yet when considering the different ways\n * an animation can be cancelled.\n */\nonEnd) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n            onEnd && onEnd();\n        },\n        onStop: onEnd,\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff, addValueToWillChange(visualElement, key)));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.getProps()[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nlet scheduleHandoffComplete = false;\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete &&\n        ((_a = window.MotionHasOptimisedAnimation) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        wantsHandoff.current = false;\n        // This ensures all future calls to animateChanges() will run in useEffect\n        if (!scheduleHandoffComplete) {\n            scheduleHandoffComplete = true;\n            queueMicrotask(completeHandoff);\n        }\n    });\n    return visualElement;\n}\nfunction completeHandoff() {\n    window.MotionHandoffIsComplete = true;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    /**\n     * If the willChange style has been manually set as a string, set\n     * applyWillChange to false to prevent it from automatically being applied.\n     */\n    if (visualElement && style && typeof style.willChange === \"string\") {\n        visualElement.applyWillChange = false;\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { getWillChangeName } from '../../value/use-will-change/get-will-change-name.mjs';\nimport { addUniqueItem } from '../../utils/array.mjs';\n\nfunction makeState({ applyWillChange = false, scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext, isStatic) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, isStatic ? false : applyWillChange, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext, isStatic);\n    return isStatic ? make() : useConstant(make);\n};\nfunction addWillChange(willChange, name) {\n    const memberName = getWillChangeName(name);\n    if (memberName) {\n        addUniqueItem(willChange, memberName);\n    }\n}\nfunction forEachDefinition(props, definition, callback) {\n    const list = Array.isArray(definition) ? definition : [definition];\n    for (let i = 0; i < list.length; i++) {\n        const resolved = resolveVariantFromProps(props, list[i]);\n        if (resolved) {\n            const { transitionEnd, transition, ...target } = resolved;\n            callback(target, transitionEnd);\n        }\n    }\n}\nfunction makeLatestValues(props, context, presenceContext, shouldApplyWillChange, scrapeMotionValues) {\n    var _a;\n    const values = {};\n    const willChange = [];\n    const applyWillChange = shouldApplyWillChange && ((_a = props.style) === null || _a === void 0 ? void 0 : _a.willChange) === undefined;\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        forEachDefinition(props, variantToSet, (target, transitionEnd) => {\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd) {\n                values[key] = transitionEnd[key];\n            }\n        });\n    }\n    // Add animating values to will-change\n    if (applyWillChange) {\n        if (animate && initial !== false && !isAnimationControls(animate)) {\n            forEachDefinition(props, animate, (target) => {\n                for (const key in target) {\n                    addWillChange(willChange, key);\n                }\n            });\n        }\n        if (willChange.length) {\n            values.willChange = willChange.join(\",\");\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        applyWillChange: true,\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n            this.removeWillChange = addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        var _a;\n        (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false, addValueToWillChange(this.visualElement, axis)));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedTransformAnimation(appearId)) {\n        window.MotionCancelOptimisedTransform(appearId);\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedTransform &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * If true, will-change will be applied to the element. Only HTMLVisualElements\n         * currently support this.\n         */\n        this.applyWillChange = false;\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            this.isRenderScheduled = false;\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.isRenderScheduled = false;\n        this.scheduleRender = () => {\n            if (!this.isRenderScheduled) {\n                this.isRenderScheduled = true;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.3.30\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.3.30 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.applyWillChange = true;\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","const noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.3.30\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, isNullish, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\nfunction isNullish(v) {\n    return v == null;\n}\n\nexport { colorRegex, floatRegex, isNullish, isString, sanitize, singleColorRegex };\n","import { MotionValue } from '../index.mjs';\nimport { getWillChangeName } from './get-will-change-name.mjs';\nimport { removeItem } from '../../utils/array.mjs';\n\nclass WillChangeMotionValue extends MotionValue {\n    constructor() {\n        super(...arguments);\n        this.output = [];\n        this.counts = new Map();\n    }\n    add(name) {\n        const styleName = getWillChangeName(name);\n        if (!styleName)\n            return;\n        /**\n         * Update counter. Each value has an indepdent counter\n         * as multiple sources could be requesting the same value\n         * gets added to will-change.\n         */\n        const prevCount = this.counts.get(styleName) || 0;\n        this.counts.set(styleName, prevCount + 1);\n        if (prevCount === 0) {\n            this.output.push(styleName);\n            this.update();\n        }\n        /**\n         * Prevents the remove function from being called multiple times.\n         */\n        let hasRemoved = false;\n        return () => {\n            if (hasRemoved)\n                return;\n            hasRemoved = true;\n            const newCount = this.counts.get(styleName) - 1;\n            this.counts.set(styleName, newCount);\n            if (newCount === 0) {\n                removeItem(this.output, styleName);\n                this.update();\n            }\n        };\n    }\n    update() {\n        this.set(this.output.length ? this.output.join(\", \") : \"auto\");\n    }\n}\n\nexport { WillChangeMotionValue };\n","import { WillChangeMotionValue } from './WillChangeMotionValue.mjs';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    var _a;\n    if (!visualElement.applyWillChange)\n        return;\n    let willChange = visualElement.getValue(\"willChange\");\n    /**\n     * If we haven't created a willChange MotionValue, and the we haven't been\n     * manually provided one, create one.\n     */\n    if (!willChange && !((_a = visualElement.props.style) === null || _a === void 0 ? void 0 : _a.willChange)) {\n        willChange = new WillChangeMotionValue(\"auto\");\n        visualElement.addValue(\"willChange\", willChange);\n    }\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { acceleratedValues } from '../../animation/animators/utils/accelerated-values.mjs';\nimport { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction getWillChangeName(name) {\n    if (transformProps.has(name)) {\n        return \"transform\";\n    }\n    else if (acceleratedValues.has(name)) {\n        return camelToDash(name);\n    }\n}\n\nexport { getWillChangeName };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["acceleratedValues","Set","underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","_ref","keyframes","length","transformProps","has","startsWith","Math","sqrt","instantAnimationState","isNotNull","value","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","index","undefined","memo","callback","result","isAnimatable","name","Array","isArray","complex","test","BaseAnimation","constructor","autoplay","delay","repeatDelay","options","this","isStopped","hasAttemptedResolve","createdAt","time","now","updateFinishedPromise","calcStartTime","resolvedAt","resolved","_resolved","flushKeyframeResolvers","onKeyframesResolved","velocity","onComplete","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","warning","current","i","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","max","velocityPerSecond","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","secondsToMilliseconds","dampingRatio","clamp","millisecondsToSeconds","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","exp","d","e","pow","f","g","initialGuess","rootIterations","approximateRoot","isNaN","durationKeys","physicsKeys","isSpringType","keys","some","key","spring","restDelta","origin","target","state","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","min","sinh","cosh","calculatedDuration","next","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","v","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","backOut","backIn","reverseEasing","backInOut","mirrorEasing","easingLookup","linear","circIn","circInOut","circOut","anticipate","p","easingDefinitionToFunction","definition","invariant","x1","y1","x2","y2","hueToRgb","q","mixImmediate","mixLinearColor","from","to","fromExpo","expo","colorTypes","hex","rgba","hsla","asRGBA","color","find","Boolean","model","parse","hue","saturation","lightness","alpha","red","green","blue","round","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixNumber","transform","invisibleValues","mixNumber$1","getMixer","isCSSVariableToken","mixComplex","mixArray","mixObject","output","numValues","blendValue","map","template","createTransformer","originStats","analyseComplexValue","targetStats","indexes","var","number","values","mixVisibility","pipe","_a","orderedOrigin","pointers","types","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","arguments","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","push","createMixers","interpolator","progressInRange","progress","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","easing","splice","frameloopDriver","update","passTimestamp","timestamp","start","frame","stop","cancelFrame","frameData","isProcessing","generators","decay","tween","percentToProgress","percent","MainThreadAnimation","super","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","resolver","cancel","teardown","onStop","motionValue","element","KeyframeResolver$1","KeyframeResolver","onResolved","scheduleResolve","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","newTime","driver","newSpeed","hasChanged","isScheduled","resume","onPlay","complete","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","Object","hasOwnProperty","call","Element","prototype","AcceleratedAnimation","DOMKeyframesResolver","owner","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","animation","valueName","keyframeOptions","animate","fill","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","set","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","HTMLElement","getProps","supportsScrollTimeline","window","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","cancelAll","prevProgress","onFrame","observeTimeline","forEach","cancelTimeline","methodName","controls","animateMotionValue","transition","isHandoff","onEnd","valueTransition","getValueTransition","getVelocity","isTransitionDefined","shouldSkip","MotionGlobalConfig","skipAnimations","get","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","visualElement","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","getValue","latestValues","valueTarget","MotionHandoffAnimation","appearId","getOptimisedAppearId","shouldReduceMotion","addValueToWillChange","setTarget","animateVariant","variant","resolveVariant","presenceContext","custom","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","delayChildren","staggerChildren","staggerDirection","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","notify","animateChildren","when","first","last","sortNodePosition","animateVisualElement","resolvedDefinition","optimizedAppearDataAttribute","camelToDash","isKeyframesTarget","_delay","acos","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","step","schedule","queue","add","delete","process","clear","createRenderStep","read","resolveKeyframes","preRender","render","postRender","processBatch","useManualTiming","performance","keepAlive","immediate","requestAnimationFrame","clearTime","queueMicrotask","splitCSSVariableRegex","getVariableValue","depth","token","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","trim","isNumericalString","parseFloat","invalidTemplates","unresolvedKeyframes","readKeyframes","keyframe","resolveNoneKeyframes","positionalKeys","originType","findDimensionValueType","targetType","isNumOrPxType","needsMeasurement","noneKeyframeIndexes","isZeroValueString","animatableTemplate","noneIndex","getAnimatableNone","makeNoneKeyframesAnimatable","measureInitialState","suspendedScrollY","pageYOffset","measuredOrigin","positionalValues","measureViewportBox","measureKeyframe","jump","measureEndState","finalKeyframeIndex","removedTransforms","unsetTransformName","unsetTransformValue","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","MotionContext","PresenceContext","LazyContext","strict","microtask","cancelMicrotask","isRefObject","ref","SwitchLayoutGroupContext","scheduleHandoffComplete","useVisualElement","Component","visualState","props","createVisualElement","ProjectionNodeConstructor","parent","useContext","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","initial","initialLayoutGroupConfig","projection","initialPromotionConfig","layoutId","layout","drag","dragConstraints","layoutScroll","layoutRoot","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","createProjectionNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","useIsomorphicLayoutEffect","updateFeatures","animateChanges","useEffect","completeHandoff","allowProjection","useMotionRef","externalRef","useCallback","instance","mount","unmount","isVariantLabel","isAnimationControls","variantPriorityOrder","variantProps","isControllingVariants","isVariantNode","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","exit","focus","hover","tap","pan","inView","featureDefinitions","isEnabled","LayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","useLayoutId","isBrowser","useStrictMode","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","children","jsx","_ref2","layoutGroupId","id","createMotionProxy","createConfig","Proxy","componentCache","Map","_target","lowercaseSVGElements","isSVGComponent","includes","indexOf","scaleCorrectors","isForcedMotionValue","getValueAsType","translateAlias","y","z","transformPerspective","numTransforms","transformPropOrder","buildHTMLStyles","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","isCSSVariableName","valueAsType","numberValueTypes","transformString","transformIsDefault","valueIsDefault","buildTransform","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","source","isMotionValue","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","default","calcOrigin","px","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","width","height","calcSVGTransformOrigin","scale","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createElement","renderHTML","styleProp","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","liveStyle","willChange","applyWillChange","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveMotionValue","unwrappedValue","isCustomValue","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","addWillChange","memberName","getWillChangeName","addUniqueItem","forEachDefinition","list","resolveVariantFromProps","shouldApplyWillChange","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","whileHover","setActive","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","prev","prevLength","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileDrag","whileFocus","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","SCALE_MIN","SCALE_MAX","TRANSLATE_MIN","TRANSLATE_MAX","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","has2DTranslate","rotate","rotateX","rotateY","skewX","skewY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","removeWillChange","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","useId","usePresence","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","isDirty","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedTransformAnimation","MotionCancelOptimisedTransform","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","SubscriptionManager","notifyListeners","subscriptionManager","_len","args","_key","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacity","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","rotateZ","resetValues","_b","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","dimensionValueTypes","propEventHandlers","numVariantProps","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","isRenderScheduled","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","addValue","hasValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","defaultValue","readValue","getBaseTargetFromProps","readValueFromInstance","testValueType","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","getDefaultValueType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig","str","replace","checkStringStartsWith","startsAsVariableToken","singleCssVariableRegex","split","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","_ref3","paddingLeft","paddingRight","_ref4","_ref5","paddingTop","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","translateX","translateY","defaultValueType","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","degrees","vw","vh","int","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","scaleZ","skew","translateZ","perspective","progressPercentage","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","toResolve","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","elementsToMeasure","transformsToRestore","restore","scrollTo","readAllKeyframes","isAsync","isComplete","currentValue","valueAsRead","setFinalKeyframe","renderEndStyles","getValueState","setMotionValue","resolveFinalValueInKeyframes","item","any","combineFunctions","transformers","toFromDifference","subscriptions","numSubscriptions","getSize","seconds","milliseconds","init","useLayoutEffect","frameDuration","collectMotionValues","MotionValue","_this","version","canTrackVelocity","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","prevFrameValue","prevUpdatedAt","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","isColorString","r","parseInt","splitColor","alpha$1","sanitize","isString","rgbUnit","clampRgbUnit","testProp","singleColorRegex","isNullish","aName","bName","cName","floatRegex","maxDefaults","applyDefaultFilter","slice","unit","functionRegex","functions","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","originalValue","toString","parsedValue","parseComplexValue","numSections","convertNumbersToZero","colorRegex","parsed","transformer","createUnitType","endsWith","WillChangeMotionValue","counts","styleName","prevCount","hasRemoved","newCount","isWillChangeMotionValue"],"sourceRoot":""}